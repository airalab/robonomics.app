{"version":3,"file":"js/app.5cc723d6.js","mappings":"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","sources":["webpack://dapp-robonomics.network/./src/config.js","webpack://dapp-robonomics.network/./src/hooks/useAccount.js","webpack://dapp-robonomics.network/./src/hooks/useDevices.js","webpack://dapp-robonomics.network/./src/hooks/useRobonomics.js","webpack://dapp-robonomics.network/./src/hooks/useSend.js","webpack://dapp-robonomics.network/./src/hooks/useSubscription.js","webpack://dapp-robonomics.network/./src/App.vue","webpack://dapp-robonomics.network/./src/components/Header.vue","webpack://dapp-robonomics.network/./src/utils/tools.js","webpack://dapp-robonomics.network/./src/components/Header.vue?801b","webpack://dapp-robonomics.network/./src/components/Footer.vue","webpack://dapp-robonomics.network/./src/components/Footer.vue?7cca","webpack://dapp-robonomics.network/./src/components/layouts/Main.vue","webpack://dapp-robonomics.network/./src/components/layouts/Main.vue?a356","webpack://dapp-robonomics.network/./src/App.vue?7ccd","webpack://dapp-robonomics.network/./src/plugins/ipfs.js","webpack://dapp-robonomics.network/./src/utils/encryptor.js","webpack://dapp-robonomics.network/./src/plugins/robonomicsAccountManager.js","webpack://dapp-robonomics.network/./src/plugins/robonomics.js","webpack://dapp-robonomics.network/./src/plugins/web3.js","webpack://dapp-robonomics.network/./src/views/hardware/Altruist.vue","webpack://dapp-robonomics.network/./src/views/hardware/Hikikomori.vue","webpack://dapp-robonomics.network/./src/views/hardware/Riscv.vue","webpack://dapp-robonomics.network/./src/components/web3/NftInfo.vue","webpack://dapp-robonomics.network/./src/components/web3/NftToken.vue","webpack://dapp-robonomics.network/./src/components/web3/BtnSend.vue","webpack://dapp-robonomics.network/./src/components/web3/BtnSend.vue?fc9a","webpack://dapp-robonomics.network/./src/components/web3/FreeMinimum.vue","webpack://dapp-robonomics.network/./src/components/web3/apiNftOracle.js","webpack://dapp-robonomics.network/./src/components/web3/FreeMinimum.vue?6b81","webpack://dapp-robonomics.network/./src/components/web3/NftToken.vue?6082","webpack://dapp-robonomics.network/./src/components/web3/NftInfo.vue?0a2c","webpack://dapp-robonomics.network/./src/views/hardware/Season-pass-2.vue","webpack://dapp-robonomics.network/./src/views/hardware/Season-pass-2.vue?7d65","webpack://dapp-robonomics.network/./src/eth_chains.js","webpack://dapp-robonomics.network/./src/views/hardware/Season-pass.vue","webpack://dapp-robonomics.network/./src/views/hardware/Season-pass.vue?e5cd","webpack://dapp-robonomics.network/./src/views/Home.vue","webpack://dapp-robonomics.network/./src/views/Home.vue?9051","webpack://dapp-robonomics.network/./src/views/humanoid/RobonomicsLaunch.vue","webpack://dapp-robonomics.network/./src/views/humanoid/config.js","webpack://dapp-robonomics.network/./src/views/humanoid/RobonomicsLaunch.vue?4a2b","webpack://dapp-robonomics.network/./src/views/humanoid/RobonomicsApp.vue","webpack://dapp-robonomics.network/./src/views/humanoid/RobonomicsApp.vue?7643","webpack://dapp-robonomics.network/./src/views/PathNotFound.vue","webpack://dapp-robonomics.network/./src/views/PathNotFound.vue?dbdf","webpack://dapp-robonomics.network/./src/views/RwsActivate.vue","webpack://dapp-robonomics.network/./src/hooks/useBalance.js","webpack://dapp-robonomics.network/./src/views/RwsActivate.vue?116c","webpack://dapp-robonomics.network/./src/views/RwsSetup.vue","webpack://dapp-robonomics.network/./src/views/RwsSetup.vue?d6aa","webpack://dapp-robonomics.network/./src/views/RwsSetupNew.vue","webpack://dapp-robonomics.network/./src/views/RwsSetupNew.vue?1f64","webpack://dapp-robonomics.network/./src/views/hardware/Energy-monitor.vue","webpack://dapp-robonomics.network/./src/views/hardware/Energy-monitor.vue?2905","webpack://dapp-robonomics.network/./src/views/telemetry/Telemetry.vue","webpack://dapp-robonomics.network/./src/views/telemetry/Launch.vue","webpack://dapp-robonomics.network/./src/hooks/useIpfs.js","webpack://dapp-robonomics.network/./src/utils/telemetry.js","webpack://dapp-robonomics.network/./src/views/telemetry/common.js","webpack://dapp-robonomics.network/./src/views/telemetry/launch.js","webpack://dapp-robonomics.network/./src/views/telemetry/Launch.vue?a7de","webpack://dapp-robonomics.network/./src/views/telemetry/Libp2p.vue","webpack://dapp-robonomics.network/./src/utils/libp2p/ha.js","webpack://dapp-robonomics.network/./src/utils/libp2p/libp2p.js","webpack://dapp-robonomics.network/./src/views/telemetry/libp2p.js","webpack://dapp-robonomics.network/./src/views/telemetry/Libp2p.vue?d944","webpack://dapp-robonomics.network/./src/views/telemetry/Telemetry.vue?f25e","webpack://dapp-robonomics.network/./src/router.js","webpack://dapp-robonomics.network/./src/store.js","webpack://dapp-robonomics.network/./src/utils/filters.js","webpack://dapp-robonomics.network/./src/main.js","webpack://dapp-robonomics.network/webpack/bootstrap","webpack://dapp-robonomics.network/webpack/runtime/amd options","webpack://dapp-robonomics.network/webpack/runtime/chunk loaded","webpack://dapp-robonomics.network/webpack/runtime/compat get default export","webpack://dapp-robonomics.network/webpack/runtime/create fake namespace object","webpack://dapp-robonomics.network/webpack/runtime/define property getters","webpack://dapp-robonomics.network/webpack/runtime/ensure chunk","webpack://dapp-robonomics.network/webpack/runtime/get javascript chunk filename","webpack://dapp-robonomics.network/webpack/runtime/get mini-css chunk filename","webpack://dapp-robonomics.network/webpack/runtime/global","webpack://dapp-robonomics.network/webpack/runtime/hasOwnProperty shorthand","webpack://dapp-robonomics.network/webpack/runtime/load script","webpack://dapp-robonomics.network/webpack/runtime/make namespace object","webpack://dapp-robonomics.network/webpack/runtime/node module decorator","webpack://dapp-robonomics.network/webpack/runtime/publicPath","webpack://dapp-robonomics.network/webpack/runtime/css loading","webpack://dapp-robonomics.network/webpack/runtime/jsonp chunk loading","webpack://dapp-robonomics.network/webpack/startup"],"sourcesContent":["export default {\n  default_rpc_endpoint: \"wss://polkadot.rpc.robonomics.network/\",\n  nft_oracle_endpoint: \"https://nft-oracle.robonomics.network/\"\n};\n\n// SEPOLIA\nexport const address = {\n  xrt: \"0x9516AFb2b538CAbDcC04e2289E9d48eEBD8fa6ef\",\n  tokenVesting: \"0xf1ba89053f407DF832b135F19fDB064C7A97E1F3\",\n  nft: \"0x0c0C092f372c3Cb49D116A14fA7dcc40e84275aa\"\n};\n","import { ref } from \"vue\";\nimport { useRobonomics } from \"./useRobonomics\";\n\nexport const useAccount = () => {\n  const account = ref(null);\n  const { accountManager } = useRobonomics();\n  if (accountManager.account) {\n    account.value = accountManager.account.address;\n  }\n  const unsubscribe = accountManager.onChange((res) => {\n    account.value = res.address;\n  });\n  return { account, unsubscribe };\n};\n","import configApp from \"@/config\";\nimport { validateAddress } from \"@polkadot/util-crypto\";\nimport { onUnmounted, ref, watch } from \"vue\";\nimport { useRobonomics } from \"./useRobonomics\";\n\nexport const getDevices = async (robonomics, owner) => {\n  try {\n    const result = await robonomics.rws.getDevices(owner);\n    return result.map((item) => {\n      return item.toHuman();\n    });\n  } catch (error) {\n    console.log(error);\n    return [];\n  }\n};\n\nexport const useDevices = (initialOwner = null) => {\n  const { isReady, getInstance } = useRobonomics();\n  const owner = ref(initialOwner);\n  const devices = ref([]);\n\n  const getDevices = async (owner) => {\n    const endpoint =\n      localStorage.getItem(\"rpc-parachain\") || configApp.default_rpc_endpoint;\n    const lsKey = `hadevices:${endpoint}:${owner}`;\n\n    if (!isReady.value) {\n      const data = localStorage.getItem(lsKey);\n      if (data) {\n        try {\n          const parsedData = JSON.parse(data);\n          // console.log(\"getDevices cache\");\n          return { data: parsedData.value, cache: true };\n        } catch (error) {\n          console.log(\"hadevices bad\", error);\n        }\n      } else {\n        return { data: [], cache: true };\n      }\n    } else {\n      try {\n        const result = await getInstance().rws.getDevices(owner);\n        const list = result.map((item) => {\n          return item.toHuman();\n        });\n        localStorage.setItem(\n          lsKey,\n          JSON.stringify({ time: Date.now(), value: list })\n        );\n        // console.log(\"getDevices chain\");\n        return { data: list, cache: false };\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    return { data: [], cache: false };\n  };\n\n  const loadDevices = async () => {\n    if (owner.value) {\n      try {\n        validateAddress(owner.value);\n        const result = await getDevices(owner.value);\n        devices.value = result.data;\n        if (result.cache) {\n          const stop = watch(\n            isReady,\n            async () => {\n              if (isReady.value) {\n                const result = await getDevices(owner.value);\n                devices.value = result.data;\n                stop();\n              }\n            },\n            { immediate: true }\n          );\n        }\n        return;\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    devices.value = [];\n  };\n\n  watch(\n    owner,\n    async () => {\n      await loadDevices();\n    },\n    {\n      immediate: true\n    }\n  );\n\n  watch(\n    isReady,\n    async (isReady) => {\n      if (isReady) {\n        const unsubscribe = await getInstance().events.on(\n          { section: \"rws\", method: \"NewDevices\" },\n          async (result) => {\n            for (const event of result) {\n              if (event.data[0].toHuman() === owner.value) {\n                await loadDevices();\n              }\n            }\n          }\n        );\n        onUnmounted(unsubscribe);\n      }\n    },\n    { immediate: true }\n  );\n\n  return {\n    owner,\n    devices,\n    loadDevices\n  };\n};\n","import { inject } from \"vue\";\n\nexport function useRobonomics() {\n  const provider = inject(\"RobonomicsProvider\");\n  return {\n    accountManager: provider.accountManager,\n    isReady: provider.isReady,\n    robonomics: provider.instance,\n    getInstance: () => provider.instance.value\n  };\n}\n","import { ref } from \"vue\";\nimport { useRobonomics } from \"./useRobonomics\";\nimport { useSubscription } from \"./useSubscription\";\n\nexport const useSend = () => {\n  const { isReady, getInstance, accountManager } = useRobonomics();\n  const { getFreeWeightCalc } = useSubscription();\n\n  const getCallWeight = async (tx, signer) => {\n    if (!signer) {\n      if (accountManager.account) {\n        signer = accountManager.account.address;\n      } else {\n        throw new Error(\"Signer required\");\n      }\n    }\n    if (tx.hasPaymentInfo) {\n      return (await tx.paymentInfo(signer)).weight.toNumber();\n    }\n    return 0;\n  };\n\n  const checkWeight = async (tx, owner) => {\n    const freeWeightCalc = await getFreeWeightCalc(owner);\n    if (freeWeightCalc < 0) {\n      throw new Error(`Not found ledger ${owner}`);\n    }\n    const callWeight = await getCallWeight(tx);\n    if (callWeight > freeWeightCalc) {\n      throw new Error(\n        `The origin account have no enough free weight to process these call. Call weight ${callWeight}, Free weight ${freeWeightCalc}`\n      );\n    }\n  };\n\n  const createTx = () => {\n    const result = ref(null);\n    const error = ref(null);\n    const process = ref(false);\n    return { error, process, result };\n  };\n\n  const send = async (tx, call, subscription = false) => {\n    tx.result.value = null;\n    tx.error.value = null;\n    tx.process.value = true;\n    if (!isReady.value) {\n      tx.error.value = \"Robonomics is not ready\";\n      tx.process.value = false;\n      return;\n    }\n    const robonomics = getInstance();\n    try {\n      if (subscription) {\n        await checkWeight(call, subscription);\n        robonomics.accountManager.useSubscription(subscription);\n      }\n      const nonce = await robonomics.api.rpc.system.accountNextIndex(\n        robonomics.accountManager.account.address\n      );\n      tx.result.value = await robonomics.accountManager.signAndSend(call, {\n        nonce\n      });\n      console.log(\"tx\", tx.result.value.block, tx.result.value.tx);\n    } catch (e) {\n      console.log(e);\n      tx.error.value = e.message;\n    }\n    tx.process.value = false;\n    if (subscription) {\n      robonomics.accountManager.useSubscription(false);\n    }\n    return tx.result;\n  };\n\n  return { createTx, send };\n};\n","import configApp from \"@/config\";\nimport { createType, TypeRegistry } from \"@polkadot/types\";\nimport { validateAddress } from \"@polkadot/util-crypto\";\nimport { computed, ref, shallowRef, watch } from \"vue\";\nimport { useDevices } from \"./useDevices\";\nimport { useRobonomics } from \"./useRobonomics\";\n\nconst getRegistry = () => {\n  const registry = new TypeRegistry();\n  const types = {\n    PalletRobonomicsRwsSubscription: {\n      _enum: {\n        Lifetime: {\n          tps: \"Compact<u32>\"\n        },\n        Daily: {\n          days: \"Compact<u32>\"\n        }\n      }\n    },\n    PalletRobonomicsRwsSubscriptionLedger: {\n      freeWeight: \"Compact<u64>\",\n      issueTime: \"Compact<u64>\",\n      lastUpdate: \"Compact<u64>\",\n      kind: {\n        _enum: {\n          Lifetime: {\n            tps: \"Compact<u32>\"\n          },\n          Daily: {\n            days: \"Compact<u32>\"\n          }\n        }\n      }\n    }\n  };\n  registry.register(types);\n  return registry;\n};\n\nconst DAYS_TO_MS = 24 * 60 * 60 * 1000;\n\nexport const getLedger = async (robonomics, owner) => {\n  const res = await robonomics.rws.getLedger(owner);\n  if (!res.isEmpty) {\n    return res.value;\n  }\n  return null;\n};\n\nexport const getValidUntil = (ledger) => {\n  if (!ledger) {\n    return null;\n  }\n  if (ledger.kind.isLifetime) {\n    return null;\n  }\n  const issue_time = ledger.issueTime.toNumber();\n  let days = 0;\n  if (ledger.kind.isDaily) {\n    days = ledger.kind.value.days.toNumber();\n  }\n  return issue_time + days * DAYS_TO_MS;\n};\n\nexport const useSubscription = (initialOwner = null) => {\n  const owner = ref(initialOwner);\n  const dataRaw = shallowRef(null);\n\n  const { isReady, getInstance } = useRobonomics();\n  const { devices, loadDevices } = useDevices(owner);\n\n  const getReferenceCallWeight = () => {\n    return getInstance().api.consts.rws.referenceCallWeight;\n  };\n\n  const getLedger = async (owner) => {\n    const endpoint =\n      localStorage.getItem(\"rpc-parachain\") || configApp.default_rpc_endpoint;\n    const lsKey = `hasubscription:${endpoint}:${owner}`;\n\n    if (!isReady.value) {\n      const data = localStorage.getItem(lsKey);\n      if (data) {\n        try {\n          const parsedData = JSON.parse(data);\n          // if (parsedData.time + DAYS_TO_MS > Date.now()) {\n          const res = createType(\n            getRegistry(),\n            \"Option<PalletRobonomicsRwsSubscriptionLedger>\",\n            parsedData.value\n          );\n          // console.log(\"getLedger cache\");\n          return { data: res.value, cache: true };\n          // }\n        } catch (error) {\n          console.log(\"hasubscription bad\", error);\n        }\n      } else {\n        return { data: undefined, cache: true };\n      }\n    } else {\n      const res = await getInstance().rws.getLedger(owner);\n      if (!res.isEmpty) {\n        localStorage.setItem(\n          lsKey,\n          JSON.stringify({ time: Date.now(), value: res.value.toJSON() })\n        );\n        // console.log(\"getLedger chain\");\n        return { data: res.value, cache: false };\n      }\n    }\n    return { data: undefined, cache: false };\n  };\n\n  const getFreeWeightCalc = async (owner) => {\n    const ledger = (await getLedger(owner)).data;\n    if (!ledger) {\n      return -1;\n    }\n\n    const freeWeight = ledger.freeWeight.toNumber();\n    const lastUpdate = ledger.lastUpdate.toNumber();\n    const issueTime = ledger.issueTime.toNumber();\n\n    const referenceCallWeight = getReferenceCallWeight();\n    const now = Date.now();\n\n    let utps = (() => {\n      let tps;\n      if (ledger.kind.isLifetime) {\n        tps = ledger.kind.value.tps.toNumber();\n      } else {\n        const days = ledger.kind.value.days.toNumber();\n        const duration_ms = days * DAYS_TO_MS;\n        if (now < issueTime + duration_ms) {\n          tps = 10000;\n        } else {\n          tps = 0;\n        }\n      }\n      return tps;\n    })();\n\n    const delta = now - lastUpdate;\n    return Math.floor(\n      freeWeight + (referenceCallWeight * utps * delta) / 1000000000\n    );\n  };\n\n  const validUntil = computed(() => {\n    if (!dataRaw.value) {\n      return null;\n    }\n    if (dataRaw.value.kind.isLifetime) {\n      return null;\n    }\n    const issue_time = dataRaw.value.issueTime.toNumber();\n    let days = 0;\n    if (dataRaw.value.kind.isDaily) {\n      days = dataRaw.value.kind.value.days.toNumber();\n    }\n    return issue_time + days * DAYS_TO_MS;\n  });\n\n  const countMonth = computed(() => {\n    if (!dataRaw.value) {\n      return 0;\n    }\n    let days = 0;\n    if (dataRaw.value.kind.isDaily) {\n      days = dataRaw.value.kind.value.days.toNumber();\n    }\n    return days / 30;\n  });\n\n  const isActive = computed(() => {\n    if (\n      !dataRaw.value ||\n      (validUntil.value !== null && Date.now() > validUntil.value)\n    ) {\n      return false;\n    }\n    return true;\n  });\n\n  const hasSubscription = computed(() => {\n    return dataRaw.value;\n  });\n\n  const loadLedger = async () => {\n    if (owner.value) {\n      try {\n        validateAddress(owner.value);\n        const result = await getLedger(owner.value);\n        dataRaw.value = result.data;\n        if (result.cache) {\n          const stop = watch(\n            isReady,\n            async () => {\n              if (isReady.value) {\n                const result = await getLedger(owner.value);\n                dataRaw.value = result.data;\n                stop();\n              }\n            },\n            { immediate: true }\n          );\n        }\n        return;\n        // eslint-disable-next-line no-empty\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    dataRaw.value = null;\n  };\n\n  watch(\n    owner,\n    async () => {\n      await loadLedger();\n    },\n    {\n      immediate: true\n    }\n  );\n\n  return {\n    owner,\n    dataRaw,\n    hasSubscription,\n    isActive,\n    countMonth,\n    validUntil,\n    loadLedger,\n    devices,\n    loadDevices,\n    getFreeWeightCalc\n  };\n};\n","<template>\n  <main-layout :pagetitle=\"title\">\n    <router-view />\n  </main-layout>\n</template>\n\n<script>\nimport MainLayout from \"@/components/layouts/Main.vue\";\nimport { inject, ref, watch } from \"vue\";\nimport { useRoute, useRouter } from \"vue-router\";\nimport { useStore } from \"vuex\";\n\nexport default {\n  name: \"App\",\n  components: {\n    MainLayout\n  },\n  setup() {\n    const RobonomicsProvider = inject(\"RobonomicsProvider\");\n    const IpfsProvider = inject(\"IpfsProvider\");\n    const store = useStore();\n    const router = useRouter();\n    const route = useRoute();\n\n    const title = ref();\n\n    // store.commit(\"rws/setKey\", process.env.VUE_APP_ROBONOMICS_UI_KEY);\n    // отказываемся от этой переменной совсем\n    // store.dispatch(\"rws/init\");\n\n    store.commit(\"rws/setLink\", {\n      link: \"activate\",\n      value: router.resolve({ name: \"rwsActivate\" }).path\n    });\n\n    store.commit(\"rws/setLink\", {\n      link: \"setup\",\n      value: router.resolve({ name: \"rwsSetup\" }).path\n    });\n\n    store.commit(\"rws/setLink\", {\n      link: \"setupnew\",\n      value: router.resolve({ name: \"rwsSetupNew\" }).path\n    });\n\n    store.commit(\"rws/setLink\", {\n      link: \"devices\",\n      value: router.resolve({ name: \"telemetry\" }).path\n    });\n\n    store.commit(\"ipfs/setGateways\", IpfsProvider.gateways);\n\n    watch(route, () => {\n      title.value = route?.meta?.title;\n      const resulttitle = title.value\n        ? `${title.value} / Robonomics Dapp`\n        : \"Robonomics Dapp\";\n      document.title = resulttitle;\n      document\n        .querySelector('meta[property=\"og:title\"]')\n        .setAttribute(\"content\", resulttitle);\n    });\n\n    watch(\n      [route, RobonomicsProvider.isReady],\n      ([route, isReady]) => {\n        if (route.name !== \"telemetry\" && isReady) {\n          store.commit(\"polkadot/setConnectionType\", \"parachain\");\n          store.commit(\"polkadot/setConnectionConnected\", true);\n        }\n      },\n      { immediate: true }\n    );\n\n    return {\n      title\n    };\n  }\n};\n</script>\n","<template>\n  <robo-layout-header\n    logoIcon=\"images/icon_white.svg\"\n    :title=\"title\"\n    v-if=\"renderComponent\"\n  >\n\n  <template #nav>\n\n    <robo-section>\n      <nav class=\"nav-rws\">\n        <ul>\n          <li><router-link :to=\"$store.state.robonomicsUIvue.rws.links.activate\" exact>Buy/renew a subscription</router-link></li>\n          <li><router-link :to=\"$store.state.robonomicsUIvue.rws.links.setupnew\" exact>New setup</router-link></li>\n          <li>\n            <router-link :to=\"$store.state.robonomicsUIvue.rws.links.setup\" exact>Your setup<template v-if=\"$store.state.robonomicsUIvue.rws.list.length > 1\">s</template></router-link>\n          </li>\n          <li>\n            <router-link :to=\"$store.state.robonomicsUIvue.rws.links.devices\" exact>Devices & Control</router-link>\n          </li>\n        </ul>\n      </nav>\n    </robo-section>\n\n    <robo-section>\n      <nav class=\"nav-devices\">\n        <ul>\n          <li>\n            <router-link to=\"/hardware/altruist\" exact>\n              <img src=\"images/hardware/altruist.webp\" />\n              <span>Air Quality Sensor “ALTRUIST“</span>\n            </router-link>\n          </li>\n          <li>\n            <router-link to=\"/hardware/riscv\" exact>\n              <img src=\"images/hardware/risc-v.webp\" />\n              <span>Home server with Web3 cloud</span>\n            </router-link>\n          </li>\n          <li>\n            <router-link to=\"/hardware/hikikomori\" exact>\n              <img src=\"images/hardware/hikikomori.webp\" />\n              <span>Smart Tamagotchi “Hikikomori“</span>\n            </router-link>\n          </li>\n          <li>\n            <router-link to=\"/hardware/energy-monitor\" exact>\n              <img src=\"images/hardware/hikikomori.webp\" />\n              <span>Energy monitor with USB-C</span>\n            </router-link>\n          </li>\n        </ul>\n      </nav>\n    </robo-section>\n\n  </template>\n  </robo-layout-header>\n</template>\n\n<script>\nimport { fromUnit, round } from \"@/utils/tools\";\nimport { toRaw } from \"vue\";\n\nexport default {\n  props: {\n    title: {\n      type: String,\n      default: \"Robonomics Dapp\"\n    }\n  },\n  inject: [\"RobonomicsProvider\"],\n  data() {\n    return {\n      renderComponent: true,\n    };\n  },\n  computed: {\n    robonomics: function () {\n      return toRaw(this.RobonomicsProvider.instance.value);\n    }\n  },\n  watch: {\n    \"$store.state.robonomicsUIvue.polkadot.extensionObj\": function (value) {\n      if (\n        value.signer &&\n        value.signer.signRaw &&\n        this.$store.state.robonomicsUIvue.polkadot.address\n      ) {\n        this.handlerAccount(this.$store.state.robonomicsUIvue.polkadot.address);\n      }\n    },\n    \"$store.state.robonomicsUIvue.polkadot.address\": {\n      handler: function (value) {\n        if (\n          value &&\n          this.$store.state.robonomicsUIvue.polkadot.extensionObj.signer &&\n          this.$store.state.robonomicsUIvue.polkadot.extensionObj.signer.signRaw\n        ) {\n          this.handlerAccount(value);\n        }\n      },\n      immediate: true\n    },\n    \"RobonomicsProvider.isReady.value\": {\n      handler: function (newValue, oldValue) {\n        if (newValue && !oldValue) {\n          this.handlerAccount(\n            this.$store.state.robonomicsUIvue.polkadot.address\n          );\n        }\n      },\n      immediate: true\n    },\n    $route: async function () {\n      this.renderComponent = false;\n      await this.$nextTick();\n      this.renderComponent = true;\n    }\n  },\n  methods: {\n    async handlerAccount(address) {\n      try{\n\n        if (!this.RobonomicsProvider.isReady.value) {\n          return;\n        }\n        if (this.unsubscribeBalance) {\n          this.unsubscribeBalance();\n        }\n        if (!this.$store.state.robonomicsUIvue.polkadot.accounts) {\n          return;\n        }\n        const account = this.$store.state.robonomicsUIvue.polkadot.accounts.find(\n          (item) => item.address === address\n        );\n        if (!account) {\n          return;\n        }\n        if (this.$route.name !== \"telemetry\") {\n          await this.robonomics.accountManager.setSender(address, {\n            type: account.type,\n            extension: this.$store.state.robonomicsUIvue.polkadot.extensionObj\n          });\n        }\n        this.unsubscribeBalance = await this.robonomics.account.getBalance(\n          address,\n          (r) => {\n            const transferable = r.free.sub(r.frozen);\n            this.$store.commit(\n              \"polkadot/setBalanceXRT\",\n              round(\n                fromUnit(\n                  transferable,\n                  this.robonomics.api.registry.chainDecimals[0]\n                ),\n                4\n              )\n            );\n          }\n        );\n      } catch (e) { console.error(e); }\n    }\n  }\n};\n</script>\n\n<style scoped>\n  .nav-rws ul {\n    text-align: left;\n    grid-template-columns: repeat(4, 1fr);\n  }\n\n  .nav-rws a {\n    display: block;\n    margin-bottom: 0.5rem;\n    font-weight: bold;\n    white-space: nowrap;\n    text-transform: uppercase;\n  }\n\n  .nav-devices {\n    margin-top: calc(var(--robo-space) * 2);\n  }\n\n  .nav-devices li {\n    padding: var(--robo-space) 0;\n    border-top: 1px solid var(--robo-color-dark);\n  }\n\n  .nav-devices a {\n    display: grid;\n    grid-template-columns: 100px auto;\n    align-items: center;\n    gap: var(--robo-space);\n    font-weight: bold;\n    text-transform: uppercase;\n  }\n\n  .nav-devices img {\n    max-width: 100%;\n  }\n\n  @media screen and (width < 950px) {\n    .nav-rws ul {\n      grid-template-columns: repeat(2, 1fr);\n    }\n  }\n\n  @media screen and (width < 560px) {\n    .nav-devices a {\n      grid-template-columns: 50px auto;\n    }\n  }\n</style>\n","import Decimal from \"decimal.js-light\";\n\nDecimal.set({\n  toExpNeg: -31,\n  toExpPos: 31\n});\n\nexport function toDecimal(v) {\n  return new Decimal(v.toString());\n}\n\nexport function round(v, place) {\n  return toDecimal(v).todp(place);\n}\n\nexport function fromUnit(v, decimals = 0, dp) {\n  return toDecimal(v)\n    .div(new Decimal(10).pow(decimals.toString()))\n    .todp(dp)\n    .toString();\n}\n\nexport function toUnit(v, decimals = 0) {\n  return toDecimal(v).mul(new Decimal(10).pow(decimals.toString())).toString();\n}\n\nexport function showVersion() {\n  console.log(\n    \"Build version:\",\n    process.env.VUE_APP_GIT_BRANCH,\n    process.env.VUE_APP_GIT_TAG,\n    process.env.VUE_APP_GIT_SHA\n  );\n}\n","import { render } from \"./Header.vue?vue&type=template&id=65d74f46&scoped=true\"\nimport script from \"./Header.vue?vue&type=script&lang=js\"\nexport * from \"./Header.vue?vue&type=script&lang=js\"\n\nimport \"./Header.vue?vue&type=style&index=0&id=65d74f46&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-65d74f46\"]])\n\nexport default __exports__","<template>\n    <footer class=\"footer-section\">\n        <nav>\n            <ul v-for=\"item in navigation\" :key=\"item.title\" :data-label=\"item.title\">\n                <li v-for=\"link in item.links\" :key=\"link.title\">\n                    <a :href=\"link.link\" target=\"_blank\">{{link.title}}</a>\n                </li>\n            </ul>\n        </nav>\n        <robo-text v-if=\"repoversion\" size=\"small\" weight=\"bold\" align=\"center\" class=\"footer-section\">\n            Latest release:\n            <a :href=\"repoversion.html_url\" target=\"_blank\">{{ repoversion.tag_name }} {{ repoversion.name }}</a>\n        </robo-text>\n    </footer>\n</template>\n\n<script setup>\n\nimport { ref, onMounted } from \"vue\";\n\nconst navigation = [\n{\n    title: \"Services\",\n    links: [\n    {\n        title: \"Sensors map\",\n        link: \"https://sensors.social\",\n    }\n    ]\n},\n\n{\n    title: \"Tokenomics\",\n    links: [\n    {\n        title: \"About XRT\",\n        link: \"https://robonomics.network/xrt/\",\n    },\n    {\n        title: \"Uniswap\",\n        link: \"https://app.uniswap.org/#/swap?inputCurrency=0x7de91b204c1c737bcee6f000aaa6569cf7061cb7&outputCurrency=0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n    },\n    {\n        title: \"Basilisk\",\n        link: \"https://app.basilisk.cloud/pools-and-farms\",\n    }\n    ]\n},\n\n{\n    title: \"Tools\",\n    links: [\n    {\n        title: \"Substrate Portal\",\n        link: \"https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fkusama.rpc.robonomics.network%2F#/explorer\",\n    },\n    {\n        title: \"Subscan\",\n        link: \"https://robonomics.subscan.io/\",\n    },\n    {\n        title: \"Polkassembly\",\n        link: \"https://robonomics.polkassembly.io/\",\n    }\n    ]\n},\n\n{\n    title: \"Help\",\n    links: [\n    {\n        title: \"GitHub\",\n        link: \"https://github.com/airalab/robonomics.app\",\n    },\n    {\n        title: \"Wiki\",\n        link: \"https://wiki.robonomics.network/\",\n    },\n    {\n        title: \"Academy\",\n        link: \"https://robonomics.academy/\",\n    },\n    {\n        title: \"Contacts\",\n        link: \"https://robonomics.network/contact/\",\n    },\n    {\n        title: \"Issues\",\n        link: \"https://github.com/airalab/robonomics.app/issues\",\n    },\n    ]\n}\n];\n\nconst repoversion = ref(null);\n\nonMounted(async () => {\n    try {\n      const response = await fetch('https://api.github.com/repos/airalab/robonomics.app/releases/latest');\n      const data = await response.json();\n      repoversion.value = data;\n    } catch (error) {\n      repoversion.value = 'Ошибка загрузки';\n      console.error('Ошибка получения версии:', error);\n    }\n});\n\n</script>\n\n<style scoped>\n    .footer-section {\n        border-top: 1px dotted var(--robo-color-text);\n        padding-top: var(--robo-layout-padding);\n        margin-top: var(--robo-layout-padding);\n    }\n    \n    footer {\n        margin-top: calc(var(--robo-space) * 5);\n        padding: var(--robo-layout-padding);\n    }\n\n    footer nav {\n        display: flex;\n        gap: calc(var(--robo-layout-padding) * 2);\n        justify-content: center;\n    }\n\n    footer nav ul:before {\n        content: attr(data-label);\n        display: block;\n        font-weight: bold;\n        margin-bottom: var(--robo-space);\n    }\n\n    @media screen and (width < 700px) {\n        footer nav {\n            font-size: 80%;\n            gap: var(--robo-layout-padding);\n        }\n    }\n\n    @media screen and (width < 500px) {\n        footer nav {\n            flex-direction: column;\n        }\n    }\n</style>","import script from \"./Footer.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Footer.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Footer.vue?vue&type=style&index=0&id=3db6d54a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-3db6d54a\"]])\n\nexport default __exports__","<template>\n  <robo-layout>\n    <dapp-header :title=\"props.pagetitle\" />\n    <slot />\n    <dapp-footer />\n  </robo-layout>\n</template>\n\n<script setup>\n\nimport DappHeader from '@/components/Header';\nimport DappFooter from '@/components/Footer';\nimport { useSubscription } from \"@/hooks/useSubscription\";\nimport { defineProps, watch } from 'vue';\nimport { useStore } from \"vuex\";\n\nconst props = defineProps({\n  pagetitle: {\n    type: String\n  }\n});\n\nconst store = useStore();\nconst subscription = useSubscription();\n\n watch(\n  () => store.state.robonomicsUIvue.rws.active,\n  (v) => {\n    subscription.owner.value = v;\n  },\n  { immediate: true }\n);\n\nwatch(\n  [subscription.owner, subscription.validUntil],\n  () => {\n    store.commit(\"rws/setExpiredate\", subscription.validUntil);\n  },\n  { immediate: true }\n);\n\nwatch(\n  subscription.devices,\n  (devices) => {\n    store.commit(\"rws/setUsers\", devices);\n  },\n  { immediate: true }\n);\n</script>\n","import script from \"./Main.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Main.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=d2dcdd50\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","// import { Buffer } from \"buffer\";\nimport axios from \"axios\";\nimport { create } from \"ipfs-http-client\";\nimport { ref } from \"vue\";\n\nclass IpfsApiClient {\n  constructor(endpoint) {\n    this.endpoint = endpoint;\n    this.authHeader = null;\n    this.robonomics = null;\n    this._create();\n  }\n  _create() {\n    this.client = create({\n      ...this._options()\n    });\n  }\n  _options() {\n    return {\n      url: this.endpoint,\n      headers: {\n        authorization: `Basic ${this.authHeader}`,\n        robonomics: this.robonomics\n      }\n    };\n  }\n  isAuth() {\n    return !!this.authHeader && !!this.robonomics;\n  }\n  auth(owner, address, signature) {\n    const authHeaderRaw = `sub-${address}:${signature}`;\n    this.authHeader = Buffer.from(authHeaderRaw).toString(\"base64\");\n    this.robonomics = owner;\n    this._create();\n  }\n  authClear() {\n    this.authHeader = null;\n    this.robonomics = null;\n    this._create();\n  }\n  async ls(cid) {\n    const files = [];\n    for await (const file of this.client.ls(cid)) {\n      if (file.type === \"file\") {\n        files.push(file);\n      }\n    }\n    return files;\n  }\n  async cat(cid) {\n    const cat = async (cid) => {\n      const decoder = new TextDecoder();\n      let content = \"\";\n      for await (const chunk of this.client.cat(cid)) {\n        content += decoder.decode(chunk, {\n          stream: true\n        });\n      }\n      return content;\n    };\n    return await cat(cid);\n  }\n  async add(data) {\n    return await this.client.add(data);\n  }\n  async catViaGateway(gateway, cid, attempts = 5) {\n    for (let index = 1; index <= attempts; index++) {\n      try {\n        return (await axios.get(`${gateway}${cid}`)).data;\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    throw new Error(\"File not available\");\n  }\n  async catViaGatewaysRotation(gateways, cid) {\n    for (const gateway of gateways) {\n      try {\n        return {\n          gateway,\n          result: await this.catViaGateway(gateway, cid)\n        };\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n    throw new Error(\"File not available\");\n  }\n  async catViaGateways(gateways, cid) {\n    const controller = new AbortController();\n    const readFile = async (gateway, cid) => {\n      const response = await axios.get(`${gateway}${cid}`, {\n        signal: controller.signal\n      });\n      controller.abort();\n      return response.data;\n    };\n    const requests = [];\n    for (const gateway of gateways) {\n      requests.push(readFile(gateway, cid));\n    }\n    try {\n      const result = await Promise.any(\n        requests.map((p, i) => p.then((v) => [v, i]))\n      );\n      return {\n        gateway: gateways[result[1]],\n        result: result[0]\n      };\n    } catch (_) {\n      throw new Error(\"File not available\");\n    }\n  }\n}\n\nexport default {\n  install: (app, params) => {\n    const instance = ref();\n    app.provide(\"IpfsProvider\", {\n      instance,\n      gateways: params.gateways || []\n    });\n    instance.value = new IpfsApiClient(params.api.gateway);\n  }\n};\n","import { u8aConcat, u8aToU8a } from \"@polkadot/util\";\nimport {\n  ed25519PairFromSeed,\n  encodeAddress,\n  mnemonicToMiniSecret,\n  randomAsU8a\n} from \"@polkadot/util-crypto\";\nimport ed2curve from \"ed2curve\";\nimport nacl from \"tweetnacl\";\n\nfunction naclOpen(sealed, nonce, senderBoxPublic, receiverBoxSecret) {\n  return (\n    nacl.box.open(sealed, nonce, senderBoxPublic, receiverBoxSecret) || null\n  );\n}\nfunction naclSeal(\n  message,\n  senderBoxSecret,\n  receiverBoxPublic,\n  nonce = randomAsU8a(24)\n) {\n  return {\n    nonce,\n    sealed: nacl.box(message, nonce, receiverBoxPublic, senderBoxSecret)\n  };\n}\nfunction convertSecretKeyToCurve25519(secretKey) {\n  return ed2curve.convertSecretKey(secretKey);\n}\nfunction convertPublicKeyToCurve25519(publicKey) {\n  return ed2curve.convertPublicKey(publicKey);\n}\nexport function decryptMessage(\n  encryptedMessageWithNonce,\n  senderPublicKey,\n  secretKey\n) {\n  const messageU8a = u8aToU8a(encryptedMessageWithNonce);\n  return naclOpen(\n    messageU8a.slice(24, messageU8a.length),\n    messageU8a.slice(0, 24),\n    convertPublicKeyToCurve25519(u8aToU8a(senderPublicKey)),\n    convertSecretKeyToCurve25519(secretKey)\n  );\n}\nexport function encryptMessage(\n  message,\n  recipientPublicKey,\n  secretKey,\n  nonceIn\n) {\n  const { nonce, sealed } = naclSeal(\n    u8aToU8a(message),\n    convertSecretKeyToCurve25519(secretKey),\n    convertPublicKeyToCurve25519(u8aToU8a(recipientPublicKey)),\n    nonceIn\n  );\n  return u8aConcat(nonce, sealed);\n}\nexport function createPair(mnemonic) {\n  const seed = mnemonicToMiniSecret(mnemonic);\n  const pair = ed25519PairFromSeed(seed);\n  return pair;\n}\nexport function encryptor(pair) {\n  return {\n    pair,\n    address: encodeAddress(pair.publicKey, 32),\n    encodeAddress: (ss58Format = 32) => {\n      return encodeAddress(pair.publicKey, ss58Format);\n    },\n    decryptMessage: (encryptedMessageWithNonce, senderPublicKey) => {\n      return decryptMessage(\n        encryptedMessageWithNonce,\n        senderPublicKey,\n        pair.secretKey\n      );\n    },\n    encryptMessage: (message, recipientPublicKey, nonce) => {\n      return encryptMessage(message, recipientPublicKey, pair.secretKey, nonce);\n    }\n  };\n}\n// export function encryptor(mnemonic) {\n//   const pair = createPair(mnemonic);\n//   return {\n//     pair,\n//     address: encodeAddress(pair.publicKey, 32),\n//     encodeAddress: (ss58Format = 32) => {\n//       return encodeAddress(pair.publicKey, ss58Format);\n//     },\n//     decryptMessage: (encryptedMessageWithNonce, senderPublicKey) => {\n//       return decryptMessage(\n//         encryptedMessageWithNonce,\n//         senderPublicKey,\n//         pair.secretKey\n//       );\n//     },\n//     encryptMessage: (message, recipientPublicKey, nonce) => {\n//       return encryptMessage(message, recipientPublicKey, pair.secretKey, nonce);\n//     }\n//   };\n// }\n","import { encryptor } from \"@/utils/encryptor\";\nimport { decodePair } from \"@polkadot/keyring/pair/decode\";\nimport { u8aToHex, u8aWrapBytes } from \"@polkadot/util\";\nimport { base64Decode } from \"@polkadot/util-crypto\";\nimport { AccountManager } from \"robonomics-interface\";\n\nexport default class AccountManagerDapp extends AccountManager {\n  constructor(keyring, config = {}, api = null) {\n    super(keyring, api);\n    this.extension = null;\n    keyring.loadAll(config);\n    this.setReady(true);\n  }\n\n  async beforeSetSender(address, { type, extension }) {\n    // if (this.account && !this.account.meta.isInjected) {\n    //   // this.keyring.forgetAccount(this.account.address);\n    //   this.account.lock();\n    // }\n    this.extension = extension;\n    try {\n      this.keyring.getPair(address);\n      // eslint-disable-next-line no-empty\n    } catch (_) {\n      this.keyring.loadInjected(address, {}, type);\n    }\n  }\n\n  async afterSetSender() {\n    await super.afterSetSender();\n    if (this.account.meta.isInjected && this.extension) {\n      this.api.setSigner(this.extension.signer);\n      this.account.signMsg = async (data) => {\n        return (\n          await this.extension.signer.signRaw({\n            address: this.account.address,\n            data: u8aToHex(u8aWrapBytes(data)),\n            type: \"bytes\"\n          })\n        ).signature;\n      };\n    }\n  }\n\n  async addUri(suri, meta = {}, type = \"ed25519\") {\n    const pair = this.keyring.keyring.addFromUri(suri, meta, type);\n    return await this.setSender(pair.address, {\n      type: type\n    });\n  }\n\n  async addUriPassword(\n    suri,\n    password = undefined,\n    meta = {},\n    type = \"ed25519\"\n  ) {\n    const { pair } = this.keyring.addUri(suri, password, meta, type);\n    return await this.setSender(pair.address, {\n      type: type\n    });\n  }\n\n  async addJsonPassword(json, password) {\n    const pair = this.keyring.createFromJson(json);\n    this.keyring.addPair(pair, password);\n    return await this.setSender(pair.address, {\n      type: pair.type\n    });\n  }\n\n  async addPair(pairKey) {\n    const pair = this.keyring.keyring.addFromPair(pairKey);\n    return await this.setSender(pair.address, {\n      type: pair.type\n    });\n  }\n\n  encryptor(password = null) {\n    if (!this.account.meta.isInjected && this.account.type === \"ed25519\") {\n      const json = this.account.toJson(password);\n      const decoded = decodePair(\n        password,\n        base64Decode(json.encoded),\n        json.encoding.type\n      );\n      return encryptor(decoded);\n    }\n  }\n}\n","import configApp from \"@/config\";\nimport keyring from \"@polkadot/ui-keyring\";\nimport { Robonomics } from \"robonomics-interface\";\nimport { ref, shallowRef } from \"vue\";\nimport AccountManager from \"./robonomicsAccountManager\";\n\nexport default {\n  install: async (app, params = {}) => {\n    const isReady = ref(false);\n    const instance = shallowRef();\n    const accountManager = new AccountManager(keyring);\n    app.provide(\"RobonomicsProvider\", {\n      isReady,\n      instance,\n      accountManager\n    });\n\n    const urlParams = new URLSearchParams(window.location.search);\n    let endpoint = urlParams.get(\"rpc\");\n\n    if (!endpoint) {\n      endpoint =\n        localStorage.getItem(\"rpc-parachain\") || configApp.default_rpc_endpoint;\n    }\n    localStorage.setItem(\"rpc-parachain\", endpoint);\n    const config = {\n      // endpoint: \"ws://127.0.0.1:9944\"\n      // endpoint: \"wss://kusama.rpc.robonomics.network/\"\n      endpoint\n    };\n\n    instance.value = await Robonomics.createInstance({ ...config, ...params });\n    instance.value.setAccountManager(accountManager);\n    isReady.value = true;\n  }\n};\n","import { ethers } from \"ethers\";\nimport { reactive } from \"vue\";\n\nconst CodeError = {\n  PROVIDER: 4,\n  NETWORK: 1,\n  ACCOUNT: 2\n};\n\nclass Web3Error extends Error {\n  constructor(code = null, ...params) {\n    super(...params);\n    this.code = code;\n  }\n}\n\nclass Connector {\n  async activate() {}\n  async getProvider() {}\n  async getAccount() {}\n  async getNetworkId() {}\n}\n\nclass Extension extends Connector {\n  constructor(provider, update) {\n    super();\n    this.provider = provider;\n    this.name = \"extension\";\n    this.account = null;\n    this.networkId = null;\n    this.emit = update;\n  }\n  handleChainChanged(networkId) {\n    this.networkId = Number(networkId);\n    this.emit(\"chainChanged\", { networkId: this.networkId });\n  }\n  async getProvider() {\n    this.provider.on(\"accountsChanged\", (accounts) => {\n      this.handleAccountsChanged(accounts);\n    });\n    this.provider.on(\"chainChanged\", (networkId) => {\n      this.handleChainChanged(networkId);\n    });\n    return this.provider;\n  }\n  async getNetworkId() {\n    this.networkId = Number(\n      await this.provider.request({ method: \"eth_chainId\" })\n    );\n    return this.networkId;\n  }\n  handleAccountsChanged(accounts) {\n    if (accounts.length > 0) {\n      this.account = accounts[0];\n    } else {\n      this.account = null;\n    }\n    this.emit(\"accountsChanged\", { account: this.account });\n  }\n}\n\nclass Provider {\n  constructor({ networks = [] } = {}) {\n    this.provider = null;\n    this.connector = null;\n    this.signer = null;\n    this.networks = networks;\n\n    this.state = reactive({\n      isReady: false,\n      error: null,\n      account: null,\n      networkId: null,\n      block: null\n    });\n  }\n  async setConnector(connector) {\n    if (connector.name === \"extension\") {\n      this.provider = new ethers.BrowserProvider(await connector.getProvider());\n    } else {\n      this.provider = new ethers.WebSocketProvider(\n        await connector.getProvider()\n      );\n    }\n    this.connector = connector;\n    this.setSigner();\n  }\n  async setSigner() {\n    if (this.connector && this.connector.name === \"extension\") {\n      try {\n        this.signer = await this.provider.getSigner();\n        this.state.account = this.signer.address;\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n  on(name, data) {\n    // if (name === \"accountsChanged\") {\n    //   this.state.account = data.account;\n    // }\n    if (name === \"chainChanged\") {\n      this.state.networkId = data.networkId;\n    }\n    if (!this.networks.includes(this.state.networkId)) {\n      this.state.error = new Web3Error(\n        CodeError.NETWORK,\n        `sssPlease, switch to network id ${this.networks}`\n      );\n    } else {\n      this.state.error = null;\n    }\n  }\n  async setProvider(provider) {\n    try {\n      await this.setConnector(\n        new Extension(provider, (name, data) => this.on(name, data))\n      );\n    } catch (error) {\n      console.warn(error.message);\n    }\n    try {\n      if (this.connector) {\n        this.state.networkId = await this.connector.getNetworkId();\n        if (!this.networks.includes(this.state.networkId)) {\n          this.state.error = new Web3Error(\n            CodeError.NETWORK,\n            `Please, switch to network id ${this.networks}`\n          );\n        }\n      }\n    } catch (error) {\n      this.state.error = error;\n    }\n\n    if (this.provider && this.state.error === null) {\n      this.state.isReady = true;\n      this.provider.on(\"block\", async (blockNumber) => {\n        this.state.block = await this.provider.getBlock(blockNumber);\n      });\n      this.state.block = await this.provider.getBlock(\"latest\");\n    }\n  }\n}\n\nexport const $web3 = new Provider({ networks: [11155111] });\n\nexport default {\n  install: async (app) => {\n    app.provide(\"EthereumProvider\", {\n      web3: $web3\n    });\n  }\n};\n","import script from \"./Altruist.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Altruist.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./Hikikomori.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Hikikomori.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./Riscv.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Riscv.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <div>balance: {{ balance }} NFT</div>\n    <nft-token\n      v-for=\"token in tokens\"\n      :key=\"token.tokenId\"\n      :token=\"token\"\n      @activate=\"loadTokens\"\n      class=\"card\"\n    />\n  </div>\n</template>\n\n<script>\nimport { address } from \"@/config\";\nimport { $web3 } from \"@/plugins/web3\";\nimport axios from \"axios\";\nimport { ethers } from \"ethers\";\nimport { ref, watch } from \"vue\";\nimport nft_abi from \"./abi/NFT.json\";\nimport NftToken from \"./NftToken.vue\";\n\nexport default {\n  components: { NftToken },\n  setup() {\n    const balance = ref(null);\n    const tokens = ref([]);\n\n    // NFT\n    const nftContract = new ethers.Contract(\n      address.nft,\n      nft_abi,\n      $web3.provider\n    );\n\n    (async () => {\n      try {\n        console.log('$web3.state.account', $web3.state.account)\n        balance.value = await nftContract.balanceOf($web3.state.account);\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n\n    watch(\n      () => $web3.state.block,\n      async () => {\n        try {\n          console.log('$web3.state.account', $web3.state.account)\n          balance.value = await nftContract.balanceOf($web3.state.account);\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    );\n\n    const loadTokens = async () => {\n      if (!balance.value) {\n        return;\n      }\n      const ids = [];\n      for (let index = 0; index < balance.value; index++) {\n        try {\n          const tokenId = await nftContract.tokenOfOwnerByIndex(\n            $web3.state.account,\n            index\n          );\n          const uri = await nftContract.tokenURI(tokenId);\n          const ipfsHash = uri.split(\"ipfs://\").pop();\n\n          const res = await axios.get(`https://ipfs.io/ipfs/${ipfsHash}`);\n\n          ids.push({\n            activated: await nftContract.activatedOf(tokenId),\n            tokenId: tokenId.toString(),\n            name: `${res.data.name} #${tokenId.toString()}`,\n            image: res.data.image.split(\"ipfs://\").pop()\n          });\n        } catch (error) {\n          console.log(error);\n        }\n        ``;\n      }\n      tokens.value = ids;\n    };\n\n    watch(balance, loadTokens);\n\n    return {\n      balance,\n      tokens,\n      loadTokens\n    };\n  }\n};\n</script>\n","<template>\n  <div>\n    {{ token.name }}<br />\n    <img :src=\"`https://ipfs.io/ipfs/${token.image}`\" style=\"width: 200px\" />\n    <br />\n    <btn-send\n      v-if=\"!token.activated\"\n      @click=\"(wait) => activate(wait, token.tokenId)\"\n    >\n      Activate\n    </btn-send>\n    <span v-else>activated</span>\n\n    <free-minimum :token=\"token.tokenId\" />\n  </div>\n</template>\n\n<script>\nimport { address } from \"@/config\";\nimport { $web3 } from \"@/plugins/web3\";\nimport { ethers } from \"ethers\";\nimport nft_abi from \"./abi/NFT.json\";\nimport BtnSend from \"./BtnSend.vue\";\nimport FreeMinimum from \"./FreeMinimum.vue\";\n\nexport default {\n  props: [\"token\"],\n  emits: [\"activate\"],\n  components: { BtnSend, FreeMinimum },\n  setup(_, { emit }) {\n    const activate = async (wait, tokenId) => {\n      const nftContract = new ethers.Contract(\n        address.nft,\n        nft_abi,\n        $web3.provider\n      );\n\n      try {\n        const tx = await nftContract.connect($web3.signer).activate(tokenId);\n        await wait(tx);\n        emit(\"activate\", tokenId);\n      } catch (error) {\n        if (error.code === \"CALL_EXCEPTION\" && error.data) {\n          await wait(null, nftContract.interface.parseError(error.data).name);\n        } else {\n          await wait(null, error);\n        }\n      }\n    };\n\n    return {\n      activate\n    };\n  }\n};\n</script>\n","<template>\n  <button\n    @click=\"send\"\n    :disabled=\"status === STATUS.PRE_PROCESS || status === STATUS.WAIT_TX\"\n  >\n    <slot />\n  </button>\n  <div v-if=\"status === STATUS.ERROR\" class=\"error\">{{ error }}</div>\n  <div v-if=\"status === STATUS.READY\" class=\"success\">✓</div>\n</template>\n\n<script>\nimport { ref } from \"vue\";\n\nconst STATUS = {\n  NEW: 1,\n  PRE_PROCESS: 2,\n  WAIT_TX: 3,\n  READY: 4,\n  ERROR: 5\n};\n\nexport default {\n  emits: [\"click\"],\n  setup(_, { emit }) {\n    const status = ref(STATUS.NEW);\n    const error = ref(null);\n\n    const send = async () => {\n      status.value = STATUS.PRE_PROCESS;\n      error.value = null;\n      emit(\"click\", async (tx, e, last = true) => {\n        status.value = STATUS.WAIT_TX;\n        try {\n          if (tx) {\n            const receipt = await tx.wait();\n            console.log(receipt.hash);\n            if (last) {\n              status.value = STATUS.READY;\n            }\n          } else if (e) {\n            if (e.code !== \"ACTION_REJECTED\") {\n              status.value = STATUS.ERROR;\n              error.value = e.code || e;\n            } else {\n              status.value = STATUS.NEW;\n            }\n          }\n        } catch (errorCatch) {\n          status.value = STATUS.ERROR;\n          error.value = errorCatch.message;\n        }\n      });\n    };\n\n    return {\n      STATUS,\n      status,\n      error,\n      send\n    };\n  }\n};\n</script>\n","import { render } from \"./BtnSend.vue?vue&type=template&id=5d3bb413\"\nimport script from \"./BtnSend.vue?vue&type=script&lang=js\"\nexport * from \"./BtnSend.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div>\n    <div v-if=\"received\">free minimum received</div>\n    <div v-else>\n      <div v-if=\"address\">\n        {{ address }}\n        <button\n          @click=\"requestFreeMinimum\"\n          :disabled=\"!avaible || (status !== 1 && status !== 4)\"\n        >\n          Get free minimum\n        </button>\n        <div v-if=\"status === 3\">request sent</div>\n        {{ error }}\n      </div>\n      <div v-else>Not found parachain account</div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { $web3 } from \"@/plugins/web3\";\nimport { computed, ref, watch } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { checkAvailible, getFreeMinimum } from \"./apiNftOracle\";\n\nexport default {\n  props: [\"token\"],\n  setup(props) {\n    const account = ref();\n\n    const store = useStore();\n\n    watch(\n      () => store.state.robonomicsUIvue.polkadot.address,\n      (address) => {\n        try {\n          account.value = store.state.robonomicsUIvue.polkadot.accounts.find(\n            (item) => item.address === address\n          );\n        } catch (e) { console.error(e); }\n      },\n      { immediate: true }\n    );\n\n    const address = computed(() => account.value?.address);\n\n    const error = ref();\n\n    const avaible = ref(false);\n    const check = async () => {\n      const r = await checkAvailible(props.token, $web3.state.account);\n      avaible.value = r[0];\n      error.value = r[1];\n    };\n    check();\n    const timerId = setInterval(check, 10000);\n\n    const received = computed(() => {\n      if (\n        !avaible.value &&\n        error.value === \"Free minimum for this token has already been received\"\n      ) {\n        return true;\n      }\n      return false;\n    });\n    watch(\n      received,\n      (received) => {\n        if (received) {\n          status.value = 1;\n          clearInterval(timerId);\n        }\n      },\n      { immediate: true }\n    );\n\n    const status = ref(1);\n    const requestFreeMinimum = async () => {\n      status.value = 2;\n      const r = await getFreeMinimum(\n        props.token,\n        $web3.state.account,\n        address.value\n      );\n      if (r[0]) {\n        status.value = 3;\n      } else {\n        status.value = 4;\n      }\n      error.value = r[1];\n    };\n\n    return {\n      address,\n      received,\n      avaible,\n      error,\n      status,\n      requestFreeMinimum\n    };\n  }\n};\n</script>\n","import configApp from \"@/config\";\nimport { $web3 } from \"@/plugins/web3\";\nimport axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: `${configApp.nft_oracle_endpoint}api`\n});\n\nexport const checkAvailible = async (token, accountEthereum) => {\n  try {\n    const result = await api.post(\"/check\", {\n      nft: token,\n      address: accountEthereum\n    });\n    if (result.data.result) {\n      return [result.data.result, result.data.error];\n    } else {\n      return [false, result.data.error];\n    }\n  } catch (error) {\n    return [false, error.message];\n  }\n};\n\nexport const getFreeMinimum = async (\n  token,\n  accountEthereum,\n  accauntParachain\n) => {\n  try {\n    const msg = JSON.stringify({\n      nft: token,\n      address: accountEthereum,\n      for: accauntParachain\n    });\n    const signature = await $web3.signer.signMessage(msg);\n\n    const result = await api.post(\"/verify\", {\n      signature,\n      nft: token,\n      address: accountEthereum,\n      for: accauntParachain\n    });\n    if (result.data.result) {\n      return [result.data.result, result.data.error];\n    } else {\n      return [false, result.data.error];\n    }\n  } catch (error) {\n    return [false, error.message];\n  }\n};\n","import { render } from \"./FreeMinimum.vue?vue&type=template&id=329595d0\"\nimport script from \"./FreeMinimum.vue?vue&type=script&lang=js\"\nexport * from \"./FreeMinimum.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./NftToken.vue?vue&type=template&id=48229e54\"\nimport script from \"./NftToken.vue?vue&type=script&lang=js\"\nexport * from \"./NftToken.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./NftInfo.vue?vue&type=template&id=4b2d5a1a\"\nimport script from \"./NftInfo.vue?vue&type=script&lang=js\"\nexport * from \"./NftInfo.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <robo-layout-section>\n    <robo-text title=\"1\">Season pass</robo-text>\n    \n    <hr />\n    {{ store.state.robonomicsUIvue.ethereum.activeAccount }}\n    <hr/>\n    {{store.state.robonomicsUIvue.ethereum.activeProviderRdns}}\n    <div>\n      <div v-if=\"$web3.state.isReady\">\n        <nft-info v-if=\"$web3.state.account\" />\n        <div v-else>Not found account</div>\n      </div>\n      <div v-else>...</div>\n      <div v-if=\"$web3.state.error\">\n        {{ $web3.state.error }}\n      </div>\n    </div>\n  </robo-layout-section>\n</template>\n\n<script setup>\nimport NftInfo from \"@/components/web3/NftInfo.vue\";\nimport { $web3 } from \"@/plugins/web3\";\nimport { watch, onMounted } from \"vue\";\nimport { useStore } from \"vuex\";\n\nconst store = useStore();\n\nconst providers = [];\nconst handler = (event) => providers.push(event.detail);\n\nwatch(\n  () => store.state.robonomicsUIvue.ethereum.activeProviderRdns,\n  async (value) => {\n    const index = providers.findIndex((item) => {\n      if (item.info.rdns === value) {\n        return true;\n      }\n      return false;\n    });\n    if (index >= 0) {\n      try {\n        await $web3.setProvider(providers[index].provider);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n);\n\nwatch(\n  () => store.state.robonomicsUIvue.ethereum.activeAccount,\n  async () => {\n    await $web3.setSigner();\n  }\n);\n\nwindow.addEventListener(\"eip6963:announceProvider\", handler);\nwindow.dispatchEvent(new CustomEvent(\"eip6963:requestProvider\"));\n\nonMounted(async () => {\n  const index = providers.findIndex((item) => {\n      if (item.info.rdns === store.state.robonomicsUIvue.ethereum.activeProviderRdns) {\n        return true;\n      }\n      return false;\n    });\n    if (index >= 0) {\n      try {\n        await $web3.setProvider(providers[index].provider);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    await $web3.setSigner();\n})\n</script>\n","import script from \"./Season-pass-2.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Season-pass-2.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","const chains =\n    {\n       1: {\n        name: 'Ethereum Mainnet'\n       },\n       2: {\n        name: 'Expanse Network'\n       },\n       11155111: {\n        name: 'Sepolia'\n       }\n    }\n\nexport default chains","<template>\n  <robo-layout-section>\n\n    <robo-card allowExpand class=\"seasonpass\">\n        <robo-text title=\"3\" offset=\"x0\">Your season pass 2024-2025</robo-text>\n        <div class=\"seasonpass-content\">\n            <div class=\"seasonpass-content-inside\">\n                <div class=\"seasonpass-msg\" v-if=\"status !== 'START'\">\n                    <template v-if=\"status === 'NO_ETH_EXTENSION'\">Connect or install Ethereum extension in your browser</template>\n                    <template v-if=\"status === 'WRONG_ETH_NETWORK'\">Please, switch to {{chains[workingchain].name}}</template>\n                    <template v-if=\"status === 'NO_WALLET_PERMISSION'\">Please, check permissions in the connected extension</template>\n                    <template v-if=\"status === 'NO_ETH_ACCOUNT'\">No Ethereum account found: check your extension</template>\n                    <template v-if=\"status === 'NFT_NOT_FOUND' || status === 'TOKENS_NOT_FOUND'\">No Season Pass NFT accosiated with this account</template>\n                </div>\n                <robo-loader v-if=\"status === 'NFT_STARTED_GETTING'\" size=\"3\" />\n\n                <div class=\"tokens\" :class=\"'tokens-show-' + curentslide\" v-if=\"status === 'TOKENS_FOUND' && tokens\">\n                    <div class=\"token\" v-for=\"token in tokens\" :key=\"token.tokenId\">\n                        <img :src=\"`https://ipfs.io/ipfs/${token?.image}`\" />\n                        <robo-text lines=\"dotted\" size=\"small\">\n                            <robo-grid type=\"flex\" offset=\"x0\" gap=\"x025\" galign=\"start\" valign=\"center\">\n                                {{token?.name}}\n                            </robo-grid>\n                            <robo-grid type=\"flex\" offset=\"x0\" gap=\"x025\" galign=\"start\" valign=\"center\">\n                                {{token?.tokenId}}\n                            </robo-grid>\n                            <robo-grid type=\"flex\" offset=\"x0\" gap=\"x025\" galign=\"start\" valign=\"center\">\n                                {{token?.status}}\n                            </robo-grid>\n                            <robo-grid type=\"flex\" offset=\"x0\" gap=\"x025\" galign=\"start\" valign=\"center\">\n                                <template v-if=\"token.activated\">Activated</template>\n                                <template v-else>Not activated</template>\n                            </robo-grid>\n                        </robo-text>\n                        <robo-section offset=\"x1\">\n                            <robo-button v-if=\"token.tokenId && !token.activated\" @click.prevent=\"activateToken(token.tokenId)\" size=\"small\">Activate</robo-button>\n                        </robo-section>\n                    </div>\n                </div>\n                <div class=\"tokens-switch\" :class=\"'tokens-switch-showed-' + curentslide\" v-if=\"status === 'TOKENS_FOUND'\">\n                    <robo-button v-for=\"(token, i) in tokens\" :key=\"token.tokenId\" clean @click.prevent=\"setslide(i + 1)\">{{i + 1}}</robo-button>\n                </div>\n            </div>\n            <div class=\"seasonpass-monkey\" aria-hidden=\"true\" v-if=\"status !== 'TOKENS_FOUND'\">\n                <img src=\"images/season-pass-24-25-monkey.webp\" aria-hidden=\"true\"/>\n            </div>\n        </div>\n    </robo-card>\n\n    <!-- <details>\n        <summary>tech</summary>\n        <div v-for=\"token in tokens\" :key=\"token.tokenId\">\n            <img :src=\"`https://ipfs.io/ipfs/${token.image}`\" style=\"width: 200px\" />\n            <p>{{token.name}}</p>\n            <p>activated: {{token.activated}}, {{token.tokenId}}</p>\n            <p>status: {{token?.status}}</p>\n            <robo-button v-if=\"token.tokenId && !token.activated\" @click.prevent=\"activateToken(token.tokenId)\">Activate</robo-button>\n        </div>\n\n        {{account}}\n        <hr/>\n        {{provider?.info?.name}}\n        <hr/>\n        {{balance}}\n        <hr/>\n        {{status}}\n    </details> -->\n\n  </robo-layout-section>\n</template>\n\n<script setup>\nimport { reactive, computed, onMounted, ref, watch } from \"vue\";\nimport { useStore } from \"vuex\";\nconst store = useStore();\n\nimport nft_abi from \"../../components/web3/abi/NFT.json\";\nimport { ethers } from \"ethers\";\nimport { address } from \"@/config\";\n\nimport chains from \"../../eth_chains\";\n\n/* + get providers */\nimport { createStore } from 'mipd';\nconst mipdstore = createStore();\n\nconst state = reactive({ \n    providers: mipdstore.getProviders()\n});\n\nmipdstore.subscribe(providers => {\n    console.log('Providers updated:', providers);\n    state.providers = providers;\n});\n/* - get providers */\n\nconst account = computed(() =>{\n    return store.state.robonomicsUIvue.ethereum.activeAccount;\n});\n\nconst provider = computed(() =>{\n    return state.providers.find(i => i.info.rdns === store.state.robonomicsUIvue.ethereum.activeProviderRdns)\n});\n\nconst isConnected = () => {\n    if(provider?.value) {\n        return provider.value?.provider?._state?.isConnected || provider.value?.provider?.isConnected\n    } else {\n        return false;\n    }\n}\n\nconst workingchain = 11155111;\nconst balance = ref(null);\nconst tokens = ref([]);\nlet signer;\nlet contract;\nlet providerethers = null;\nconst status = ref('START');\nconst curentslide = ref(1);\n\nconst setslide = (s) => {\n    curentslide.value = s\n}\n\nconst getEthersProviderObj = () => {\n    try {\n        providerethers = new ethers.BrowserProvider(provider.value.provider);\n    } catch (error) { console.log(error); }\n}\n\nconst getNFT = async (blockupdate = false) => {\n\n    if(!blockupdate) {\n        status.value = '';\n        tokens.value = [];\n\n        if(!provider.value || !isConnected()) {\n            status.value = 'NO_ETH_EXTENSION';\n            return;\n        }\n    }\n\n    try {\n\n        if(!blockupdate) {\n            const perms = await provider.value.provider.request({method: 'wallet_getPermissions', params: [{ eth_accounts: {} }]});\n            if(!perms || !perms.some(i => i.parentCapability === 'eth_accounts')) {\n                status.value = 'NO_WALLET_PERMISSION';\n                return;\n            }\n\n            const accounts = await provider.value.provider.request({method: 'eth_requestAccounts', params: [{ eth_accounts: {} }]});\n            if(!accounts || accounts?.length < 1) {\n                status.value = 'NO_ETH_ACCOUNT';\n                return;\n            }\n            \n            const chain = await provider.value.provider.request({method: 'eth_chainId', params: [{ eth_accounts: {} }]});\n            if(parseInt(chain) !== workingchain) {\n                status.value = 'WRONG_ETH_NETWORK';\n                return;\n            }\n\n            status.value = 'NFT_STARTED_GETTING';\n\n            getEthersProviderObj();\n            signer = await providerethers.getSigner();\n            contract = new ethers.Contract(address.nft, nft_abi, signer);\n        }\n\n        contract.balanceOf(signer.address)\n            .then(async (r) => {\n                if(blockupdate) {\n                    if(balance.value === parseFloat(r)){\n                        return;\n                    }\n                }\n                balance.value = parseFloat(r);\n\n                if(!balance.value || balance.value < 1) {\n                    status.value = 'NFT_NOT_FOUND';\n                } else {\n                    await loadTokens();\n                }\n\n            })\n            .catch((e) => {\n                console.log(e);\n            });\n    } catch (error) {\n        status.value = 'NFT_NOT_FOUND';\n        console.log(error);\n    }\n}\n\nconst loadTokens = async () => {\n\n    const ids = [];\n    for (let index = 0; index < balance.value; index++) {\n        try {\n            const tokenId = await contract.tokenOfOwnerByIndex(\n                signer.address,\n                index\n            );\n\n            const uri = await contract.tokenURI(tokenId);\n            const ipfsHash = uri.split(\"ipfs://\").pop();\n            const data = await fetch(`https://ipfs.io/ipfs/${ipfsHash}`);\n            const res = await data.json();\n\n            ids.push({\n                activated: await contract.activatedOf(tokenId),\n                tokenId: tokenId.toString(),\n                name: `${res.name} #${tokenId.toString()}`,\n                image: res.image.split(\"ipfs://\").pop(),\n                status: 'INIT'\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    tokens.value = ids;\n\n    if(tokens.value?.length > 0) {\n        status.value = 'TOKENS_FOUND';\n    } else {\n        status.value = 'TOKENS_NOT_FOUND';\n    }\n}\n\nconst activateToken = async (tokenId) => {\n    let current = 0;\n\n    if(tokens.value) {\n        current = tokens.value.findIndex(i => i.tokenId === tokenId);\n    }\n\n    try {\n        tokens.value[current].status = 'ACTIVATION_STARTED';\n\n        const tx = await contract.connect(signer).activate(tokenId);\n        console.log('tx', tx);\n        await loadTokens(); // for updating status\n        tokens.value[current].status = 'ACTIVATION_ENDED';\n    } catch (error) {\n        console.error(error);\n\n        if(error.code === \"ACTION_REJECTED\") {\n            tokens.value[current].status = 'ACTIVATION_REJECTED';\n        } else {\n            tokens.value[current].status = 'ACTIVATION_NOT_SUCCESSFULL';\n        }\n    }\n}\n\n\nwatch([provider, account], async() => {\n    balance.value = null;\n    await getNFT();\n});\n\nonMounted( async () => {\n\n    // const b = await providerethers.getBalance(account.value)\n    // console.log('getBalance', ethers.formatEther(b))\n    await getNFT();\n\n    if(providerethers) {\n        providerethers.on('block', async () => {\n            await getNFT(true);\n        });\n    }\n})\n\n</script>\n\n<style>\n    .seasonpass .robo-card-content {\n        display: grid;\n        grid-template-rows: calc(var(--robo-space) * 4) auto;\n        gap: calc(var(--robo-space) * 2);\n        align-items: stretch;\n    }\n</style>\n\n<style scoped>\n    .seasonpass {\n        position: relative;\n        min-height: 600px;\n    }\n\n    .seasonpass:not(.expand) {\n        max-width: 700px;\n        margin: 0 auto;\n    }\n\n    .seasonpass-monkey {\n        position: absolute;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        text-align: center;\n        opacity: 0;\n        visibility: hidden;\n        animation: flick 2s linear 0.3s forwards;\n        z-index: 0;\n    }\n\n    @keyframes flick {\n        10% {\n            opacity: 0;\n            visibility: hidden;\n        }\n        20% {\n            opacity: 1;\n            visibility: visible;\n        }\n        30% {\n            opacity: 0;\n            visibility: hidden;\n        }\n        40% {\n            opacity: 1;\n            visibility: visible;\n        }\n        50% {\n            opacity: 0;\n            visibility: hidden;\n        }\n        60% {\n            opacity: 1;\n            visibility: visible;\n        }\n        100% {\n            opacity: 1;\n            visibility: visible;\n        }\n    }\n\n    .seasonpass-monkey img {\n        display: inline-block;\n        max-height: 600px;\n        opacity: 0.5;\n    }\n\n    @media (prefers-color-scheme: dark){\n        .seasonpass-monkey img {\n            opacity: 0.2;\n        }\n    }\n\n    .seasonpass-msg {\n        font-weight: bold;\n        text-align: center;\n        max-width: 500px;\n    }\n\n    .seasonpass-content {\n        justify-self: center;\n        align-content: center;\n        min-height: calc(600px - calc(var(--robo-space) * 4));\n    }\n\n    .seasonpass-content-inside {\n        position: relative;\n        z-index: 1;\n    }\n\n    .tokens .token {\n        display: none;\n    }\n\n    .tokens-show-1 .token:nth-child(1),\n    .tokens-show-2 .token:nth-child(2),\n    .tokens-show-3 .token:nth-child(3),\n    .tokens-show-4 .token:nth-child(4),\n    .tokens-show-5 .token:nth-child(5),\n    .tokens-show-6 .token:nth-child(6) {\n        display: block;\n    }\n\n    .tokens-switch-showed-1 .robo-button:nth-child(1),\n    .tokens-switch-showed-2 .robo-button:nth-child(2),\n    .tokens-switch-showed-3 .robo-button:nth-child(3),\n    .tokens-switch-showed-4 .robo-button:nth-child(4),\n    .tokens-switch-showed-5 .robo-button:nth-child(5),\n    .tokens-switch-showed-6 .robo-button:nth-child(6) {\n        opacity: 0.5;\n    }\n\n    .token img {\n        display: block;\n        max-width: 80%;\n        margin: var(--robo-space) auto;\n    }\n\n    .tokens-switch {\n        margin-top: calc(var(--robo-space) * 2);\n    }\n</style>\n","import script from \"./Season-pass.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Season-pass.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Season-pass.vue?vue&type=style&index=0&id=d54f8394&lang=css\"\nimport \"./Season-pass.vue?vue&type=style&index=1&id=d54f8394&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-d54f8394\"]])\n\nexport default __exports__","<template>\n  <robo-layout-section width=\"middle-wide\">\n\n    <robo-grid minColumnWidth=\"200px\" gap=\"x2\">\n\n      <robo-section>\n        <robo-section card>\n          <template v-if=\"rwsactive && rwsactive !== ''\">\n            <robo-rws-setup-active :show=\"['name', 'owner', 'date', 'userstext', 'link']\" />\n          </template>\n          <template v-else>\n            <robo-text title=\"4\" align=\"left\">RWS subscription</robo-text>\n            <robo-section offset=\"x1\">\n              <robo-text size=\"small\" weight=\"normal-italic\">\n                <robo-grid gap=\"x05\" columns=\"1\">\n                  <robo-grid-item borderbottom>\n                    Price from: <b>~ {{ price }} XRT </b>\n\n                    <robo-details>\n                      <template #summary>\n                        <robo-icon icon=\"circle-question\" />\n                      </template>\n                      <robo-grid gap=\"x05\">\n                        <robo-text weight=\"bold\">Where to buy XRT</robo-text>\n                        <robo-link href=\"https://app.basilisk.cloud/trade\">\n                          Basilisk\n                        </robo-link>\n                        <robo-link\n                          href=\"https://app.solarbeam.io/exchange/swap\"\n                        >\n                          Solarbeam\n                        </robo-link>\n                        <robo-link\n                          href=\"https://trade.kraken.com/markets/kraken/xrt/usd\"\n                        >\n                          Kraken\n                        </robo-link>\n                      </robo-grid>\n                    </robo-details>\n                  </robo-grid-item>\n\n                  <robo-grid-item borderbottom>\n                    Activation time <b>~ 2 min</b>\n                  </robo-grid-item>\n\n                  <robo-grid-item>\n                    Available subscriptions:\n                    <b>{{ freeAuctions }}</b>\n                  </robo-grid-item>\n                </robo-grid>\n              </robo-text>\n            </robo-section>\n\n            <robo-button :router=\"linkActivate\" size=\"small\" block>\n              <robo-icon icon=\"wallet\" /> Buy a subscription\n            </robo-button>\n          </template>\n        </robo-section>\n      </robo-section>\n\n      <robo-section>\n        <robo-text title=\"4\" align=\"left\" offset=\"x05\">Open-source hardware & web3 cloud</robo-text>\n        <robo-text size=\"small\" weight=\"normal-italic\">\n          <robo-grid gap=\"x05\" columns=\"1\">\n            <robo-grid-item borderbottom>\n              <robo-icon icon=\"check\" /> Secured data, only you have an access\n            </robo-grid-item>\n            <robo-grid-item borderbottom>\n              <robo-icon icon=\"check\" /> Remote control without any corporate clouds\n            </robo-grid-item>\n            <robo-grid-item borderbottom>\n              <robo-icon icon=\"check\" /> Brand-independent smart home, combine wanted devices\n            </robo-grid-item>\n            <robo-grid-item>\n              <robo-icon icon=\"check\" /> Update your Robonomics devices as you wish with type-c\n            </robo-grid-item>\n          </robo-grid>\n        </robo-text>\n      </robo-section>\n    </robo-grid>\n  </robo-layout-section>\n</template>\n\n<script>\nimport { useRobonomics } from \"@/hooks/useRobonomics\";\nimport { fromUnit } from \"@/utils/tools\";\nimport { bnToBn } from \"@polkadot/util\";\nimport { computed, onUnmounted, ref, watch } from \"vue\";\nimport { useStore } from \"vuex\";\n\nexport default {\n  setup() {\n    const price = ref(0);\n    const freeAuctions = ref(0);\n    let unsubscribeBlock = null;\n\n    const store = useStore();\n    const rwsactive = computed(() => {\n      return store.state.robonomicsUIvue.rws.active;\n    });\n    const linkActivate = computed(() => {\n      return store.state.robonomicsUIvue.rws.links.activate;\n    });\n\n    const { isReady, getInstance } = useRobonomics();\n\n    watch(\n      isReady,\n      async (isReady) => {\n        if (isReady) {\n          const robonomics = getInstance();\n          freeAuctions.value = (await robonomics.rws.getAuctionQueue()).length;\n          unsubscribeBlock = await robonomics.events.onBlock(async () => {\n            freeAuctions.value = (\n              await robonomics.rws.getAuctionQueue()\n            ).length;\n          });\n          const minimalBid = await robonomics.rws.getMinimalBid();\n          price.value = minimalBid.add(bnToBn(1));\n        }\n      },\n      { immediate: true }\n    );\n\n    onUnmounted(() => {\n      if (unsubscribeBlock) {\n        unsubscribeBlock();\n      }\n    });\n\n    const priceFormat = computed(() => {\n      if (isReady.value) {\n        return fromUnit(\n          price.value,\n          getInstance().api.registry.chainDecimals[0],\n          0\n        );\n      }\n      return 0;\n    });\n\n    return {\n      rwsactive,\n      linkActivate,\n      freeAuctions,\n      price: priceFormat\n    };\n  }\n};\n</script>\n\n<style>\n#home-links .robo-link {\n  position: relative;\n  display: block;\n  background-color: var(--robo-color-blue-80);\n  min-height: 150px;\n  color: var(--robo-color-light);\n  padding: var(--robo-space);\n  font-weight: bold;\n  text-transform: uppercase;\n}\n\n#home-links .robo-link:before {\n  content: \"\";\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  height: 15px;\n  background-color: var(--robo-color-blue);\n  z-index: 1;\n  transition: 0.2s all;\n}\n\n#home-links .robo-link:hover::before {\n  height: 100%;\n}\n\n#home-links .robo-link span {\n  display: block;\n  margin-top: 30px;\n  position: relative;\n  z-index: 2;\n}\n</style>\n","import { render } from \"./Home.vue?vue&type=template&id=7c8a7200\"\nimport script from \"./Home.vue?vue&type=script&lang=js\"\nexport * from \"./Home.vue?vue&type=script&lang=js\"\n\nimport \"./Home.vue?vue&type=style&index=0&id=7c8a7200&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <robo-section offset=\"x2\" width=\"narrow\">\n    <robo-section offset=\"x3\">\n      <robo-select\n        block\n        :values=\"commands.map((item) => item.value)\"\n        :options=\"commands.map((item) => item.name)\"\n        v-model=\"parameter\"\n      />\n      <br />\n      <robo-button @click=\"send\" block :loading=\"proccess\">Pay</robo-button>\n      <robo-text weight=\"bold\" v-if=\"result\">{{ result }}</robo-text>\n      <robo-text highlight=\"error\" v-if=\"error\">{{ error }}</robo-text>\n    </robo-section>\n  </robo-section>\n</template>\n\n<script>\nimport { ref, inject } from \"vue\";\nimport * as config from \"./config\";\n\nexport default {\n  setup() {\n    const RobonomicsProvider = inject(\"RobonomicsProvider\");\n\n    const proccess = ref(false);\n    const result = ref(null);\n    const error = ref(null);\n    const commands = ref(config.listOfCommands);\n    const parameter = ref(config.listOfCommands[0].value);\n    const unsubscribe = ref(null);\n\n    const send = async () => {\n      error.value = \"\";\n      result.value = \"\";\n      proccess.value = true;\n      try {\n        const txs = [\n          RobonomicsProvider.instance.value.api.tx.balances.transfer(\n            config.robot,\n            config.price\n          ),\n          RobonomicsProvider.instance.value.launch.send(\n            config.robot,\n            parameter.value\n          )\n        ];\n        const tx = RobonomicsProvider.instance.value.api.tx.utility.batch(txs);\n        const resultTx =\n          await RobonomicsProvider.instance.value.accountManager.signAndSend(\n            tx\n          );\n        console.log(\"saved\", resultTx);\n        result.value = `${resultTx.blockNumber}-${resultTx.txIndex}`;\n      } catch (error) {\n        console.log(error);\n        error.value = error.message;\n      }\n      proccess.value = false;\n    };\n\n    return {\n      proccess,\n      result,\n      error,\n      commands,\n      parameter,\n      unsubscribe,\n      send\n    };\n  }\n};\n</script>\n","export const price = 500_000_000;\nexport const robot = \"4GfZP7fbGZBx5GxR4mreLGTm872vHYhDMmaV6d1SEHGtv7AP\";\nexport const listOfCommands = [\n  {\n    name: \"Wave Hand\",\n    value: \"0x3000000000000000000000000000000000000000000000000000000000000000\"\n  },\n  {\n    name: \"Wave Hand with Turn\",\n    value: \"0x3100000000000000000000000000000000000000000000000000000000000000\"\n  },\n  {\n    name: \"Shake Hand\",\n    value: \"0x3200000000000000000000000000000000000000000000000000000000000000\"\n  }\n];\n","import { render } from \"./RobonomicsLaunch.vue?vue&type=template&id=40ebbd76\"\nimport script from \"./RobonomicsLaunch.vue?vue&type=script&lang=js\"\nexport * from \"./RobonomicsLaunch.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <robo-layout-section>\n    <robo-section offset=\"x2\" width=\"narrow\" style=\"text-align: center\">\n      <h2>Pay the robot with cryptocurrency.</h2>\n      <br />\n      <robo-text>\n        Experience this unique demo of the future robot economy on the streets\n        of Las Vegas during CES 2025! Pay one Robonomics token ($XRT) to a\n        humanoid for any basic action.\n      </robo-text>\n      <br />\n      <robo-text weight=\"bold\" style=\"font-size: 40px\">\n        Price: 0.5<img src=\"./icon_XRT.png\" class=\"logo\" />\n      </robo-text>\n    </robo-section>\n\n    <template v-if=\"RobonomicsProvider.isReady\">\n      <robonomics-launch />\n    </template>\n    <template v-else>...</template>\n  </robo-layout-section>\n</template>\n\n<script setup>\nimport { inject } from \"vue\";\nimport RobonomicsLaunch from \"./RobonomicsLaunch.vue\";\n\nconst RobonomicsProvider = inject(\"RobonomicsProvider\");\n</script>\n\n<style scoped>\n.logo {\n  width: 45px;\n  vertical-align: text-top;\n  margin: -2px 5px 0;\n}\n</style>\n","import script from \"./RobonomicsApp.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./RobonomicsApp.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./RobonomicsApp.vue?vue&type=style&index=0&id=2314f0b4&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-2314f0b4\"]])\n\nexport default __exports__","<script>\nexport default {\n  created: function () {\n    window.location.href = `https://v0.dapp.robonomics.network/${this.$route.href}`;\n  }\n};\n</script>\n","import script from \"./PathNotFound.vue?vue&type=script&lang=js\"\nexport * from \"./PathNotFound.vue?vue&type=script&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <robo-layout-section>\n    <robo-template-rws-buy\n      :price=\"price\"\n      activationtime=\"2\"\n      :available=\"freeAuctions\"\n      :chainInfoUploaded=\"chainInfoStatus\"\n      :rwsExpiration=\"expiredate\"\n      @on-activate=\"onActivate\"\n    />\n  </robo-layout-section>\n</template>\n\n<script>\nimport { useAccount } from \"@/hooks/useAccount\";\nimport { useBalance } from \"@/hooks/useBalance\";\nimport { useDevices } from \"@/hooks/useDevices\";\nimport { useRobonomics } from \"@/hooks/useRobonomics\";\nimport { useSend } from \"@/hooks/useSend\";\nimport { useSubscription } from \"@/hooks/useSubscription\";\nimport { fromUnit } from \"@/utils/tools\";\nimport { bnToBn } from \"@polkadot/util\";\nimport { computed, onUnmounted, ref, watch, watchEffect } from \"vue\";\n\nexport default {\n  setup() {\n    const price = ref(0);\n    const freeAuctions = ref(0);\n    const chainInfoStatus = ref(false);\n    let unsubscribeBlock = null;\n\n    const { isReady, getInstance } = useRobonomics();\n    const { account, unsubscribe: unsubscribeAccount } = useAccount();\n    const { balance, unsubscribe: unsubscribeBalance } = useBalance(account);\n    const subscription = useSubscription(account);\n    const devices = useDevices(account);\n\n    watch(\n      isReady,\n      async (isReady) => {\n        if (isReady) {\n          const robonomics = getInstance();\n          freeAuctions.value = (await robonomics.rws.getAuctionQueue()).length;\n          unsubscribeBlock = await robonomics.events.onBlock(async () => {\n            freeAuctions.value = (\n              await robonomics.rws.getAuctionQueue()\n            ).length;\n          });\n\n          const minimalBid = await robonomics.rws.getMinimalBid();\n          price.value = minimalBid.add(bnToBn(1));\n          chainInfoStatus.value = true;\n        }\n      },\n      { immediate: true }\n    );\n\n    onUnmounted(() => {\n      if (unsubscribeBlock) {\n        unsubscribeBlock();\n      }\n      if (unsubscribeBalance) {\n        unsubscribeBalance();\n      }\n      unsubscribeAccount();\n    });\n\n    const transaction = useSend();\n    const onActivate = async (setStatus) => {\n\n      if (!isReady.value) {\n        setStatus(\"error\", \"Parachain is not ready\");\n        return;\n      }\n\n      if (\n        !balance.value ||\n        bnToBn(balance.value).lt(price.value.add(bnToBn(10000000)))\n      ) {\n        console.log(balance.value);\n        setStatus(\n          \"error\",\n          \"Subscription can not be activated due to unsuffcicient XRT balance\"\n        );\n        return;\n      }\n\n      if (freeAuctions.value <= 0) {\n        setStatus(\"error\", \"There are no available subscriptions\");\n        return;\n      }\n\n      if (subscription.hasSubscription.value && subscription.isActive.value) {\n        setStatus(\"error\", \"You have an active subscription\");\n        return;\n      }\n\n      const robonomics = getInstance();\n      let call = robonomics.rws.bid(\n        Number(await robonomics.rws.getFirtsFreeAuction()),\n        price.value\n      );\n      if (!devices.devices.value.includes(account.value)) {\n        call = robonomics.api.tx.utility.batch([\n          call,\n          robonomics.rws.setDevices([...devices.devices.value, account.value])\n        ]);\n      }\n      const tx = transaction.createTx();\n      await transaction.send(tx, call);\n      if (tx.error.value) {\n        if (tx.error.value !== \"Cancelled\") {\n          setStatus(\"error\", tx.error.value);\n        } else {\n          setStatus(\"cancel\");\n        }\n        return;\n      }\n\n      const unsubscribeBlock = await robonomics.events.onBlock(() => {\n        subscription.loadLedger();\n      });\n      const stopWatchEffect = watchEffect(() => {\n        if (subscription.hasSubscription.value && subscription.isActive.value) {\n          stopWatchEffect();\n          unsubscribeBlock();\n          setStatus(\"ok\");\n        }\n      });\n    };\n\n    const priceFormat = computed(() => {\n      if (isReady.value) {\n        return fromUnit(\n          price.value,\n          getInstance().api.registry.chainDecimals[0],\n          0\n        );\n      }\n      return 0;\n    });\n\n    return {\n      freeAuctions,\n      price: priceFormat,\n      expiredate: subscription.validUntil,\n      chainInfoStatus,\n      onActivate\n    };\n  }\n};\n</script>","import { ref, watch } from \"vue\";\nimport { useRobonomics } from \"./useRobonomics\";\n\nexport const useBalance = (account) => {\n  const balance = ref(null);\n  const { isReady, getInstance } = useRobonomics();\n  let unsubscribe;\n  watch(\n    [account, isReady],\n    async () => {\n      if (unsubscribe) {\n        unsubscribe();\n      }\n      if (!isReady.value || !account.value) {\n        return;\n      }\n      const robonomics = getInstance();\n      unsubscribe = await robonomics.account.getBalance(account.value, (r) => {\n        balance.value = r.free.sub(r.frozen).toNumber();\n      });\n    },\n    { immediate: true }\n  );\n  return { balance, unsubscribe };\n};\n","import { render } from \"./RwsActivate.vue?vue&type=template&id=4413a05e\"\nimport script from \"./RwsActivate.vue?vue&type=script&lang=js\"\nexport * from \"./RwsActivate.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <robo-layout-section>\n    <robo-rws-setup\n      :onUserDelete=\"removeUser\"\n      :onUserAdd=\"addUser\"\n      :onSaveHapass=\"saveHapass\"\n      :onControllerEdit=\"addUser\"\n    />\n  </robo-layout-section>\n</template>\n\n<script>\nimport { useAccount } from \"@/hooks/useAccount\";\nimport { useDevices } from \"@/hooks/useDevices\";\nimport { useRobonomics } from \"@/hooks/useRobonomics\";\nimport { useSend } from \"@/hooks/useSend\";\nimport { u8aToHex } from \"@polkadot/util\";\nimport { decodeAddress, encodeAddress } from \"@polkadot/util-crypto\";\nimport { computed } from \"vue\";\nimport { useStore } from \"vuex\";\n\nexport default {\n  setup() {\n    const store = useStore();\n\n    const setupOwner = computed(() => {\n      return store.state.robonomicsUIvue.rws.active;\n    });\n\n    const { isReady, getInstance } = useRobonomics();\n    const transaction = useSend();\n    const devices = useDevices(setupOwner);\n    const { account } = useAccount();\n\n    const addUser = async (user, setStatus) => {\n\n      if (!isReady.value) {\n        setStatus(\"error\", \"Parachain is not ready.\");\n        return;\n      }\n      if (setupOwner.value && setupOwner.value !== account.value) {\n        setStatus(\"error\", \"You do not have access to this action.\");\n        return;\n      }\n      if (devices.devices.value.includes(user)) {\n        setStatus(\"error\", \"The address is already in the subscription.\");\n        return;\n      }\n\n      const call = await getInstance().rws.setDevices([\n        ...devices.devices.value,\n        user\n      ]);\n      const tx = transaction.createTx();\n      if (devices.devices.value.includes(account.value)) {\n        await transaction.send(tx, call, setupOwner.value);\n      } else {\n        await transaction.send(tx, call);\n      }\n      if (tx.error.value) {\n        if (tx.error.value !== \"Cancelled\") {\n          setStatus(\"error\", tx.error.value);\n        } else {\n          setStatus(\"cancel\");\n        }\n        return;\n      } else {\n        await devices.loadDevices();\n      }\n      store.commit(\"rws/setUsers\", devices.devices);\n      setStatus(\"ok\");\n    };\n\n    const removeUser = async (user, setStatus) => {\n      if (!isReady.value) {\n        setStatus(\"error\", \"Parachain is not ready.\");\n        return;\n      }\n      if (setupOwner.value && setupOwner.value !== account.value) {\n        setStatus(\"error\", \"You do not have access to this action.\");\n        return;\n      }\n      if (devices.devices.value.includes(user)) {\n        const call = await getInstance().rws.setDevices(\n          devices.devices.value.filter((item) => item !== user)\n        );\n        const tx = transaction.createTx();\n        if (devices.devices.value.includes(account.value)) {\n          await transaction.send(tx, call, setupOwner.value);\n        } else {\n          await transaction.send(tx, call);\n        }\n        if (tx.error.value) {\n          if (tx.error.value !== \"Cancelled\") {\n            setStatus(\"error\", tx.error.value);\n          } else {\n            setStatus(\"cancel\");\n          }\n          return;\n        } else {\n          await devices.loadDevices();\n        }\n      }\n      store.commit(\"rws/setUsers\", devices.devices);\n      setStatus(\"ok\");\n    };\n\n    const saveHapass = async (passToSave, setStatus) => {\n      if (!isReady.value) {\n        setStatus(\"error\", \"Parachain is not ready.\");\n        return;\n      }\n      const userAddress = store.state.robonomicsUIvue.rws.user.account;\n      const userType = store.state.robonomicsUIvue.rws.user.acctype ?? 'ed25519';\n      console.log('userType', userType);\n\n      const robonomics = getInstance();\n\n      await robonomics.accountManager.addPair(\n        store.state.robonomicsUIvue.rws.user.key\n      );\n      const user = robonomics.accountManager.encryptor();\n\n      try {\n        encodeAddress(userAddress);\n      } catch (error) {\n        setStatus(\"error\", error.message);\n        return;\n      }\n\n      const encodedDevices = devices.devices.value.map((item) =>\n        encodeAddress(item)\n      );\n      if (!encodedDevices.includes(encodeAddress(userAddress))) {\n        setStatus(\"error\", \"User not found in subscription\");\n        return;\n      }\n\n      const setup = store.state.robonomicsUIvue.rws.list.find(\n        (item) => item.owner === setupOwner.value\n      );\n\n      const passwordForAdmin = user.encryptMessage(\n        passToSave,\n        decodeAddress(setup.controller)\n      );\n\n      const passwordForRecovery = user.encryptMessage(\n        passToSave,\n        decodeAddress(userAddress)\n      );\n\n      const call = await robonomics.datalog.write(\n        JSON.stringify({\n          subscription: setup.owner,\n          ha: setup.controller,\n          admin: u8aToHex(passwordForAdmin),\n          user: u8aToHex(passwordForRecovery)\n        })\n      );\n      const tx = transaction.createTx();\n      await transaction.send(tx, call, setup.owner);\n\n      try {\n        const accountOld = store.state.robonomicsUIvue.polkadot.accounts.find(\n          (item) => item.address === store.state.robonomicsUIvue.polkadot.address\n        );\n      \n      if (accountOld) {\n        await robonomics.accountManager.setSender(accountOld.address, {\n          type: accountOld.type,\n          extension: store.state.robonomicsUIvue.polkadot.extensionObj\n        });\n      }\n      } catch (e) { console.error(e); }\n\n      if (tx.error.value) {\n        if (tx.error.value !== \"Cancelled\") {\n          setStatus(\"error\", tx.error.value);\n        } else {\n          setStatus(\"cancel\");\n        }\n        return;\n      }\n\n      setStatus(\"ok\");\n    };\n\n    return {\n      saveHapass,\n      addUser,\n      removeUser\n    };\n  }\n};\n</script>\n","import { render } from \"./RwsSetup.vue?vue&type=template&id=255aa856\"\nimport script from \"./RwsSetup.vue?vue&type=script&lang=js\"\nexport * from \"./RwsSetup.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <robo-layout-section>\n    <robo-rws-setup-new\n      :onRequestSubscription=\"onRequestSubscription\"\n      :onSetupGenerate=\"onSetupGenerate\"\n    />\n  </robo-layout-section>\n</template>\n\n<script setup>\nimport { getDevices } from \"@/hooks/useDevices\";\nimport { useRobonomics } from \"@/hooks/useRobonomics\";\nimport { useSend } from \"@/hooks/useSend\";\nimport { getLedger, getValidUntil } from \"@/hooks/useSubscription\";\nimport { nextTick, watch } from \"vue\";\n\nconst { isReady, getInstance } = useRobonomics();\nconst transaction = useSend();\n\nconst onRequestSubscription = async (address, send) => {\n  watch(\n    isReady,\n    async (isReady) => {\n      if (isReady) {\n        try {\n          const robonomics = getInstance();\n          const ledger = await getLedger(robonomics, address);\n          send(getValidUntil(ledger));\n        } catch (e) {\n          console.log(e);\n          send(null);\n        }\n      }\n    },\n    { immediate: true }\n  );\n};\n\nconst onSetupGenerate = async (config, setStatus) => {\n  console.log('onSetupGenerate', config)\n  watch(\n    isReady,\n    async (isReady) => {\n      if (isReady) {\n        try {\n          const robonomics = getInstance();\n          if (robonomics.accountManager.account.address !== config.owner) {\n            setStatus(\"error\", \"owner != signer\");\n            return;\n          }\n          const devices = await getDevices(robonomics, config.owner);\n          if (devices.includes(config.controller)) {\n            setStatus(\"ok\", \"Setup saved\");\n            if (stop) {\n              stop();\n            } else {\n              nextTick(() => {\n                stop();\n              });\n            }\n            return;\n          }\n          const call = await robonomics.rws.setDevices([\n            ...devices,\n            config.controller\n          ]);\n          const tx = transaction.createTx();\n          if (devices.includes(config.owner)) {\n            await transaction.send(tx, call, config.owner);\n          } else {\n            await transaction.send(tx, call);\n          }\n          if (tx.error.value) {\n            if (tx.error.value !== \"Cancelled\") {\n              setStatus(\"error\", tx.error.value);\n            } else {\n              setStatus(\"error\", 'cancel');\n            }\n            return;\n          } else {\n            setStatus(\"ok\", \"Setup saved\");\n          }\n        } catch (e) {\n          console.log(e);\n          setStatus(\"error\", e);\n        }\n      }\n    },\n    { immediate: true }\n  );\n};\n</script>\n","import script from \"./RwsSetupNew.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./RwsSetupNew.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <robo-layout-section>\n    energy-monitor\n  </robo-layout-section>\n</template>\n","import { render } from \"./Energy-monitor.vue?vue&type=template&id=827cb03e\"\nconst script = {}\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n\n  <Libp2p\n    v-if=\"type === 'libp2p'\"\n    :config=\"config\"\n    :isKey\n    @connected=\"handlerConnected\"\n    @error=\"handlerError\"\n  />\n  <Launch v-else :config=\"config\" :isKey />\n</template>\n\n<script>\nimport { useRobonomics } from \"@/hooks/useRobonomics\";\nimport { onMounted, onUnmounted, ref, watch, computed } from \"vue\";\nimport { useStore } from \"vuex\";\nimport Launch from \"./Launch.vue\";\nimport Libp2p from \"./Libp2p.vue\";\nimport { useConfig } from \"./common\";\n\nexport default {\n  components: { Libp2p, Launch },\n  setup() {\n    const store = useStore();\n    const { isReady, accountManager } = useRobonomics();\n    const { config, load } = useConfig();\n    const isKey = ref(false);\n\n    const type = computed( () => {\n      /* always has a value, default is 'libp2p' */\n      return store.state.robonomicsUIvue.polkadot.connection.type;\n    });\n\n    onMounted(() => {\n      // store.commit(\"polkadot/setConnectionConnected\", false);\n      store.commit(\"polkadot/setConnectionStatus\", null);\n    });\n    \n    onUnmounted(async () => {\n      if (\n        isReady.value &&\n        isKey.value &&\n        store.state.robonomicsUIvue.polkadot.address !==\n          accountManager.account.address\n      ) {\n        try {\n          const accountOld = store.state.robonomicsUIvue.polkadot.accounts.find(\n          (item) =>\n              item.address === store.state.robonomicsUIvue.polkadot.address\n          );\n          if (accountOld) {\n            await accountManager.setSender(accountOld.address, {\n              type: accountOld.type,\n              extension: store.state.robonomicsUIvue.polkadot.extensionObj\n            });\n          }\n        } catch (e) { console.error(e); }\n      }\n    });\n\n    watch(() => isReady.value, v => {\n      if(type.value === \"parachain\") {\n        store.commit(\"polkadot/setConnectionConnected\", v);\n      }\n    }, {immediate: true});\n\n    watch(\n      () => store.state.robonomicsUIvue.rws.user.key,\n      async (key) => {\n        if (key) {\n          await accountManager.addPair(key);\n          isKey.value = true;\n          load();\n        } else {\n          console.log(\"User key not found\");\n        }\n      },\n      { immediate: true }\n    );\n\n    return {\n      store,\n      type,\n      isKey,\n      config,\n      handlerConnected: (result) => {\n        store.commit(\"polkadot/setConnectionType\", \"libp2p\");\n\n        if (result.protoNames().includes(\"p2p-circuit\")) {\n          store.commit(\"polkadot/setConnectionStatus\", \"via relay\");\n        } else {\n          store.commit(\"polkadot/setConnectionStatus\", null);\n        }\n\n        store.commit(\"polkadot/setConnectionConnected\", true);\n      },\n      handlerError: (e) => {\n        console.log(e.message);\n        console.log(\"Switching to parachain\");\n\n        store.commit(\"polkadot/setConnectionType\", \"parachain\");\n        store.commit(\"polkadot/setConnectionConnected\", true);\n        store.commit(\"polkadot/setConnectionStatus\", null); /* delete message about relay if it was there */\n      }\n    };\n  }\n};\n</script>\n","<template>\n  <robo-smarthome-dashboard\n    :config=\"config\"\n    :datalog=\"data\"\n    :updateTime=\"updateTime\"\n  />\n</template>\n\n<script>\nimport { watch } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { useData } from \"./launch\";\n\nexport default {\n  props: {\n    isKey: {\n      default: false,\n      type: Boolean\n    },\n    config: {\n      default: null,\n      type: Object\n    }\n  },\n  setup(props) {\n    const { data, updateTime, run, launch } = useData();\n    const store = useStore();\n\n    watch(\n      () => props.isKey,\n      (value) => {\n        if (value) {\n          run();\n        }\n      },\n      { immediate: true }\n    );\n\n    watch(\n      () => store.state.robonomicsUIvue.rws.launch,\n      (value) => {\n        try {\n          launch(JSON.parse(value));\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    );\n\n    return { data, updateTime };\n  }\n};\n</script>\n","import { useAccount } from \"@/hooks/useAccount\";\nimport { inject, watch } from \"vue\";\n\nexport function useIpfs() {\n  const { account } = useAccount();\n  const { instance } = inject(\"IpfsProvider\");\n\n  watch(account, async () => {\n    if (instance.value) {\n      instance.value.authClear();\n    }\n  });\n\n  return instance.value;\n}\n","import { u8aToString } from \"@polkadot/util\";\nimport { utils } from \"robonomics-interface\";\n\nconst clearJson = (string) => {\n  return string\n    .replaceAll(\"'\", '\"')\n    .replaceAll(\"\\\\\", \"\")\n    .replaceAll('\"\"', '\"')\n    .replaceAll(\"True\", \"true\")\n    .replaceAll(\"False\", \"false\")\n    .replaceAll(\"None\", '\"None\"');\n};\n\nexport const parseJson = (string) => {\n  try {\n    return JSON.parse(string);\n  } catch (error) {\n    console.log(\"error parse 1\");\n  }\n  try {\n    return JSON.parse(clearJson(string));\n  } catch (error) {\n    console.log(\"error parse 2\");\n    console.log(string);\n  }\n  return false;\n};\n\nconst getLastIndex = async (robonomics, address) => {\n  const id = await robonomics.datalog.getLastId(address);\n  return id.id;\n};\nexport const getLastDatalog = async (robonomics, controller) => {\n  // console.log(\"getLastDatalog\");\n  if (!controller) {\n    return false;\n  }\n  const lastIndex = await getLastIndex(robonomics, controller);\n  if (lastIndex !== null && lastIndex >= 0) {\n    const last = await robonomics.datalog.readByIndex(controller, lastIndex);\n    return { timestamp: last[0].toNumber(), cid: u8aToString(last[1]) };\n  }\n  return false;\n};\n\n// export const getLastDatalog = async (robonomics, controller) => {\n//   console.log(\"getLastDatalog\");\n//   if (!controller) {\n//     return false;\n//   }\n//   const result = await robonomics.datalog.read(controller);\n//   if (!result.length) {\n//     return false;\n//   }\n//   const last = result[result.length - 1];\n//   return { timestamp: last[0].toNumber(), cid: u8aToString(last[1]) };\n// };\n\nexport const getConfigCid = async (robonomics, controller, twin_id) => {\n  // console.log(\"getConfigCid\");\n  if (!controller || (!twin_id && twin_id !== 0)) {\n    return false;\n  }\n  const twin = await robonomics.twin.getTwin(twin_id);\n  if (!twin) {\n    return false;\n  }\n  const configHex = Object.keys(twin).find((key) => twin[key] === controller);\n  if (!configHex) {\n    return false;\n  }\n  return utils.hexToCid(configHex);\n};\n","import configApp from \"@/config\";\nimport { useIpfs } from \"@/hooks/useIpfs\";\nimport { useRobonomics } from \"@/hooks/useRobonomics\";\nimport { createPair, encryptor } from \"@/utils/encryptor\";\nimport { getConfigCid, getLastDatalog, parseJson } from \"@/utils/telemetry\";\nimport { hexToU8a, u8aToString } from \"@polkadot/util\";\nimport { decodeAddress } from \"@polkadot/util-crypto\";\nimport { ref, watch } from \"vue\";\nimport { useStore } from \"vuex\";\n\nexport const chainSS58 = 32;\n\nconst catFile = async (store, ipfs, cid) => {\n  if (!cid) {\n    return false;\n  }\n  const res = await ipfs.catViaGateways(\n    store.state.robonomicsUIvue.ipfs.gateways,\n    cid\n  );\n  store.commit(\"ipfs/setActiveGateway\", res.gateway);\n  return res.result;\n};\n\nexport const decryptData = async (encryptedMsg, controller, account) => {\n  if (encryptedMsg) {\n    try {\n      const controllerPublicKey = decodeAddress(controller);\n      const seed = account.decryptMessage(\n        hexToU8a(encryptedMsg[account.address]),\n        controllerPublicKey\n      );\n      const admin = encryptor(createPair(u8aToString(seed)));\n      const data = admin.decryptMessage(\n        hexToU8a(encryptedMsg.data),\n        controllerPublicKey\n      );\n      return parseJson(u8aToString(data));\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n  return false;\n};\n\nexport const readFileDecrypt = async (\n  cid,\n  controller,\n  account,\n  store,\n  ipfs\n) => {\n  if (cid) {\n    const data = await catFile(store, ipfs, cid);\n    if (!data) {\n      console.log(`Error: ${cid} not found in ipfs`);\n      throw new Error(`${cid} not found in ipfs`);\n    }\n    const result = await decryptData(data, controller, account);\n    if (result) {\n      return result;\n    } else {\n      console.log(`Error: decryptMsg`);\n      throw new Error(`decryptMsg`);\n    }\n  }\n  return null;\n};\n\nconst loadSetup = (store) => {\n  if (store.state.robonomicsUIvue.rws.active) {\n    const setupRaw = store.state.robonomicsUIvue.rws.list.find(\n      (item) => item.owner === store.state.robonomicsUIvue.rws.active\n    );\n    if (setupRaw) {\n      try {\n        return {\n          controller: setupRaw.controller,\n          owner: setupRaw.owner\n        };\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n  return false;\n};\n\nexport const useSetup = () => {\n  const controller = ref(null);\n  const owner = ref(null);\n\n  const store = useStore();\n\n  watch(\n    () => store.state.robonomicsUIvue.rws.active,\n    () => {\n      const setup = loadSetup(store);\n      if (setup) {\n        controller.value = setup.controller;\n        owner.value = setup.owner;\n      }\n    },\n    { immediate: true }\n  );\n\n  return { controller, owner };\n};\n\nexport const notify = (store, text, timeout = 3000) => {\n  store.dispatch(\"app/setStatus\", {\n    value: text,\n    timeout\n  });\n  // console.log(text);\n};\n\nexport const setStatusLaunch = (store, command, status) => {\n  store.commit(\n    \"rws/setLaunch\",\n    JSON.stringify({ ...command, tx: { tx_status: status } })\n  );\n};\n\nexport const useLastDatalog = () => {\n  const cid = ref(null);\n  const updateTime = ref(null);\n  const data = ref(null);\n\n  const store = useStore();\n  const ipfs = useIpfs();\n  const { isReady, getInstance } = useRobonomics();\n  const { controller } = useSetup();\n\n  (async () => {\n    if (isReady.value && controller.value) {\n      const robonomics = getInstance();\n      const datalog = await getLastDatalog(robonomics, controller.value);\n      cid.value = datalog.cid;\n      updateTime.value = datalog.timestamp;\n      try {\n        data.value = await readFileDecrypt(\n          cid.value,\n          controller.value,\n          robonomics.accountManager.encryptor(),\n          store,\n          ipfs\n        );\n      } catch (error) {\n        console.log(error);\n        notify(store, error.message);\n      }\n    }\n  })();\n\n  return { cid, updateTime, data };\n};\n\nexport const useConfig = () => {\n  const config = ref(null);\n\n  const store = useStore();\n  const ipfs = useIpfs();\n  const { isReady, getInstance, accountManager } = useRobonomics();\n  const { controller } = useSetup();\n\n  const getConfig = async (controller) => {\n    const endpoint =\n      localStorage.getItem(\"rpc-parachain\") || configApp.default_rpc_endpoint;\n    const lsKey = `haconfig:${endpoint}:${controller}`;\n\n    if (!isReady.value) {\n      const data = localStorage.getItem(lsKey);\n      if (data) {\n        try {\n          const parsedData = JSON.parse(data);\n          console.log(\"getConfig cache\");\n          return { data: parsedData.value, cache: true };\n        } catch (error) {\n          console.log(\"haconfig bad\", error);\n        }\n      } else {\n        return { data: null, cache: true };\n      }\n    } else {\n      const robonomics = getInstance();\n\n      const datalog = await getLastDatalog(robonomics, controller);\n      const result = await readFileDecrypt(\n        datalog.cid,\n        controller,\n        accountManager.encryptor(),\n        store,\n        ipfs\n      );\n\n      if (result) {\n        const twin_id = result.twin_id;\n        notify(store, `Twin id #${twin_id}`);\n\n        notify(store, `Start load config`);\n        const cid = await getConfigCid(robonomics, controller, twin_id);\n        if (!cid) {\n          console.log(\"Config not found\");\n          console.log(\"controller\", controller);\n          console.log(\"twin_id\", twin_id);\n        }\n\n        const config = await readFileDecrypt(\n          cid,\n          controller,\n          accountManager.encryptor(),\n          store,\n          ipfs\n        );\n\n        localStorage.setItem(\n          lsKey,\n          JSON.stringify({ time: Date.now(), value: config })\n        );\n        console.log(\"getConfig chain\");\n\n        return { data: config, cache: false };\n      }\n    }\n    return { data: null, cache: false };\n  };\n\n  const load = async () => {\n    notify(store, \"Find twin id\");\n\n    if (\n      !controller.value ||\n      !accountManager.account ||\n      accountManager.account.type !== \"ed25519\"\n    ) {\n      notify(store, \"Error\");\n      return;\n    }\n\n    let result;\n    try {\n      result = await getConfig(controller.value);\n    } catch (error) {\n      console.log(error);\n      notify(store, \"Error: \" + error.message);\n      return;\n    }\n\n    config.value = result.data;\n    if (result.cache) {\n      const stop = watch(\n        isReady,\n        async () => {\n          if (isReady.value) {\n            try {\n              const result = await getConfig(controller.value);\n              config.value = result.data;\n              stop();\n            } catch (error) {\n              console.log(error);\n              notify(store, \"Error: \" + error.message);\n            }\n          }\n        },\n        { immediate: true }\n      );\n    }\n\n    if (config.value !== null) {\n      notify(store, `Config loaded`);\n    }\n  };\n\n  return { config, load };\n};\n","import { useDevices } from \"@/hooks/useDevices\";\nimport { useIpfs } from \"@/hooks/useIpfs\";\nimport { useRobonomics } from \"@/hooks/useRobonomics\";\nimport { useSend } from \"@/hooks/useSend\";\nimport { getLastDatalog } from \"@/utils/telemetry\";\nimport { stringToU8a, u8aToHex } from \"@polkadot/util\";\nimport { decodeAddress } from \"@polkadot/util-crypto\";\nimport { onUnmounted, ref, watch } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { notify, readFileDecrypt, setStatusLaunch, useSetup } from \"./common\";\n\nexport const useData = () => {\n  const cid = ref(null);\n  const updateTime = ref(null);\n  const data = ref(null);\n\n  const store = useStore();\n  const ipfs = useIpfs();\n  const { isReady, getInstance, accountManager } = useRobonomics();\n  const transaction = useSend();\n  const devices = useDevices();\n  const { controller, owner } = useSetup();\n\n  watch(\n    () => store.state.robonomicsUIvue.rws.active,\n    () => {\n      devices.owner.value = store.state.robonomicsUIvue.rws.active;\n    },\n    { immediate: true }\n  );\n\n  let unsubscribeDatalog;\n  const watchDatalog = async () => {\n    if (!isReady.value) {\n      return;\n    }\n    unsubscribeDatalog = await getInstance().datalog.on(\n      { method: \"NewRecord\" },\n      (results) => {\n        const r = results.filter((item) => {\n          return (\n            item.success &&\n            controller.value &&\n            item.data[0].toHuman() === controller.value\n          );\n        });\n        for (const item of r) {\n          updateTime.value = item.data[1].toNumber();\n          cid.value = item.data[2].toHuman();\n        }\n      }\n    );\n  };\n\n  watch(cid, async () => {\n    try {\n      data.value = await readFileDecrypt(\n        cid.value,\n        controller.value,\n        accountManager.encryptor(),\n        store,\n        ipfs\n      );\n    } catch (error) {\n      console.log(error);\n      notify(store, error.message);\n    }\n  });\n\n  const run = async () => {\n    if (controller.value) {\n      if (isReady.value) {\n        const datalog = await getLastDatalog(getInstance(), controller.value);\n        cid.value = datalog.cid;\n        updateTime.value = datalog.timestamp;\n        watchDatalog();\n      } else {\n        const stop = watch(isReady, (isReady) => {\n          if (isReady) {\n            run();\n            stop();\n          }\n        });\n      }\n    }\n  };\n\n  const stop = () => {\n    if (unsubscribeDatalog) {\n      unsubscribeDatalog();\n    }\n  };\n\n  onUnmounted(() => {\n    console.log(\"unmount launch\");\n    stop();\n  });\n\n  const launch = async (command) => {\n    console.log(command.launch.params.entity_id, command.tx.tx_status);\n    if (command.tx.tx_status !== \"pending\") {\n      return;\n    }\n\n    notify(store, `Launch command`);\n    console.log(`command ${JSON.stringify(command)}`);\n\n    if (!devices.devices.value.includes(accountManager.account.address)) {\n      notify(store, `Error: You do not have access to device management.`);\n      setStatusLaunch(store, command, \"error\");\n      return;\n    }\n\n    if (!ipfs.isAuth()) {\n      notify(store, `Authorization on ipfs node`);\n      try {\n        const signature = (\n          await accountManager.account.signMsg(\n            stringToU8a(accountManager.account.address)\n          )\n        ).toString();\n        ipfs.auth(owner.value, accountManager.account.address, signature);\n      } catch (error) {\n        if (error.message === \"Cancelled\") {\n          setStatusLaunch(store, command, \"declined\");\n        } else {\n          console.log(error);\n          setStatusLaunch(store, command, \"error\");\n        }\n        return;\n      }\n      setStatusLaunch(store, command, \"approved\");\n    }\n\n    const encryptor = accountManager.encryptor();\n    const controllerPublicKey = decodeAddress(controller.value);\n\n    let commandCid;\n    try {\n      const cmdString = JSON.stringify(command.launch);\n      const cmdCrypto = encryptor.encryptMessage(\n        cmdString,\n        controllerPublicKey\n      );\n      commandCid = await ipfs.add(u8aToHex(cmdCrypto));\n    } catch (error) {\n      setStatusLaunch(store, command, \"error\");\n      notify(store, `Error: ${error.message}`);\n      return;\n    }\n    console.log(`launch ipfs file ${commandCid.path}`);\n\n    if (!isReady.value) {\n      notify(store, `Error: Robonomics is not ready.`);\n      setStatusLaunch(store, command, \"error\");\n      return;\n    }\n\n    notify(store, `Send launch`);\n    const call = getInstance().launch.send(controller.value, commandCid.path);\n    const tx = transaction.createTx();\n    await transaction.send(tx, call, owner.value);\n    if (tx.error.value) {\n      if (tx.error.value !== \"Cancelled\") {\n        setStatusLaunch(store, command, \"error\");\n        notify(store, `Error: ${tx.error.value}`);\n      } else {\n        setStatusLaunch(store, command, \"declined\");\n        notify(store, \"Calcel\");\n      }\n    } else {\n      console.log(command);\n      setStatusLaunch(store, command, \"success\");\n      notify(store, \"Launch sended\");\n    }\n  };\n\n  return { cid, updateTime, data, run, stop, launch };\n};\n","import { render } from \"./Launch.vue?vue&type=template&id=94861030\"\nimport script from \"./Launch.vue?vue&type=script&lang=js\"\nexport * from \"./Launch.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <robo-smarthome-dashboard\n    :config=\"config\"\n    :datalog=\"data\"\n    :updateTime=\"updateTime\"\n  />\n</template>\n\n<script>\nimport { watch } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { useData } from \"./libp2p\";\n\nexport default {\n  props: {\n    isKey: {\n      default: false,\n      type: Boolean\n    },\n    config: {\n      default: null,\n      type: Object\n    }\n  },\n  emits: [\"connected\", \"error\"],\n  setup(props, { emit }) {\n    const { data, updateTime, run, launch } = useData();\n    const store = useStore();\n\n    const isOnce = props.isKey && props.config !== null;\n    const stop = watch(\n      () => [props.isKey, props.config],\n      ([isKey, config]) => {\n        if (isKey && config !== null) {\n          if (!isOnce && typeof stop === \"function\") {\n            stop();\n          }\n          if (config.peer_id) {\n            (async () => {\n              const result = await run(\n                config.peer_id,\n                config.libp2p_multiaddress\n              );\n              if (result) {\n                emit(\"connected\", result);\n                if (!result.protoNames().includes(\"p2p-circuit\")) {\n                  const gateway = `http://${\n                    result.nodeAddress().address\n                  }:8080/ipfs/`;\n                  if (\n                    store.state.robonomicsUIvue.ipfs.activegateway !== gateway\n                  ) {\n                    console.log(\"set local gateway\", gateway);\n                    store.commit(\"ipfs/setActiveGateway\", gateway);\n                  }\n                } else {\n                  console.log(\"relay\");\n                }\n              } else {\n                emit(\"error\", new Error(\"connect\"));\n              }\n            })();\n          } else {\n            emit(\"error\", new Error(\"not found peer_id\"));\n          }\n        }\n      },\n      { immediate: true, once: isOnce }\n    );\n\n    watch(\n      () => store.state.robonomicsUIvue.rws.launch,\n      (value) => {\n        try {\n          launch(JSON.parse(value));\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    );\n\n    return { data, updateTime };\n  }\n};\n</script>\n","import { pipe } from \"it-pipe\";\nimport { fromString as uint8ArrayFromString } from \"uint8arrays/from-string\";\nimport { toString as uint8ArrayToString } from \"uint8arrays/to-string\";\n\nexport function createHa() {\n  return (components) => {\n    async function getRequest(stream) {\n      return pipe(stream, async function (source) {\n        let result = \"\";\n        for await (const data of source) {\n          result += uint8ArrayToString(data.subarray());\n        }\n        return JSON.parse(result);\n      });\n    }\n\n    async function sendResponse(stream, msg) {\n      return pipe(\n        [uint8ArrayFromString(JSON.stringify(msg))],\n        stream.sink\n      ).finally(() => {\n        stream.close();\n      });\n    }\n\n    return {\n      async handle(\n        protocol,\n        handler,\n        options = {\n          runOnTransientConnection: true\n        }\n      ) {\n        await components.registrar.handle(\n          protocol,\n          async ({ stream }) => {\n            handler(await getRequest(stream), stream);\n          },\n          options\n        );\n      },\n      async request(\n        connection,\n        protocol,\n        data,\n        options = {\n          runOnTransientConnection: true\n        }\n      ) {\n        if (connection.status !== \"open\") {\n          return;\n        }\n        const stream = await connection.newStream([protocol], options);\n        return pipe(\n          [uint8ArrayFromString(JSON.stringify(data))],\n          stream,\n          async function (source) {\n            let result = \"\";\n            for await (const data of source) {\n              result += uint8ArrayToString(data.subarray());\n            }\n            try {\n              // stream.close();\n              return JSON.parse(result);\n            } catch (error) {\n              return result;\n            }\n          }\n        );\n      },\n      utils: {\n        getRequest,\n        sendResponse\n      }\n    };\n  };\n}\n","import { noise } from \"@chainsafe/libp2p-noise\";\nimport { circuitRelayTransport } from \"@libp2p/circuit-relay-v2\";\nimport { identify } from \"@libp2p/identify\";\n// import { keychain } from \"@libp2p/keychain\";\n// import { defaultLogger } from \"@libp2p/logger\";\nimport { mplex } from \"@libp2p/mplex\";\n// import { webRTC } from \"@libp2p/webrtc\";\nimport { webSockets } from \"@libp2p/websockets\";\nimport * as filters from \"@libp2p/websockets/filters\";\nimport { multiaddr } from \"@multiformats/multiaddr\";\n// import { LevelDatastore } from \"datastore-level\";\n// import { Key } from \"interface-datastore\";\nimport { createLibp2p } from \"libp2p\";\nimport { createHa } from \"./ha\";\n\nexport async function createNode() {\n  // const selfKey = new Key(\"/pkcs8/self\");\n  // const datastore = new LevelDatastore(`libp2p/data`);\n  // const chain = keychain()({\n  //   datastore: datastore,\n  //   logger: defaultLogger()\n  // });\n  // let peerId;\n  // if (await datastore.has(selfKey)) {\n  //   peerId = await chain.exportPeerId(\"self\");\n  // }\n  const node = await createLibp2p({\n    // peerId: peerId,\n    // addresses: {\n    //   listen: [\"/webrtc\"]\n    // },\n    transports: [\n      webSockets({\n        filter: filters.all\n      }),\n      // webRTC(),\n      circuitRelayTransport()\n    ],\n    streamMuxers: [mplex()],\n    connectionEncryption: [noise()],\n    services: {\n      identify: identify(),\n      ha: createHa()\n    },\n    connectionGater: {\n      denyDialMultiaddr: () => {\n        return false;\n      }\n    },\n    connectionManager: {\n      minConnections: 0\n    }\n  });\n  // if (chain != null && !(await datastore.has(selfKey))) {\n  //   await chain.importPeer(\"self\", node.peerId);\n  // }\n  return node;\n}\nexport function defaultRelay(peer_id) {\n  return multiaddr(\n    `/dns4/libp2p-relay-1.robonomics.network/tcp/443/wss/p2p/12D3KooWEMFXXvpZUjAuj1eKR11HuzZTCQ5HmYG9MNPtsnqPSERD/p2p-circuit/p2p/${peer_id}`\n  );\n}\nexport async function connectMultiaddress(peer_id, peer_multiaddress) {\n  if (peer_multiaddress.length > 0) {\n    const localMultiaddrs = [];\n    const circuit = [];\n    for (const peer_multiaddr of peer_multiaddress) {\n      const localMultiaddr = multiaddr(peer_multiaddr);\n      const protos = localMultiaddr.protoNames();\n      if (protos.includes(\"ws\") || protos.includes(\"wss\")) {\n        if (protos.includes(\"p2p-circuit\")) {\n          circuit.push(localMultiaddr);\n        } else if (\n          window.location.protocol !== \"https:\" ||\n          protos.includes(\"wss\")\n        ) {\n          localMultiaddrs.push(localMultiaddr);\n        }\n      }\n    }\n\n    if (localMultiaddrs.length > 0) {\n      for (const addr of localMultiaddrs) {\n        try {\n          await connect(addr);\n          return addr;\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    }\n\n    if (circuit.length > 0) {\n      for (const addr of circuit) {\n        try {\n          await connect(addr);\n          return addr;\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    }\n  }\n  try {\n    const addr = defaultRelay(peer_id);\n    await connect(addr);\n    return addr;\n  } catch (error) {\n    console.log(error);\n  }\n  return false;\n}\n\nlet node = null;\nlet connections = [];\nlet connection = null;\n\nexport async function start() {\n  if (node) {\n    return node;\n  }\n  node = await createNode();\n  await node.start();\n  console.log(`Node started with id ${node.peerId.toString()}`);\n\n  function updateConnectionsList() {\n    connections = node.getConnections().map((item) => {\n      return item.remoteAddr.toString();\n    });\n    console.log(\"Update Connections List\", connections);\n  }\n\n  node.addEventListener(\"connection:open\", (event) => {\n    console.log(\"connected\", event.detail.remoteAddr.toString());\n    updateConnectionsList();\n  });\n\n  node.addEventListener(\"connection:close\", (event) => {\n    console.log(\"disconected\", event.detail.remoteAddr.toString());\n    updateConnectionsList();\n    setTimeout(() => {\n      if (\n        connection &&\n        event.detail.remoteAddr.toString() === connection.remoteAddr.toString()\n      ) {\n        console.log(\"reconnect\");\n        reconnect(connection.remoteAddr.toString());\n      }\n    }, 10000);\n  });\n\n  return node;\n}\n\nexport async function reconnect(addr) {\n  try {\n    await connect(addr);\n  } catch (error) {\n    console.log(error);\n    // setTimeout(async () => {\n    //   if (addr && !connections.includes(addr)) {\n    //     await reconnect(addr);\n    //   }\n    // }, 3000);\n  }\n}\nexport async function connect(addr) {\n  console.log(\"connect to\", addr.toString());\n  if (!connections.includes(addr)) {\n    const listenerMultiaddr = multiaddr(addr);\n    connection = await node.dial(listenerMultiaddr);\n  }\n  return addr;\n}\n\nexport async function disconnect() {\n  if (connection) {\n    await connection.close();\n  }\n  connection = null;\n}\n\nexport function request(data, protocol = \"/call\") {\n  if (node && connection) {\n    return node.services.ha.request(connection, protocol, data);\n  }\n  throw new Error(\"error\");\n}\n","import { useDevices } from \"@/hooks/useDevices\";\nimport { useRobonomics } from \"@/hooks/useRobonomics\";\nimport {\n  connectMultiaddress,\n  disconnect,\n  request,\n  start\n} from \"@/utils/libp2p/libp2p\";\nimport { u8aToHex } from \"@polkadot/util\";\nimport { decodeAddress } from \"@polkadot/util-crypto\";\nimport { onUnmounted, ref, watch } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { decryptData, notify, setStatusLaunch, useSetup } from \"./common\";\n\nexport const useData = () => {\n  const data = ref(null);\n  const updateTime = ref(null);\n\n  const store = useStore();\n  const { accountManager } = useRobonomics();\n  const devices = useDevices();\n  const { controller } = useSetup();\n\n  watch(\n    () => store.state.robonomicsUIvue.rws.active,\n    () => {\n      devices.owner.value = store.state.robonomicsUIvue.rws.active;\n    },\n    { immediate: true }\n  );\n\n  onUnmounted(() => {\n    disconnect();\n  });\n\n  const run = async (peer_id, peer_multiaddress) => {\n    const node = await start();\n    try {\n      notify(store, `Connect to peer id ${peer_id}`);\n      const connected = await connectMultiaddress(peer_id, peer_multiaddress);\n      if (connected) {\n        notify(store, `Connected`);\n        const protocols = node.getProtocols();\n        if (protocols.includes(\"/update\")) {\n          await node.unhandle(\"/update\");\n        }\n        node.services.ha.handle(\"/update\", async (dataRaw, stream) => {\n          const result = await decryptData(\n            dataRaw.data,\n            controller.value,\n            accountManager.encryptor()\n          );\n          if (result) {\n            data.value = result;\n            updateTime.value = Date.now();\n            await node.services.ha.utils.sendResponse(stream, {\n              result: true\n            });\n          } else {\n            notify(store, `Error: decryptMsg`);\n          }\n        });\n        return connected;\n      }\n    } catch (error) {\n      notify(store, `Error: ${error.message}`);\n      console.log(error);\n    }\n    return false;\n  };\n\n  const launch = async (command) => {\n    console.log(command.launch.params.entity_id, command.tx.tx_status);\n    if (command.tx.tx_status !== \"pending\") {\n      return;\n    }\n\n    notify(store, `Launch command`);\n\n    if (!devices.devices.value.includes(accountManager.account.address)) {\n      notify(store, `Error: You do not have access to device management.`);\n      setStatusLaunch(store, command, \"error\");\n      return;\n    }\n\n    try {\n      const encryptor = accountManager.encryptor();\n      const controllerPublicKey = decodeAddress(controller.value);\n      const cmdString = JSON.stringify(command.launch);\n      const cmdCrypto = encryptor.encryptMessage(\n        cmdString,\n        controllerPublicKey\n      );\n      const response = await request({\n        data: {\n          sender: accountManager.account.address,\n          data: u8aToHex(cmdCrypto)\n        }\n      });\n      console.log(`response:`, response);\n\n      setStatusLaunch(store, command, \"success\");\n    } catch (error) {\n      console.log(error);\n      notify(store, `Error: Check status of the HomeAssistant.`);\n      setStatusLaunch(store, command, \"error\");\n    }\n  };\n\n  return { data, updateTime, run, launch };\n};\n","import { render } from \"./Libp2p.vue?vue&type=template&id=7c97fef3\"\nimport script from \"./Libp2p.vue?vue&type=script&lang=js\"\nexport * from \"./Libp2p.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./Telemetry.vue?vue&type=template&id=a5d8ec2e\"\nimport script from \"./Telemetry.vue?vue&type=script&lang=js\"\nexport * from \"./Telemetry.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createRouter, createWebHashHistory } from \"vue-router\";\nimport Altruist from \"./views/hardware/Altruist.vue\";\nimport Hikikomori from \"./views/hardware/Hikikomori.vue\";\nimport Riscv from \"./views/hardware/Riscv.vue\";\nimport SeasonPass2 from \"./views/hardware/Season-pass-2.vue\";\nimport SeasonPass from \"./views/hardware/Season-pass.vue\";\nimport Home from \"./views/Home.vue\";\nimport Humanoid from \"./views/humanoid/RobonomicsApp.vue\";\nimport PathNotFound from \"./views/PathNotFound.vue\";\nimport RwsActivate from \"./views/RwsActivate.vue\";\nimport RwsSetup from \"./views/RwsSetup.vue\";\nimport RwsSetupNew from \"./views/RwsSetupNew.vue\";\n// import Services from \"./views/Services.vue\";\nimport EnergyMonitor from \"./views/hardware/Energy-monitor.vue\";\nimport Telemetry from \"./views/telemetry/Telemetry.vue\";\n\nconst routes = [\n  {\n    path: \"/\",\n    name: \"Home\",\n    component: Home,\n    meta: {\n      title: \"Dashboard\"\n    }\n  },\n  {\n    path: \"/rws-buy\",\n    name: \"rwsActivate\",\n    component: RwsActivate,\n    meta: {\n      title: \"Buy a Subscription\"\n    }\n  },\n  {\n    path: \"/rws-setup\",\n    name: \"rwsSetup\",\n    component: RwsSetup,\n    meta: {\n      title: \"Setup a Subscription\"\n    }\n  },\n  {\n    path: \"/rws-setup-new\",\n    name: \"rwsSetupNew\",\n    component: RwsSetupNew,\n    meta: {\n      title: \"New Subscription setup\"\n    }\n  },\n  {\n    path: \"/telemetry\",\n    name: \"telemetry\",\n    component: Telemetry,\n    meta: {\n      title: \"Devices control panel\"\n    }\n  },\n  // {\n  //   path: \"/services\",\n  //   name: \"services\",\n  //   component: Services,\n  //   meta: {\n  //     title: \"Services\"\n  //   }\n  // },\n  {\n    path: \"/hardware/altruist\",\n    name: \"Altruist\",\n    component: Altruist,\n    meta: {\n      title: \"Altruist\"\n    }\n  },\n  {\n    path: \"/hardware/riscv\",\n    name: \"Riscv\",\n    component: Riscv,\n    meta: {\n      title: \"Riscv\"\n    }\n  },\n  {\n    path: \"/hardware/hikikomori\",\n    name: \"Hikikomori\",\n    component: Hikikomori,\n    meta: {\n      title: \"Hikikomori\"\n    }\n  },\n  {\n    path: \"/hardware/season-pass\",\n    name: \"SeasonPass\",\n    component: SeasonPass,\n    meta: {\n      title: \"Season Pass\"\n    }\n  },\n  {\n    path: \"/hardware/season-pass-2\",\n    name: \"SeasonPass2\",\n    component: SeasonPass2,\n    meta: {\n      title: \"Season Pass 2\"\n    }\n  },\n  {\n    path: \"/hardware/energy-monitor\",\n    name: \"EnergyMonitor\",\n    component: EnergyMonitor,\n    meta: {\n      title: \"Energy Monitor\"\n    }\n  },\n  {\n    path: \"/humanoid\",\n    name: \"Humanoid\",\n    component: Humanoid,\n    meta: {\n      title: \"Pay the robot with cryptocurrency\"\n    }\n  },\n  {\n    path: \"/altruist/:address?\",\n    props: true,\n    name: \"AltruistPage\",\n    component: () => import(\"./views/altruist/Page.vue\"),\n    meta: {\n      title: \"Altruist\"\n    }\n  },\n  {\n    path: \"/energy-monitor/:address?\",\n    props: true,\n    name: \"EnergytMonitorPage\",\n    component: () => import(\"./views/energyMonitor/Page.vue\"),\n    meta: {\n      title: \"Energy\"\n    }\n  },\n  {\n    path: \"/dtwin\",\n    name: \"DTwinPage\",\n    component: () => import(\"./views/dtwin/Page.vue\"),\n    meta: {\n      title: \"Digital Twin\"\n    }\n  },\n  { path: \"/:pathMatch(.*)*\", component: PathNotFound }\n];\n\nconst router = createRouter({\n  history: createWebHashHistory(),\n  routes\n});\n\nexport default router;\n","import { createStore } from \"vuex\";\n\nconst store = createStore({\n  state: {\n    name: \"Vue\"\n  }\n});\n\nexport default store;\n","import { fromUnit } from \"./tools\";\nexport default {\n  install: (app) => {\n    app.config.globalProperties.$filters = {\n      balance(value, decimals, symbol) {\n        if (\n          typeof value === \"string\" ||\n          typeof value === \"number\" ||\n          typeof value === \"bigint\"\n        ) {\n          return `${fromUnit(value, decimals, 4)} ${symbol}`;\n        }\n        return \"\";\n      }\n    };\n  }\n};\n","import { Buffer } from \"buffer\";\nimport { robonomicsUI } from \"robonomics-ui-vue\";\nimport { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport ipfs from \"./plugins/ipfs\";\nimport robonomics from \"./plugins/robonomics\";\nimport web3 from \"./plugins/web3\";\nimport router from \"./router\";\nimport store from \"./store\";\nimport filters from \"./utils/filters\";\nimport { showVersion } from \"./utils/tools\";\n\nimport \"robonomics-ui-vue/style.css\";\n\nwindow.Buffer = Buffer;\n\nshowVersion();\n\nconst app = createApp(App);\n\napp\n  .use(router)\n  .use(store)\n  .use(filters)\n  .use(robonomics)\n  .use(web3)\n  .use(ipfs, {\n    api: { gateway: \"https://ipfs.url.today\" },\n    gateways: [\n      \"https://ipfs.url.today/ipfs/\",\n      \"https://ipfs.io/ipfs/\",\n      \"https://gateway.pinata.cloud/ipfs/\",\n      \"https://aira.mypinata.cloud/ipfs/\"\n    ]\n  })\n  .use(robonomicsUI, { store })\n  .mount(\"#app\");\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"js/\" + chunkId + \".\" + {\"459\":\"d25ac427\",\"552\":\"4c89498a\",\"772\":\"6a05754e\",\"955\":\"f548aaf4\"}[chunkId] + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"css/\" + chunkId + \".\" + {\"552\":\"c892dec7\",\"772\":\"355dac2f\",\"955\":\"9d5660a1\"}[chunkId] + \".css\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var inProgress = {};\nvar dataWebpackPrefix = \"dapp-robonomics.network:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = function(url, done, key, chunkId) {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = function(prev, event) {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach(function(fn) { return fn(event); });\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"\";","if (typeof document === \"undefined\") return;\nvar createStylesheet = function(chunkId, fullhref, oldTag, resolve, reject) {\n\tvar linkTag = document.createElement(\"link\");\n\n\tlinkTag.rel = \"stylesheet\";\n\tlinkTag.type = \"text/css\";\n\tif (__webpack_require__.nc) {\n\t\tlinkTag.nonce = __webpack_require__.nc;\n\t}\n\tvar onLinkComplete = function(event) {\n\t\t// avoid mem leaks.\n\t\tlinkTag.onerror = linkTag.onload = null;\n\t\tif (event.type === 'load') {\n\t\t\tresolve();\n\t\t} else {\n\t\t\tvar errorType = event && event.type;\n\t\t\tvar realHref = event && event.target && event.target.href || fullhref;\n\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + errorType + \": \" + realHref + \")\");\n\t\t\terr.name = \"ChunkLoadError\";\n\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n\t\t\terr.type = errorType;\n\t\t\terr.request = realHref;\n\t\t\tif (linkTag.parentNode) linkTag.parentNode.removeChild(linkTag)\n\t\t\treject(err);\n\t\t}\n\t}\n\tlinkTag.onerror = linkTag.onload = onLinkComplete;\n\tlinkTag.href = fullhref;\n\n\n\tif (oldTag) {\n\t\toldTag.parentNode.insertBefore(linkTag, oldTag.nextSibling);\n\t} else {\n\t\tdocument.head.appendChild(linkTag);\n\t}\n\treturn linkTag;\n};\nvar findStylesheet = function(href, fullhref) {\n\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n\tfor(var i = 0; i < existingLinkTags.length; i++) {\n\t\tvar tag = existingLinkTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return tag;\n\t}\n\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n\tfor(var i = 0; i < existingStyleTags.length; i++) {\n\t\tvar tag = existingStyleTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\");\n\t\tif(dataHref === href || dataHref === fullhref) return tag;\n\t}\n};\nvar loadStylesheet = function(chunkId) {\n\treturn new Promise(function(resolve, reject) {\n\t\tvar href = __webpack_require__.miniCssF(chunkId);\n\t\tvar fullhref = __webpack_require__.p + href;\n\t\tif(findStylesheet(href, fullhref)) return resolve();\n\t\tcreateStylesheet(chunkId, fullhref, null, resolve, reject);\n\t});\n}\n// object to store loaded CSS chunks\nvar installedCssChunks = {\n\t524: 0\n};\n\n__webpack_require__.f.miniCss = function(chunkId, promises) {\n\tvar cssChunks = {\"552\":1,\"772\":1,\"955\":1};\n\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n\t\tpromises.push(installedCssChunks[chunkId] = loadStylesheet(chunkId).then(function() {\n\t\t\tinstalledCssChunks[chunkId] = 0;\n\t\t}, function(e) {\n\t\t\tdelete installedCssChunks[chunkId];\n\t\t\tthrow e;\n\t\t}));\n\t}\n};\n\n// no hmr\n\n// no prefetching\n\n// no preloaded","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n__webpack_require__.f.j = function(chunkId, promises) {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = function(event) {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkdapp_robonomics_network\"] = self[\"webpackChunkdapp_robonomics_network\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(59224); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["default_rpc_endpoint","nft_oracle_endpoint","address","xrt","tokenVesting","nft","useAccount","account","ref","accountManager","useRobonomics","value","unsubscribe","onChange","res","getDevices","async","robonomics","owner","result","rws","map","item","toHuman","error","console","log","useDevices","initialOwner","isReady","getInstance","devices","endpoint","localStorage","getItem","configApp","lsKey","list","setItem","JSON","stringify","time","Date","now","data","cache","parsedData","parse","loadDevices","validateAddress","stop","watch","immediate","events","on","section","method","event","onUnmounted","provider","inject","instance","useSend","getFreeWeightCalc","useSubscription","getCallWeight","tx","signer","Error","hasPaymentInfo","paymentInfo","weight","toNumber","checkWeight","freeWeightCalc","callWeight","createTx","process","send","call","subscription","nonce","api","rpc","system","accountNextIndex","signAndSend","block","e","message","getRegistry","registry","TypeRegistry","types","PalletRobonomicsRwsSubscription","_enum","Lifetime","tps","Daily","days","PalletRobonomicsRwsSubscriptionLedger","freeWeight","issueTime","lastUpdate","kind","register","DAYS_TO_MS","getLedger","isEmpty","getValidUntil","ledger","isLifetime","issue_time","isDaily","dataRaw","shallowRef","getReferenceCallWeight","consts","referenceCallWeight","toJSON","undefined","createType","utps","duration_ms","delta","Math","floor","validUntil","computed","countMonth","isActive","hasSubscription","loadLedger","_createBlock","_component_main_layout","pagetitle","$setup","title","default","_withCtx","_createVNode","_component_router_view","_","class","$data","renderComponent","_component_robo_layout_header","key","logoIcon","$props","nav","_component_robo_section","_createElementVNode","_hoisted_1","_component_router_link","to","_ctx","$store","state","robonomicsUIvue","links","activate","exact","_cache","_createTextVNode","setupnew","setup","length","_createElementBlock","_Fragment","_createCommentVNode","_hoisted_2","src","toDecimal","v","Decimal","toString","round","place","todp","fromUnit","decimals","dp","div","pow","showVersion","toExpNeg","toExpPos","props","type","String","toRaw","this","RobonomicsProvider","signRaw","polkadot","handlerAccount","handler","extensionObj","newValue","oldValue","$route","$nextTick","methods","unsubscribeBalance","accounts","find","name","setSender","extension","getBalance","r","transferable","free","sub","frozen","commit","chainDecimals","__exports__","navigation","link","repoversion","onMounted","response","fetch","json","__props","store","useStore","active","components","MainLayout","IpfsProvider","router","useRouter","route","useRoute","resolve","path","gateways","meta","resulttitle","document","querySelector","setAttribute","render","IpfsApiClient","constructor","authHeader","_create","client","create","_options","url","headers","authorization","isAuth","auth","signature","authHeaderRaw","Buffer","from","authClear","ls","cid","files","file","push","cat","decoder","TextDecoder","content","chunk","decode","stream","add","catViaGateway","gateway","attempts","index","axios","get","catViaGatewaysRotation","catViaGateways","controller","AbortController","readFile","signal","abort","requests","Promise","any","p","i","then","install","app","params","provide","naclOpen","sealed","senderBoxPublic","receiverBoxSecret","nacl","open","naclSeal","senderBoxSecret","receiverBoxPublic","randomAsU8a","convertSecretKeyToCurve25519","secretKey","ed2curve","convertPublicKeyToCurve25519","publicKey","decryptMessage","encryptedMessageWithNonce","senderPublicKey","messageU8a","u8aToU8a","slice","encryptMessage","recipientPublicKey","nonceIn","u8aConcat","createPair","mnemonic","seed","mnemonicToMiniSecret","pair","ed25519PairFromSeed","encryptor","encodeAddress","ss58Format","AccountManagerDapp","AccountManager","keyring","config","super","loadAll","setReady","beforeSetSender","getPair","loadInjected","afterSetSender","isInjected","setSigner","signMsg","u8aToHex","u8aWrapBytes","addUri","suri","addFromUri","addUriPassword","password","addJsonPassword","createFromJson","addPair","pairKey","addFromPair","toJson","decoded","decodePair","base64Decode","encoded","encoding","urlParams","URLSearchParams","window","location","search","Robonomics","createInstance","setAccountManager","CodeError","PROVIDER","NETWORK","ACCOUNT","Web3Error","code","Connector","getProvider","getAccount","getNetworkId","Extension","update","networkId","emit","handleChainChanged","Number","handleAccountsChanged","request","Provider","networks","connector","reactive","setConnector","ethers","getSigner","includes","setProvider","warn","getBlock","blockNumber","$web3","web3","_toDisplayString","balance","_renderList","tokens","token","_component_nft_token","tokenId","onActivate","loadTokens","image","style","activated","_component_btn_send","onClick","wait","_component_free_minimum","args","disabled","status","STATUS","PRE_PROCESS","WAIT_TX","_renderSlot","$slots","ERROR","READY","_hoisted_3","NEW","emits","last","receipt","hash","errorCatch","received","requestFreeMinimum","avaible","_hoisted_4","_hoisted_5","_hoisted_6","baseURL","checkAvailible","accountEthereum","post","getFreeMinimum","accauntParachain","msg","for","signMessage","check","timerId","setInterval","clearInterval","BtnSend","FreeMinimum","nftContract","nft_abi","connect","interface","parseError","NftToken","balanceOf","ids","tokenOfOwnerByIndex","uri","tokenURI","ipfsHash","split","pop","activatedOf","providers","detail","ethereum","activeProviderRdns","findIndex","info","rdns","activeAccount","addEventListener","dispatchEvent","CustomEvent","chains","workingchain","mipdstore","createStore","getProviders","subscribe","isConnected","_state","contract","providerethers","curentslide","setslide","s","getEthersProviderObj","getNFT","blockupdate","perms","eth_accounts","some","parentCapability","chain","parseInt","parseFloat","catch","activateToken","current","_component_robo_layout_section","width","_component_robo_grid","minColumnWidth","gap","card","rwsactive","_component_robo_rws_setup_active","show","_component_robo_text","align","offset","size","columns","_component_robo_grid_item","borderbottom","price","_component_robo_details","summary","_component_robo_icon","icon","_component_robo_link","href","freeAuctions","_component_robo_button","linkActivate","unsubscribeBlock","getAuctionQueue","onBlock","minimalBid","getMinimalBid","bnToBn","priceFormat","_component_robo_select","values","commands","options","modelValue","parameter","$event","loading","proccess","highlight","robot","listOfCommands","txs","balances","transfer","launch","utility","batch","resultTx","txIndex","created","_component_robo_template_rws_buy","activationtime","available","chainInfoUploaded","chainInfoStatus","rwsExpiration","expiredate","onOnActivate","useBalance","unsubscribeAccount","transaction","setStatus","lt","bid","getFirtsFreeAuction","setDevices","stopWatchEffect","watchEffect","_component_robo_rws_setup","onUserDelete","removeUser","onUserAdd","addUser","onSaveHapass","saveHapass","onControllerEdit","setupOwner","user","filter","passToSave","userAddress","userType","acctype","encodedDevices","passwordForAdmin","decodeAddress","passwordForRecovery","datalog","write","ha","admin","accountOld","onRequestSubscription","onSetupGenerate","nextTick","script","_component_Libp2p","isKey","onConnected","handlerConnected","onError","handlerError","_component_Launch","_component_robo_smarthome_dashboard","updateTime","useIpfs","clearJson","string","replaceAll","parseJson","getLastIndex","id","getLastId","getLastDatalog","lastIndex","readByIndex","timestamp","u8aToString","getConfigCid","twin_id","twin","getTwin","configHex","Object","keys","utils","catFile","ipfs","decryptData","encryptedMsg","controllerPublicKey","hexToU8a","readFileDecrypt","loadSetup","setupRaw","useSetup","notify","text","timeout","dispatch","setStatusLaunch","command","tx_status","useConfig","getConfig","load","useData","unsubscribeDatalog","watchDatalog","results","success","run","entity_id","stringToU8a","commandCid","cmdString","cmdCrypto","Boolean","createHa","getRequest","pipe","source","uint8ArrayToString","subarray","sendResponse","uint8ArrayFromString","sink","finally","close","handle","protocol","runOnTransientConnection","registrar","connection","newStream","createNode","node","createLibp2p","transports","webSockets","filters","circuitRelayTransport","streamMuxers","mplex","connectionEncryption","noise","services","identify","connectionGater","denyDialMultiaddr","connectionManager","minConnections","defaultRelay","peer_id","multiaddr","connectMultiaddress","peer_multiaddress","localMultiaddrs","circuit","peer_multiaddr","localMultiaddr","protos","protoNames","addr","connections","start","updateConnectionsList","getConnections","remoteAddr","peerId","setTimeout","reconnect","listenerMultiaddr","dial","disconnect","connected","protocols","getProtocols","unhandle","sender","isOnce","libp2p_multiaddress","nodeAddress","activegateway","once","Libp2p","Launch","routes","component","Home","RwsActivate","RwsSetup","RwsSetupNew","Telemetry","Altruist","Riscv","Hikikomori","SeasonPass","SeasonPass2","EnergyMonitor","Humanoid","PathNotFound","createRouter","history","createWebHashHistory","globalProperties","$filters","symbol","createApp","App","use","robonomicsUI","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","m","amdO","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","n","getter","__esModule","d","a","leafPrototypes","getProto","getPrototypeOf","obj","__proto__","t","mode","ns","def","indexOf","getOwnPropertyNames","forEach","definition","o","defineProperty","enumerable","f","chunkId","all","reduce","promises","u","miniCssF","g","globalThis","Function","prop","prototype","hasOwnProperty","inProgress","dataWebpackPrefix","l","done","needAttach","scripts","getElementsByTagName","getAttribute","createElement","charset","nc","onScriptComplete","prev","onerror","onload","clearTimeout","doneFns","parentNode","removeChild","bind","target","head","appendChild","Symbol","toStringTag","nmd","paths","children","createStylesheet","fullhref","oldTag","reject","linkTag","rel","onLinkComplete","errorType","realHref","err","insertBefore","nextSibling","findStylesheet","existingLinkTags","tag","dataHref","existingStyleTags","loadStylesheet","installedCssChunks","miniCss","cssChunks","installedChunks","installedChunkData","promise","loadingEnded","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}