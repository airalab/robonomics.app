{"version":3,"file":"js/955.f548aaf4.js","mappings":"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","sources":["webpack://dapp-robonomics.network/./src/views/altruist/Page.vue","webpack://dapp-robonomics.network/./src/views/altruist/AltruistChart.vue","webpack://dapp-robonomics.network/./src/views/altruist/DatalogChart.vue","webpack://dapp-robonomics.network/./src/views/altruist/measurements/airtemp.js","webpack://dapp-robonomics.network/./src/views/altruist/measurements/airtempavg.js","webpack://dapp-robonomics.network/./src/views/altruist/measurements/airtempmax.js","webpack://dapp-robonomics.network/./src/views/altruist/measurements/airtempmin.js","webpack://dapp-robonomics.network/./src/views/altruist/measurements/tools.js","webpack://dapp-robonomics.network/./src/views/altruist/measurements/co.js","webpack://dapp-robonomics.network/./src/views/altruist/measurements/gc.js","webpack://dapp-robonomics.network/./src/views/altruist/measurements/humidity.js","webpack://dapp-robonomics.network/./src/views/altruist/measurements/nh3.js","webpack://dapp-robonomics.network/./src/views/altruist/measurements/no2.js","webpack://dapp-robonomics.network/./src/views/altruist/measurements/noise.js","webpack://dapp-robonomics.network/./src/views/altruist/measurements/noiseavg.js","webpack://dapp-robonomics.network/./src/views/altruist/measurements/noisemax.js","webpack://dapp-robonomics.network/./src/views/altruist/measurements/pm1.js","webpack://dapp-robonomics.network/./src/views/altruist/measurements/pm10.js","webpack://dapp-robonomics.network/./src/views/altruist/measurements/pm25.js","webpack://dapp-robonomics.network/./src/views/altruist/measurements/pressure.js","webpack://dapp-robonomics.network/./src/views/altruist/measurements/rainfall.js","webpack://dapp-robonomics.network/./src/views/altruist/measurements/sat10.js","webpack://dapp-robonomics.network/./src/views/altruist/measurements/sat5.js","webpack://dapp-robonomics.network/./src/views/altruist/measurements/soiltemp.js","webpack://dapp-robonomics.network/./src/views/altruist/measurements/temperature.js","webpack://dapp-robonomics.network/./src/views/altruist/measurements/windang.js","webpack://dapp-robonomics.network/./src/views/altruist/measurements/windspeed.js","webpack://dapp-robonomics.network/./src/views/altruist/measurements/windspeedmax.js","webpack://dapp-robonomics.network/./src/views/altruist/measurements/index.js","webpack://dapp-robonomics.network/./src/views/altruist/DatalogChart.vue?b13c","webpack://dapp-robonomics.network/./src/views/altruist/MeasurementsScalegrid.vue","webpack://dapp-robonomics.network/./src/views/altruist/MeasurementsScalegrid.vue?f5ef","webpack://dapp-robonomics.network/./src/views/altruist/parser.js","webpack://dapp-robonomics.network/./src/views/altruist/AltruistChart.vue?e860","webpack://dapp-robonomics.network/./src/views/altruist/Page.vue?8baf"],"sourcesContent":["<template>\n  <robo-layout-section>\n    <robo-section offset=\"x2\" width=\"middle\" style=\"text-align: center\">\n      <h2>Altruist</h2>\n    </robo-section>\n\n    <robo-section offset=\"x2\" width=\"middle\">\n      <datalog-loader v-if=\"isFind\" />\n      <robo-status v-else-if=\"altruistAddress === null\" type=\"warning\">\n        Not found\n      </robo-status>\n      <altruist-chart\n        v-else-if=\"altruistAddress !== undefined\"\n        :address=\"altruistAddress\"\n      />\n    </robo-section>\n\n    <robo-section offset=\"x2\" width=\"middle\">\n      <notice-text />\n    </robo-section>\n  </robo-layout-section>\n</template>\n\n<script>\nimport { watch } from \"vue\";\nimport DatalogLoader from \"../../components/hardware/DatalogLoader.vue\";\nimport NoticeText from \"../../components/hardware/NoticeText.vue\";\nimport { useFind } from \"../../components/hardware/hooks/dtwin.js\";\nimport AltruistChart from \"./AltruistChart.vue\";\n\nexport default {\n  props: [\"address\"],\n  components: { AltruistChart, DatalogLoader, NoticeText },\n  setup(props) {\n    const {\n      address: altruistAddress,\n      isFind,\n      runFind\n    } = useFind(\n      \"0x000000000000000000000000000000000000000000000000616c747275697374\"\n    );\n\n    watch(\n      () => props.address,\n      (address) => {\n        if (address) {\n          altruistAddress.value = address;\n        } else {\n          runFind();\n        }\n      },\n      { immediate: true }\n    );\n\n    return {\n      altruistAddress,\n      isFind\n    };\n  }\n};\n</script>\n","<template>\n  <div v-if=\"isLaoded\">\n    <datalog-chart :log=\"log\" />\n    <sensor-info :sensor_id=\"address\" class=\"block\" />\n    <measurements-scalegrid :log=\"log\" class=\"block\" />\n  </div>\n  <datalog-loader v-else />\n</template>\n\n<script>\nimport { ref, toRefs } from \"vue\";\nimport DatalogLoader from \"../../components/hardware/DatalogLoader.vue\";\nimport { useDatalog } from \"../../components/hardware/hooks/datalog\";\nimport SensorInfo from \"../../components/hardware/SensorInfo.vue\";\nimport DatalogChart from \"./DatalogChart.vue\";\nimport MeasurementsScalegrid from \"./MeasurementsScalegrid.vue\";\nimport { parser } from \"./parser\";\n\nexport default {\n  props: [\"address\"],\n  components: {\n    DatalogLoader,\n    DatalogChart,\n    SensorInfo,\n    MeasurementsScalegrid\n  },\n  setup(props) {\n    const datalog = useDatalog(toRefs(props).address, parser);\n\n    const isShowRaw = ref(false);\n    const showRaw = () => {\n      isShowRaw.value = !isShowRaw.value;\n    };\n\n    return {\n      log: datalog.log,\n      isLaoded: datalog.isLaoded,\n      isShowRaw,\n      showRaw\n    };\n  }\n};\n</script>\n\n<style scoped>\n.block {\n  margin: 15px 0;\n}\n</style>\n","<template>\n  <chart :options=\"chartOptions\" ref=\"chart\" />\n</template>\n\n<script>\nimport { Chart } from \"highcharts-vue\";\nimport { getCurrentInstance, onMounted, watch } from \"vue\";\nimport measurements from \"./measurements\";\n\nexport default {\n  components: { Chart },\n  props: [\"log\"],\n  setup(props) {\n    const getSeries = (data) => {\n      const seriesRaw = {};\n      for (const row of data) {\n        for (const item of row.data) {\n          if (seriesRaw[item.fullKey]) {\n            seriesRaw[item.fullKey].data.push([\n              row.moment,\n              parseFloat(item.value)\n            ]);\n          } else {\n            let name = item.fullKey;\n            if (\n              measurements[item.fullKey] &&\n              measurements[item.fullKey].label\n            ) {\n              name = measurements[item.fullKey].label;\n            }\n            seriesRaw[item.fullKey] = {\n              name: name,\n              data: [[row.moment, parseFloat(item.value)]],\n              tooltip: {\n                valueSuffix: ` ${measurements[item.fullKey].unit ?? \"\"}`\n              }\n            };\n          }\n        }\n      }\n      return Object.values(seriesRaw);\n    };\n    const series = getSeries(props.log);\n\n    let chart;\n    onMounted(() => {\n      chart = getCurrentInstance().refs.chart.chart;\n    });\n\n    watch(props.log, (value) => {\n      if (!chart) {\n        return;\n      }\n      const series = getSeries(value);\n      if (series.length > 0) {\n        series.forEach((newdata) => {\n          const id = chart.series.findIndex((m) => m.name === newdata.name);\n          if (id >= 0) {\n            chart.series[id].setData(newdata.data, false);\n          } else {\n            chart.addSeries(newdata);\n          }\n        });\n        chart.redraw();\n      }\n    });\n\n    return {\n      chartOptions: {\n        lang: {\n          locale: \"en\"\n        },\n        chart: {\n          spacing: [50, 20, 20, 20]\n        },\n        title: {\n          text: \"\"\n        },\n        time: {\n          timezone: Intl.DateTimeFormat().resolvedOptions().timeZone\n        },\n        xAxis: {\n          title: false,\n          type: \"datetime\",\n          labels: {\n            overflow: \"justify\",\n            format: \"{value: %H:%M }\"\n          }\n        },\n        yAxis: {\n          title: false\n        },\n        tooltip: {\n          valueDecimals: 2\n        },\n        series: series\n      }\n    };\n  }\n};\n</script>\n","export default {\n  label: \"Airtemp\",\n  unit: \"℃\",\n};\n","export default {\n  label: \"AvgAirtemp\",\n  unit: \"℃\",\n};\n","export default {\n  label: \"MaxAirtemp\",\n  unit: \"℃\",\n};\n","export default {\n  label: \"MinAirtemp\",\n  unit: \"℃\",\n};\n","import measurements from \"./index\";\n\nexport function toFixed(num, dec = 4) {\n  return +(+num || 0).toFixed(dec);\n}\nexport function converterPpmToMgm3(v, molecularWeight) {\n  return toFixed((v * molecularWeight) / 24.05526);\n}\nexport const states = [\"good\", \"attention\", \"danger\", \"neutral\"];\nexport function getMeasurementByName(name) {\n  return measurements[name] || { label: name };\n}\n","import { converterPpmToMgm3 } from \"./tools\";\n\nexport default {\n  label: \"CO\",\n  name: {\n    en: \"Carbon monoxide\",\n    ru: \"Угарный газ\"\n  },\n  unit: \"mg/m3\",\n  chartColor: \"#c1c1c1\",\n  colors: [\"#60bc2a\", \"#ff9d00\", \"#fc0202\"],\n  range: [0, 2, 4, 14],\n  zones: [\n    {\n      value: 0,\n      color: \"#60bc2a\",\n      label: {\n        en: \"Good\",\n        ru: \"Хорошо\"\n      }\n    },\n    {\n      value: 2,\n      color: \"#12bfcc\",\n      label: {\n        en: \"Satisfyingly\",\n        ru: \"Удовлетворительно\"\n      }\n    },\n    {\n      value: 4,\n      color: \"#ff9d00\",\n      label: {\n        en: \"Poor\",\n        ru: \"Плохо\"\n      }\n    },\n    {\n      color: \"#7a00da\",\n      label: {\n        en: \"Very poor\",\n        ru: \"Очень плохо\"\n      }\n    },\n  ],\n  calculate: function (v) {\n    return converterPpmToMgm3(v, 28.01);\n  },\n  info: \"Сarbon monoxide. It is formed during the incomplete decomposition of organic compounds and during the combustion of biomass during forest fires.\",\n};\n","export default {\n  label: \"GC\",\n  name: {\n    en: \"Background radiation\",\n    ru: \"Радиационный фон\"\n  },\n  nameshort: {\n    en: \"Radiation\",\n    ru: \"Радиация\"\n  },\n  unit: \"μR/h\",\n  chartColor: \"#e99152\",\n  range: [2, 10, 100, 1000],\n  zones: [\n    {\n      value: 2,\n      color: \"#60bc2a\",\n      label: {\n        en: \"Background\",\n        ru: \"Фоновая\"\n      }\n    },\n    {\n      value: 10,\n      color: \"#03a5ed\",\n      label: {\n        en: \"Moderate\",\n        ru: \"Невысокая\"\n      }\n    },\n    {\n      value: 100,\n      color: \"#ff9d00\",\n      label: {\n        en: \"Elevated\",\n        ru: \"Повышенная\"\n      }\n    },\n    {\n      color: \"#ff4d00\",\n      label: {\n        en: \"High\",\n        ru: \"Высокая\"\n      }\n    },\n  ],\n};\n","export default {\n  label: \"Hm\",\n  name: {\n    en: \"Humidity\",\n    ru: \"Влажность\"\n  },\n  nameshort: {\n    en: \"Humidity\",\n    ru: \"Влажность\"\n  },\n  unit: \"%\",\n  chartColor: \"#6fd3ff\",\n  range: [30, 40, 60, 70],\n  zones: [\n    {\n      value: 30,\n      color: \"#ff4d00\",\n      label: {\n        en: \"Very dry\",\n        ru: \"Очень сухо\"\n      }\n    },\n    {\n      value: 40,\n      color: \"#ff9d00\",\n      label: {\n        en: \"Dry\",\n        ru: \"Сухо\"\n      }\n    },\n    {\n      value: 60,\n      color: \"#03a5ed\",\n      label: {\n        en: \"Comfortable\",\n        ru: \"Комфортно\"\n      }\n    },\n    {\n      value: 70,\n      color: \"#2a5cbc\",\n      label: {\n        en: \"Humid\",\n        ru: \"Влажно\"\n      }\n    },\n    {\n      color: \"#7a00da\",\n      label: {\n        en: \"Very humid\",\n        ru: \"Очень влажно\"\n      }\n    },\n  ],\n};\n","import { converterPpmToMgm3 } from \"./tools\";\n\nexport default {\n  label: \"NH3\",\n  name: {\n    en: \"Ammonia\",\n    ru: \"Аммиак\"\n  },\n  nameshort: {\n    en: \"Ammonia\",\n    ru: \"Аммиак\"\n  },\n  unit: \"mg/m3\",\n  icon: \"vial-virus\",\n  chartColor: \"#a1e37a\",\n  colors: [\"#60bc2a\", \"#ff9d00\", \"#fc0202\"],\n  range: [0, 15, 40],\n  zones: [\n    {\n      value: 15,\n      color: \"#60bc2a\",\n      label: {\n        en: \"Good\",\n        ru: \"Хорошо\"\n      }\n    },\n    {\n      value: 40,\n      color: \"#ff9d00\",\n      label: {\n        en: \"Satisfyingly\",\n        ru: \"Удовлетворительно\"\n      }\n    },\n    {\n      color: \"#fc0202\",\n      label: {\n        en: \"Poor\",\n        ru: \"Плохо\"\n      }\n    },\n  ],\n  calculate: function (v) {\n    return converterPpmToMgm3(v, 17.03);\n  },\n};\n","import { converterPpmToMgm3 } from \"./tools\";\n\nexport default {\n  label: \"NO2\",\n  name: {\n    en: \"Nitrogen Dioxide\",\n    ru: \"Диоксид азота\"\n  },\n  unit: \"mg/m3\",\n  chartColor: \"#d4dd53\",\n  colors: [\"#60bc2a\", \"#ff9d00\", \"#fc0202\"],\n  range: [0, 1, 5],\n  zones: [\n    {\n      value: 1,\n      color: \"#60bc2a\",\n      label: {\n        en: \"Good\",\n        ru: \"Хорошо\"\n      }\n    },\n    {\n      value: 5,\n      color: \"#ff9d00\",\n      label: {\n        en: \"Satisfyingly\",\n        ru: \"Удовлетворительно\"\n      }\n    },\n    {\n      color: \"#fc0202\",\n      label: {\n        en: \"Poor\",\n        ru: \"Плохо\"\n      }\n    },\n  ],\n  calculate: function (v) {\n    return converterPpmToMgm3(v, 46.01);\n  },\n};\n","import { toFixed } from \"./tools\";\n\nexport default {\n  label: \"Noise\",\n  name: {\n    en: \"Noise\",\n    ru: \"Шум\"\n  },\n  nameshort: {\n    en: \"Noise\",\n    ru: \"Шум\"\n  },\n  unit: \"dB\",\n  range: [0, 40, 70, 80, 100],\n  zones: [\n    {\n      value: 40,\n      color: \"#60bc2a\",\n      label: {\n        en: \"Faint\",\n        ru: \"Тихо\"\n      }\n    },\n    {\n      value: 70,\n      color: \"#12bfcc\",\n      label: {\n        en: \"Moderate\",\n        ru: \"Удовлетворительно\"\n      }\n    },\n    {\n      value: 80,\n      color: \"#ff9d00\",\n      label: {\n        en: \"Loud\",\n        ru: \"Шумно\"\n      }\n    },\n    {\n      value: 100,\n      color: \"#ff4d00\",\n      label: {\n        en: \"Very loud\",\n        ru: \"Очень шумно\"\n      }\n    },\n    {\n      color: \"#7a00da\",\n      label: {\n        en: \"Extremely loud\",\n        ru: \"Экстремально шумно\"\n      }\n    },\n  ],\n  calculate: function (v) {\n    return toFixed(v);\n  },\n  info: \"Noise is what your ears or noise sensor can sense. Measured in Decibel (dB).\",\n};\n","import { toFixed } from \"./tools\";\n\nexport default {\n  label: \"Noise Avg.\",\n  name: {\n    en: \"Noise Avg.\",\n    ru: \"Шум Средн.\"\n  },\n  nameshort: {\n    en: \"Noise Avg.\",\n    ru: \"Шум Средн.\"\n  },\n  unit: \"dB\",\n  range: [0, 40, 70, 80, 100],\n  zones: [\n    {\n      value: 40,\n      color: \"#60bc2a\",\n      label: {\n        en: \"Faint\",\n        ru: \"Тихо\"\n      }\n    },\n    {\n      value: 70,\n      color: \"#12bfcc\",\n      label: {\n        en: \"Moderate\",\n        ru: \"Удовлетворительно\"\n      }\n    },\n    {\n      value: 80,\n      color: \"#ff9d00\",\n      label: {\n        en: \"Loud\",\n        ru: \"Шумно\"\n      }\n    },\n    {\n      value: 100,\n      color: \"#ff4d00\",\n      label: {\n        en: \"Very loud\",\n        ru: \"Очень шумно\"\n      }\n    },\n    {\n      color: \"#7a00da\",\n      label: {\n        en: \"Extremely loud\",\n        ru: \"Экстремально шумно\"\n      }\n    },\n  ],\n  calculate: function (v) {\n    return toFixed(v);\n  },\n  info: \"Noise is what your ears or noise sensor can sense. Measured in Decibel (dB).\",\n};\n","import { toFixed } from \"./tools\";\n\nexport default {\n  label: \"Noise Max.\",\n  name: {\n    en: \"Noise Max.\",\n    ru: \"Шум Макс.\"\n  },\n  nameshort: {\n    en: \"Noise Max.\",\n    ru: \"Шум Макс.\"\n  },\n  unit: \"dB\",\n  range: [0, 40, 70, 80, 100],\n  zones: [\n    {\n      value: 40,\n      color: \"#60bc2a\",\n      label: {\n        en: \"Faint\",\n        ru: \"Тихо\"\n      }\n    },\n    {\n      value: 70,\n      color: \"#12bfcc\",\n      label: {\n        en: \"Moderate\",\n        ru: \"Удовлетворительно\"\n      }\n    },\n    {\n      value: 80,\n      color: \"#ff9d00\",\n      label: {\n        en: \"Loud\",\n        ru: \"Шумно\"\n      }\n    },\n    {\n      value: 100,\n      color: \"#ff4d00\",\n      label: {\n        en: \"Very loud\",\n        ru: \"Очень шумно\"\n      }\n    },\n    {\n      color: \"#7a00da\",\n      label: {\n        en: \"Extremely loud\",\n        ru: \"Экстремально шумно\"\n      }\n    },\n  ],\n  calculate: function (v) {\n    return toFixed(v);\n  },\n  info: \"Noise is what your ears or noise sensor can sense. Measured in Decibel (dB).\",\n};\n","export default {\n  label: \"PM1\",\n  unit: \"μg/m3\",\n  chartColor: \"#ff99e9\",\n};\n","import { toFixed } from \"./tools\";\n\nexport default {\n  label: \"PM10\",\n  unit: \"μg/m3\",\n  chartColor: \"#e8b738\",\n  colors: [\"#60bc2a\", \"#ff9d00\", \"#fc0202\"],\n  range: [0, 51, 101, 251, 350],\n  zones: [\n    {\n      value: 50,\n      color: \"#60bc2a\",\n      label: {\n        en: \"Good\",\n        ru: \"Хорошо\"\n      }\n    },\n    {\n      value: 100,\n      color: \"#12bfcc\",\n      label: {\n        en: \"Satisfyingly\",\n        ru: \"Удовлетворительно\"\n      }\n    },\n    {\n      value: 250,\n      color: \"#ff9d00\",\n      label: {\n        en: \"Poor\",\n        ru: \"Плохо\"\n      }\n    },\n    {\n      value: 350,\n      color: \"#ff4d00\",\n      label: {\n        en: \"Very poor\",\n        ru: \"Очень плохо\"\n      }\n    },\n    {\n      color: \"#7a00da\",\n      label: {\n        en: \"Unacceptable\",\n        ru: \"Неприемлемо\"\n      }\n    },\n  ],\n  calculate: function (v) {\n    return toFixed(v);\n  },\n  info: \"PM10 - suspended particles (PM - particulate matter) of a substance with a diameter of less than 10 micrometers (μm). Pollen and other allergens.\",\n};\n","import { toFixed } from \"./tools\";\n\nexport default {\n  label: \"PM2.5\",\n  unit: \"μg/m3\",\n  chartColor: \"#89b268\",\n  colors: [\"#60bc2a\", \"#ff9d00\", \"#fc0202\"],\n  range: [0, 36, 70, 151, 251],\n  zones: [\n    {\n      value: 36,\n      color: \"#60bc2a\",\n      label: {\n        en: \"Good\",\n        ru: \"Хорошо\"\n      }\n    },\n    {\n      value: 70,\n      color: \"#12bfcc\",\n      label: {\n        en: \"Satisfyingly\",\n        ru: \"Удовлетворительно\"\n      }\n    },\n    {\n      value: 150,\n      color: \"#ff9d00\",\n      label: {\n        en: \"Poor\",\n        ru: \"Плохо\"\n      }\n    },\n    {\n      value: 250,\n      color: \"#ff4d00\",\n      label: {\n        en: \"Very poor\",\n        ru: \"Очень плохо\"\n      }\n    },\n    {\n      color: \"#7a00da\",\n      label: {\n        en: \"Unacceptable\",\n        ru: \"Неприемлемо\"\n      }\n    },\n  ],\n  calculate: function (v) {\n    return toFixed(v);\n  },\n  info: \"Suspended, solid and liquid particles with a diameter of 2.5 microns are an air pollutant.\",\n};\n","export default {\n  label: \"Pr\",\n  name: {\n    en: \"Atmospheric pressure\",\n    ru: \"Атмосферное давление\"\n  },\n  nameshort: {\n    en: \"Pressure\",\n    ru: \"Давление\"\n  },\n  unit: \"mmHg\",\n};\n","export default {\n  label: \"Rainfall\",\n  unit: \"mm\",\n};\n","export default {\n  label: \"Sat10\",\n  unit: \"\",\n};\n","export default {\n  label: \"Sat5\",\n  unit: \"\",\n};\n","export default {\n  label: \"Soiltemp\",\n  unit: \"℃\",\n};\n","import { toFixed } from \"./tools\";\n\nexport default {\n  label: \"Tmp\",\n  name: {\n    en: \"Temperature\",\n    ru: \"Температура\"\n  },\n  nameshort: {\n    en: \"Temperature\",\n    ru: \"Температура\"\n  },\n  unit: \"℃\",\n  chartColor: \"#2d7ac7\",\n  colors: [\"#fc0202\", \"#ff9d00\", \"#60bc2a\", \"#ff9d00\", \"#fc0202\"],\n  range: [-10, 0, 10, 25],\n  zones: [\n    {\n      value: -9,\n      color: \"#7a00da\",\n      label: {\n        en: \"Very cold\",\n        ru: \"Очень холодно\"\n      }\n    },\n    {\n      value: 0,\n      color: \"#2a5cbc\",\n      label: {\n        en: \"Cold\",\n        ru: \"Холодно\"\n      }\n    },\n    {\n      value: 10,\n      color: \"#03a5ed\",\n      label: {\n        en: \"Cool\",\n        ru: \"Прохладно\"\n      }\n    },\n    {\n      value: 25,\n      color: \"#60bc2a\",\n      label: {\n        en: \"Warm\",\n        ru: \"Тепло\"\n      }\n    },\n    {\n      color: \"#ff9d00\",\n      label: {\n        en: \"Hot\",\n        ru: \"Жарко\"\n      }\n    },\n  ],\n  states: [\"danger\", \"attention\", \"good\", \"attention\", \"danger\", \"neutral\"],\n  calculate: function (v) {\n    return toFixed(v);\n  },\n  info: \"Показатель температуры воздуха\",\n};\n","export default {\n  label: \"Windang\",\n  unit: \"°\",\n  icon: \"wind\",\n};\n","export default {\n  label: \"Windspeed\",\n  unit: \"m/s\",\n  icon: \"wind\",\n};\n","export default {\n  label: \"Windspeedmax\",\n  unit: \"m/s\",\n};\n","import airtemp from \"./airtemp\";\nimport airtempavg from \"./airtempavg\";\nimport airtempmax from \"./airtempmax\";\nimport airtempmin from \"./airtempmin\";\nimport co from \"./co\";\nimport gc from \"./gc\";\nimport humidity from \"./humidity\";\nimport nh3 from \"./nh3\";\nimport no2 from \"./no2\";\nimport noise from \"./noise\";\nimport noiseavg from \"./noiseavg\";\nimport noisemax from \"./noisemax\";\nimport pm1 from \"./pm1\";\nimport pm10 from \"./pm10\";\nimport pm25 from \"./pm25\";\nimport pressure from \"./pressure\";\nimport rainfall from \"./rainfall\";\nimport sat10 from \"./sat10\";\nimport sat5 from \"./sat5\";\nimport soiltemp from \"./soiltemp\";\nimport temperature from \"./temperature\";\nimport windang from \"./windang\";\nimport windspeed from \"./windspeed\";\nimport windspeedmax from \"./windspeedmax\";\n\nexport default {\n  airtemp,\n  airtempavg,\n  airtempmax,\n  airtempmin,\n  co,\n  gc,\n  humidity,\n  nh3,\n  no2,\n  noise,\n  noiseavg,\n  noisemax,\n  pm1,\n  pm10,\n  pm25,\n  pressure,\n  rainfall,\n  sat10,\n  sat5,\n  soiltemp,\n  temperature,\n  windang,\n  windspeed,\n  windspeedmax,\n};\n","import { render } from \"./DatalogChart.vue?vue&type=template&id=3fa1f2d4\"\nimport script from \"./DatalogChart.vue?vue&type=script&lang=js\"\nexport * from \"./DatalogChart.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <section v-if=\"scales && scales.length > 0\">\n    <h3>Units of measurement</h3>\n    <div class=\"scalegrid\">\n      <div v-for=\"item in scales\" :key=\"item.label\">\n        <template v-if=\"item?.zones && (item.name || item.label)\">\n          <p>\n            <b v-if=\"item.name\">{{\n              locale === \"en\" ? item.name.en : item.name.ru\n            }}</b>\n            <b v-else>{{ item.label }}</b>\n            ({{ item.unit }})\n          </p>\n          <template v-for=\"zone in item.zones\" :key=\"zone.color\">\n            <div\n              class=\"scales-color\"\n              v-if=\"zone.color && zone.label\"\n              :style=\"`--color: ${zone.color}`\"\n            >\n              <b>{{ locale === \"en\" ? zone.label.en : zone.label.ru }}</b>\n              (<template v-if=\"zone.value\">up to {{ zone.value }}</template>\n              <template v-else>above</template>)\n            </div>\n          </template>\n        </template>\n      </div>\n    </div>\n  </section>\n</template>\n\n<script>\nimport measurements from \"./measurements\";\n\nexport default {\n  props: [\"log\"],\n  setup(props) {\n    const scales = [];\n    let units = [];\n    for (const item of props.log) {\n      for (const unit of item.data) {\n        if (units.indexOf(unit.fullKey) === -1) {\n          units.push(unit.fullKey);\n          if (measurements[unit.fullKey]) {\n            scales.push(measurements[unit.fullKey]);\n          }\n        }\n      }\n    }\n\n    return {\n      locale: \"en\",\n      scales\n    };\n  }\n};\n</script>\n\n<style scoped>\n/* + scales */\n.scalegrid {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: var(--gap);\n  font-size: 0.8em;\n}\n.scalegrid p {\n  margin-bottom: calc(var(--gap) * 0.5);\n}\n\n.scales-color {\n  position: relative;\n  padding-left: calc(var(--gap) * 2);\n}\n\n.scales-color:before {\n  content: \"\";\n  display: block;\n  position: absolute;\n  background-color: var(--color);\n  top: 0;\n  left: 0;\n  bottom: 0;\n  width: var(--gap);\n}\n/* - scales */\n</style>\n","import { render } from \"./MeasurementsScalegrid.vue?vue&type=template&id=143a54dc&scoped=true\"\nimport script from \"./MeasurementsScalegrid.vue?vue&type=script&lang=js\"\nexport * from \"./MeasurementsScalegrid.vue?vue&type=script&lang=js\"\n\nimport \"./MeasurementsScalegrid.vue?vue&type=style&index=0&id=143a54dc&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-143a54dc\"]])\n\nexport default __exports__","const mapKey = new Map([\n  [\"p1\", \"pm10\"],\n  [\"p2\", \"pm25\"],\n  [\"nm\", \"noisemax\"],\n  [\"na\", \"noiseavg\"],\n  [\"t\", \"temperature\"],\n  [\"p\", \"pressure\"],\n  [\"h\", \"humidity\"]\n]);\n\n/**\n * Given a key, return the corresponding name if the key exists in the map.\n * Otherwise, return the key itself.\n *\n * @param {string} key\n * @return {string}\n */\nconst getFullKey = (key) => {\n  const name = mapKey.get(key);\n  if (name) {\n    return name;\n  }\n  return key;\n};\n\n/**\n * Parses a comma-separated string of key-value pairs into an array of objects.\n * Each object contains the original key, its mapped name from the mapName if available,\n * and the corresponding value.\n *\n * @param {string} data - A string containing key-value pairs separated by commas,\n *                        where each pair is separated by a colon.\n * @return {Array<{key: string, name: string, value: string}>} - An array of objects\n *                                                              with parsed key, name, and value.\n */\nexport const parser = (data) => {\n  return data.split(\",\").map((item) => {\n    const [key, value] = item.split(\":\");\n    return {\n      key,\n      fullKey: getFullKey(key),\n      value\n    };\n  });\n};\n","import { render } from \"./AltruistChart.vue?vue&type=template&id=584fd5c0&scoped=true\"\nimport script from \"./AltruistChart.vue?vue&type=script&lang=js\"\nexport * from \"./AltruistChart.vue?vue&type=script&lang=js\"\n\nimport \"./AltruistChart.vue?vue&type=style&index=0&id=584fd5c0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-584fd5c0\"]])\n\nexport default __exports__","import { render } from \"./Page.vue?vue&type=template&id=7a89e38d\"\nimport script from \"./Page.vue?vue&type=script&lang=js\"\nexport * from \"./Page.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["_createBlock","_component_robo_layout_section","default","_withCtx","_createVNode","_component_robo_section","offset","width","style","_cache","_createElementVNode","_","$setup","isFind","_component_datalog_loader","key","altruistAddress","_component_robo_status","type","_createTextVNode","undefined","_component_altruist_chart","address","_createCommentVNode","_component_notice_text","isLaoded","_createElementBlock","_hoisted_1","_component_datalog_chart","log","_component_sensor_info","sensor_id","$props","class","_component_measurements_scalegrid","_component_chart","options","chartOptions","ref","label","unit","toFixed","num","dec","converterPpmToMgm3","v","molecularWeight","name","en","ru","chartColor","colors","range","zones","value","color","calculate","info","nameshort","icon","states","airtemp","airtempavg","airtempmax","airtempmin","co","gc","humidity","nh3","no2","noise","noiseavg","noisemax","pm1","pm10","pm25","pressure","rainfall","sat10","sat5","soiltemp","temperature","windang","windspeed","windspeedmax","components","Chart","props","setup","getSeries","data","seriesRaw","row","item","fullKey","push","moment","parseFloat","measurements","tooltip","valueSuffix","Object","values","series","chart","onMounted","getCurrentInstance","refs","watch","length","forEach","newdata","id","findIndex","m","setData","addSeries","redraw","lang","locale","spacing","title","text","time","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","xAxis","labels","overflow","format","yAxis","valueDecimals","__exports__","scales","_hoisted_2","_Fragment","_renderList","_hoisted_3","_toDisplayString","_hoisted_4","zone","_normalizeStyle","units","indexOf","mapKey","Map","getFullKey","get","parser","split","map","DatalogLoader","DatalogChart","SensorInfo","MeasurementsScalegrid","datalog","useDatalog","toRefs","isShowRaw","showRaw","AltruistChart","NoticeText","runFind","useFind","immediate","render"],"sourceRoot":""}