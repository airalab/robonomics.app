{"version":3,"file":"js/app.89c47689.js","mappings":"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","sources":["webpack://dapp-robonomics.network/./src/views/dtwin/CreateTwin.vue","webpack://dapp-robonomics.network/./src/views/dtwin/CreateTwin.vue?2dea","webpack://dapp-robonomics.network/./src/hooks/useSubscription.js","webpack://dapp-robonomics.network/./src/hooks/useSend.js","webpack://dapp-robonomics.network/./src/hooks/useAccount.js","webpack://dapp-robonomics.network/./src/hooks/useDevices.js","webpack://dapp-robonomics.network/./src/App.vue","webpack://dapp-robonomics.network/./src/components/Header.vue","webpack://dapp-robonomics.network/./src/utils/tools.js","webpack://dapp-robonomics.network/./src/components/Header.vue?801b","webpack://dapp-robonomics.network/./src/components/Footer.vue","webpack://dapp-robonomics.network/./src/components/Footer.vue?7cca","webpack://dapp-robonomics.network/./src/components/layouts/Main.vue","webpack://dapp-robonomics.network/./src/components/layouts/Main.vue?a356","webpack://dapp-robonomics.network/./src/App.vue?7ccd","webpack://dapp-robonomics.network/./src/plugins/ipfs.js","webpack://dapp-robonomics.network/./src/utils/encryptor.js","webpack://dapp-robonomics.network/./src/plugins/robonomicsAccountManager.js","webpack://dapp-robonomics.network/./src/plugins/robonomics.js","webpack://dapp-robonomics.network/./src/plugins/web3.js","webpack://dapp-robonomics.network/./src/views/hardware/Altruist.vue","webpack://dapp-robonomics.network/./src/views/hardware/Hikikomori.vue","webpack://dapp-robonomics.network/./src/views/hardware/Riscv.vue","webpack://dapp-robonomics.network/./src/components/web3/NftInfo.vue","webpack://dapp-robonomics.network/./src/components/web3/NftToken.vue","webpack://dapp-robonomics.network/./src/components/web3/BtnSend.vue","webpack://dapp-robonomics.network/./src/components/web3/BtnSend.vue?fc9a","webpack://dapp-robonomics.network/./src/components/web3/FreeMinimum.vue","webpack://dapp-robonomics.network/./src/components/web3/apiNftOracle.js","webpack://dapp-robonomics.network/./src/components/web3/FreeMinimum.vue?6b81","webpack://dapp-robonomics.network/./src/components/web3/NftToken.vue?6082","webpack://dapp-robonomics.network/./src/components/web3/NftInfo.vue?0a2c","webpack://dapp-robonomics.network/./src/views/hardware/Season-pass-2.vue","webpack://dapp-robonomics.network/./src/views/hardware/Season-pass-2.vue?7d65","webpack://dapp-robonomics.network/./src/eth_chains.js","webpack://dapp-robonomics.network/./src/views/hardware/Season-pass.vue","webpack://dapp-robonomics.network/./src/views/hardware/Season-pass.vue?e5cd","webpack://dapp-robonomics.network/./src/views/Home.vue","webpack://dapp-robonomics.network/./src/views/Home.vue?9051","webpack://dapp-robonomics.network/./src/views/humanoid/RobonomicsLaunch.vue","webpack://dapp-robonomics.network/./src/views/humanoid/config.js","webpack://dapp-robonomics.network/./src/views/humanoid/RobonomicsLaunch.vue?4a2b","webpack://dapp-robonomics.network/./src/views/humanoid/RobonomicsApp.vue","webpack://dapp-robonomics.network/./src/views/humanoid/RobonomicsApp.vue?7643","webpack://dapp-robonomics.network/./src/views/PathNotFound.vue","webpack://dapp-robonomics.network/./src/views/PathNotFound.vue?dbdf","webpack://dapp-robonomics.network/./src/views/RwsActivate.vue","webpack://dapp-robonomics.network/./src/hooks/useBalance.js","webpack://dapp-robonomics.network/./src/views/RwsActivate.vue?116c","webpack://dapp-robonomics.network/./src/views/RwsSetup.vue","webpack://dapp-robonomics.network/./src/views/RwsSetup.vue?d6aa","webpack://dapp-robonomics.network/./src/views/RwsSetupNew.vue","webpack://dapp-robonomics.network/./src/views/RwsSetupNew.vue?1f64","webpack://dapp-robonomics.network/./src/views/hardware/Energy-monitor.vue","webpack://dapp-robonomics.network/./src/views/hardware/Energy-monitor.vue?2905","webpack://dapp-robonomics.network/./src/views/saveSetup/Page.vue","webpack://dapp-robonomics.network/./src/views/saveSetup/Account.vue","webpack://dapp-robonomics.network/./src/views/saveSetup/Account.vue?7f78","webpack://dapp-robonomics.network/./src/views/saveSetup/Crust.vue","webpack://dapp-robonomics.network/./src/utils/crust.js","webpack://dapp-robonomics.network/./src/views/saveSetup/Crust.vue?49e2","webpack://dapp-robonomics.network/./src/views/saveSetup/DTwin.vue","webpack://dapp-robonomics.network/./src/views/saveSetup/DTwin.vue?84e3","webpack://dapp-robonomics.network/./src/views/saveSetup/DTwinSave.vue","webpack://dapp-robonomics.network/./src/views/saveSetup/DTwinSave.vue?5fcb","webpack://dapp-robonomics.network/./src/views/saveSetup/Encrypt.vue","webpack://dapp-robonomics.network/./src/views/saveSetup/Encrypt.vue?f5bc","webpack://dapp-robonomics.network/./src/views/saveSetup/IpfsFile.vue","webpack://dapp-robonomics.network/./src/views/saveSetup/IpfsFile.vue?12b7","webpack://dapp-robonomics.network/./src/views/saveSetup/IpfsUpload.vue","webpack://dapp-robonomics.network/./src/views/saveSetup/IpfsUpload.vue?9485","webpack://dapp-robonomics.network/./src/views/saveSetup/Page.vue?b747","webpack://dapp-robonomics.network/./src/views/telemetry/Telemetry.vue","webpack://dapp-robonomics.network/./src/views/telemetry/Launch.vue","webpack://dapp-robonomics.network/./src/hooks/useIpfs.js","webpack://dapp-robonomics.network/./src/utils/telemetry.js","webpack://dapp-robonomics.network/./src/views/telemetry/common.js","webpack://dapp-robonomics.network/./src/views/telemetry/launch.js","webpack://dapp-robonomics.network/./src/views/telemetry/Launch.vue?a7de","webpack://dapp-robonomics.network/./src/views/telemetry/Libp2p.vue","webpack://dapp-robonomics.network/./src/utils/libp2p/ha.js","webpack://dapp-robonomics.network/./src/utils/libp2p/libp2p.js","webpack://dapp-robonomics.network/./src/views/telemetry/libp2p.js","webpack://dapp-robonomics.network/./src/views/telemetry/Libp2p.vue?d944","webpack://dapp-robonomics.network/./src/views/telemetry/Telemetry.vue?f25e","webpack://dapp-robonomics.network/./src/router.js","webpack://dapp-robonomics.network/./src/store.js","webpack://dapp-robonomics.network/./src/utils/filters.js","webpack://dapp-robonomics.network/./src/main.js","webpack://dapp-robonomics.network/./src/views/dtwin/SelectTwin.vue","webpack://dapp-robonomics.network/./src/views/dtwin/SelectTwin.vue?f204","webpack://dapp-robonomics.network/./src/hooks/useRobonomics.js","webpack://dapp-robonomics.network/./src/views/dtwin/dtwin.js","webpack://dapp-robonomics.network/./src/config.js","webpack://dapp-robonomics.network/webpack/bootstrap","webpack://dapp-robonomics.network/webpack/runtime/amd options","webpack://dapp-robonomics.network/webpack/runtime/chunk loaded","webpack://dapp-robonomics.network/webpack/runtime/compat get default export","webpack://dapp-robonomics.network/webpack/runtime/create fake namespace object","webpack://dapp-robonomics.network/webpack/runtime/define property getters","webpack://dapp-robonomics.network/webpack/runtime/ensure chunk","webpack://dapp-robonomics.network/webpack/runtime/get javascript chunk filename","webpack://dapp-robonomics.network/webpack/runtime/get mini-css chunk filename","webpack://dapp-robonomics.network/webpack/runtime/global","webpack://dapp-robonomics.network/webpack/runtime/hasOwnProperty shorthand","webpack://dapp-robonomics.network/webpack/runtime/load script","webpack://dapp-robonomics.network/webpack/runtime/make namespace object","webpack://dapp-robonomics.network/webpack/runtime/node module decorator","webpack://dapp-robonomics.network/webpack/runtime/publicPath","webpack://dapp-robonomics.network/webpack/runtime/css loading","webpack://dapp-robonomics.network/webpack/runtime/jsonp chunk loading","webpack://dapp-robonomics.network/webpack/startup"],"sourcesContent":["<template>\n  <robo-button\n    @click=\"create\"\n    block\n    :disabled=\"isProccess\"\n    :loading=\"isProccess\"\n    :type=\"isSuccess ? 'ok' : 'primary'\"\n  >\n    Create new\n  </robo-button>\n</template>\n\n<script>\nimport { ref } from \"vue\";\nimport { useTwinAction } from \"./dtwin.js\";\n\nexport default {\n  props: [\"owner\"],\n  emits: [\"change\"],\n  setup(props, { emit }) {\n    const { create } = useTwinAction(props.owner);\n    const isProccess = ref(false);\n    const isSuccess = ref(false);\n\n    return {\n      isProccess,\n      isSuccess,\n      create: async () => {\n        isSuccess.value = false;\n        isProccess.value = true;\n        const tx = await create();\n        if (tx.error.value) {\n          if (tx.error.value !== \"Cancelled\") {\n            console.log(tx.error.value);\n          } else {\n            console.log(\"cancel\");\n          }\n          isProccess.value = false;\n          return false;\n        }\n        isProccess.value = false;\n        isSuccess.value = true;\n        emit(\"create\");\n      }\n    };\n  }\n};\n</script>\n","import { render } from \"./CreateTwin.vue?vue&type=template&id=1fb051d6\"\nimport script from \"./CreateTwin.vue?vue&type=script&lang=js\"\nexport * from \"./CreateTwin.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import configApp from \"@/config\";\nimport { createType, TypeRegistry } from \"@polkadot/types\";\nimport { validateAddress } from \"@polkadot/util-crypto\";\nimport { computed, ref, shallowRef, watch } from \"vue\";\nimport { useDevices } from \"./useDevices\";\nimport { useRobonomics } from \"./useRobonomics\";\n\nconst getRegistry = () => {\n  const registry = new TypeRegistry();\n  const types = {\n    PalletRobonomicsRwsSubscription: {\n      _enum: {\n        Lifetime: {\n          tps: \"Compact<u32>\"\n        },\n        Daily: {\n          days: \"Compact<u32>\"\n        }\n      }\n    },\n    PalletRobonomicsRwsSubscriptionLedger: {\n      freeWeight: \"Compact<u64>\",\n      issueTime: \"Compact<u64>\",\n      lastUpdate: \"Compact<u64>\",\n      kind: {\n        _enum: {\n          Lifetime: {\n            tps: \"Compact<u32>\"\n          },\n          Daily: {\n            days: \"Compact<u32>\"\n          }\n        }\n      }\n    }\n  };\n  registry.register(types);\n  return registry;\n};\n\nconst DAYS_TO_MS = 24 * 60 * 60 * 1000;\n\nexport const getLedger = async (robonomics, owner) => {\n  const res = await robonomics.rws.getLedger(owner);\n  if (!res.isEmpty) {\n    return res.value;\n  }\n  return null;\n};\n\nexport const getValidUntil = (ledger) => {\n  if (!ledger) {\n    return null;\n  }\n  if (ledger.kind.isLifetime) {\n    return null;\n  }\n  const issue_time = ledger.issueTime.toNumber();\n  let days = 0;\n  if (ledger.kind.isDaily) {\n    days = ledger.kind.value.days.toNumber();\n  }\n  return issue_time + days * DAYS_TO_MS;\n};\n\nexport const useSubscription = (initialOwner = null) => {\n  const owner = ref(initialOwner);\n  const dataRaw = shallowRef(null);\n\n  const { isReady, getInstance } = useRobonomics();\n  const { devices, loadDevices } = useDevices(owner);\n\n  const getReferenceCallWeight = () => {\n    return getInstance().api.consts.rws.referenceCallWeight;\n  };\n\n  const getLedger = async (owner) => {\n    const endpoint =\n      localStorage.getItem(\"rpc-parachain\") || configApp.default_rpc_endpoint;\n    const lsKey = `hasubscription:${endpoint}:${owner}`;\n\n    if (!isReady.value) {\n      const data = localStorage.getItem(lsKey);\n      if (data) {\n        try {\n          const parsedData = JSON.parse(data);\n          // if (parsedData.time + DAYS_TO_MS > Date.now()) {\n          const res = createType(\n            getRegistry(),\n            \"Option<PalletRobonomicsRwsSubscriptionLedger>\",\n            parsedData.value\n          );\n          // console.log(\"getLedger cache\");\n          return { data: res.value, cache: true };\n          // }\n        } catch (error) {\n          console.log(\"hasubscription bad\", error);\n        }\n      } else {\n        return { data: undefined, cache: true };\n      }\n    } else {\n      const res = await getInstance().rws.getLedger(owner);\n      if (!res.isEmpty) {\n        localStorage.setItem(\n          lsKey,\n          JSON.stringify({ time: Date.now(), value: res.value.toJSON() })\n        );\n        // console.log(\"getLedger chain\");\n        return { data: res.value, cache: false };\n      }\n    }\n    return { data: undefined, cache: false };\n  };\n\n  const getFreeWeightCalc = async (owner) => {\n    const ledger = (await getLedger(owner)).data;\n    if (!ledger) {\n      return -1;\n    }\n\n    const freeWeight = ledger.freeWeight.toNumber();\n    const lastUpdate = ledger.lastUpdate.toNumber();\n    const issueTime = ledger.issueTime.toNumber();\n\n    const referenceCallWeight = getReferenceCallWeight();\n    const now = Date.now();\n\n    let utps = (() => {\n      let tps;\n      if (ledger.kind.isLifetime) {\n        tps = ledger.kind.value.tps.toNumber();\n      } else {\n        const days = ledger.kind.value.days.toNumber();\n        const duration_ms = days * DAYS_TO_MS;\n        if (now < issueTime + duration_ms) {\n          tps = 10000;\n        } else {\n          tps = 0;\n        }\n      }\n      return tps;\n    })();\n\n    const delta = now - lastUpdate;\n    return Math.floor(\n      freeWeight + (referenceCallWeight * utps * delta) / 1000000000\n    );\n  };\n\n  const validUntil = computed(() => {\n    if (!dataRaw.value) {\n      return null;\n    }\n    if (dataRaw.value.kind.isLifetime) {\n      return null;\n    }\n    const issue_time = dataRaw.value.issueTime.toNumber();\n    let days = 0;\n    if (dataRaw.value.kind.isDaily) {\n      days = dataRaw.value.kind.value.days.toNumber();\n    }\n    return issue_time + days * DAYS_TO_MS;\n  });\n\n  const countMonth = computed(() => {\n    if (!dataRaw.value) {\n      return 0;\n    }\n    let days = 0;\n    if (dataRaw.value.kind.isDaily) {\n      days = dataRaw.value.kind.value.days.toNumber();\n    }\n    return days / 30;\n  });\n\n  const isActive = computed(() => {\n    if (\n      !dataRaw.value ||\n      (validUntil.value !== null && Date.now() > validUntil.value)\n    ) {\n      return false;\n    }\n    return true;\n  });\n\n  const hasSubscription = computed(() => {\n    return dataRaw.value;\n  });\n\n  const loadLedger = async () => {\n    if (owner.value) {\n      try {\n        validateAddress(owner.value);\n        const result = await getLedger(owner.value);\n        dataRaw.value = result.data;\n        if (result.cache) {\n          const stop = watch(\n            isReady,\n            async () => {\n              if (isReady.value) {\n                const result = await getLedger(owner.value);\n                dataRaw.value = result.data;\n                stop();\n              }\n            },\n            { immediate: true }\n          );\n        }\n        return;\n        // eslint-disable-next-line no-empty\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    dataRaw.value = null;\n  };\n\n  watch(\n    owner,\n    async () => {\n      await loadLedger();\n    },\n    {\n      immediate: true\n    }\n  );\n\n  return {\n    owner,\n    dataRaw,\n    hasSubscription,\n    isActive,\n    countMonth,\n    validUntil,\n    loadLedger,\n    devices,\n    loadDevices,\n    getFreeWeightCalc\n  };\n};\n","import { ref } from \"vue\";\nimport { useRobonomics } from \"./useRobonomics\";\nimport { useSubscription } from \"./useSubscription\";\n\nexport const useSend = () => {\n  const { isReady, getInstance, accountManager } = useRobonomics();\n  const { getFreeWeightCalc } = useSubscription();\n\n  const getCallWeight = async (tx, signer) => {\n    if (!signer) {\n      if (accountManager.account) {\n        signer = accountManager.account.address;\n      } else {\n        throw new Error(\"Signer required\");\n      }\n    }\n    if (tx.hasPaymentInfo) {\n      return (await tx.paymentInfo(signer)).weight.toNumber();\n    }\n    return 0;\n  };\n\n  const checkWeight = async (tx, owner) => {\n    const freeWeightCalc = await getFreeWeightCalc(owner);\n    if (freeWeightCalc < 0) {\n      throw new Error(`Not found ledger ${owner}`);\n    }\n    const callWeight = await getCallWeight(tx);\n    if (callWeight > freeWeightCalc) {\n      throw new Error(\n        `The origin account have no enough free weight to process these call. Call weight ${callWeight}, Free weight ${freeWeightCalc}`\n      );\n    }\n  };\n\n  const createTx = () => {\n    const result = ref(null);\n    const error = ref(null);\n    const process = ref(false);\n    return { error, process, result };\n  };\n\n  const send = async (tx, call, subscription = false) => {\n    tx.result.value = null;\n    tx.error.value = null;\n    tx.process.value = true;\n    if (!isReady.value) {\n      tx.error.value = \"Robonomics is not ready\";\n      tx.process.value = false;\n      return;\n    }\n    const robonomics = getInstance();\n    try {\n      if (subscription) {\n        await checkWeight(call, subscription);\n        robonomics.accountManager.useSubscription(subscription);\n      }\n      const nonce = await robonomics.api.rpc.system.accountNextIndex(\n        robonomics.accountManager.account.address\n      );\n      tx.result.value = await robonomics.accountManager.signAndSend(call, {\n        nonce\n      });\n      console.log(\"tx\", tx.result.value.block, tx.result.value.tx);\n    } catch (e) {\n      console.log(e);\n      tx.error.value = e.message;\n    }\n    tx.process.value = false;\n    if (subscription) {\n      robonomics.accountManager.useSubscription(false);\n    }\n    return tx.result;\n  };\n\n  return { createTx, send };\n};\n","import { ref } from \"vue\";\nimport { useRobonomics } from \"./useRobonomics\";\n\nexport const useAccount = () => {\n  const account = ref(null);\n  const { accountManager } = useRobonomics();\n  if (accountManager.account) {\n    account.value = accountManager.account.address;\n  }\n  const unsubscribe = accountManager.onChange((res) => {\n    account.value = res.address;\n  });\n  return { account, unsubscribe };\n};\n","import configApp from \"@/config\";\nimport { validateAddress } from \"@polkadot/util-crypto\";\nimport { onUnmounted, ref, watch } from \"vue\";\nimport { useRobonomics } from \"./useRobonomics\";\n\nexport const getDevices = async (robonomics, owner) => {\n  try {\n    const result = await robonomics.rws.getDevices(owner);\n    return result.map((item) => {\n      return item.toHuman();\n    });\n  } catch (error) {\n    console.log(error);\n    return [];\n  }\n};\n\nexport const useDevices = (initialOwner = null) => {\n  const { isReady, getInstance } = useRobonomics();\n  const owner = ref(initialOwner);\n  const devices = ref([]);\n\n  const getDevices = async (owner) => {\n    const endpoint =\n      localStorage.getItem(\"rpc-parachain\") || configApp.default_rpc_endpoint;\n    const lsKey = `hadevices:${endpoint}:${owner}`;\n\n    if (!isReady.value) {\n      const data = localStorage.getItem(lsKey);\n      if (data) {\n        try {\n          const parsedData = JSON.parse(data);\n          // console.log(\"getDevices cache\");\n          return { data: parsedData.value, cache: true };\n        } catch (error) {\n          console.log(\"hadevices bad\", error);\n        }\n      } else {\n        return { data: [], cache: true };\n      }\n    } else {\n      try {\n        const result = await getInstance().rws.getDevices(owner);\n        const list = result.map((item) => {\n          return item.toHuman();\n        });\n        localStorage.setItem(\n          lsKey,\n          JSON.stringify({ time: Date.now(), value: list })\n        );\n        // console.log(\"getDevices chain\");\n        return { data: list, cache: false };\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    return { data: [], cache: false };\n  };\n\n  const loadDevices = async () => {\n    if (owner.value) {\n      try {\n        validateAddress(owner.value);\n        const result = await getDevices(owner.value);\n        devices.value = result.data;\n        if (result.cache) {\n          const stop = watch(\n            isReady,\n            async () => {\n              if (isReady.value) {\n                const result = await getDevices(owner.value);\n                devices.value = result.data;\n                stop();\n              }\n            },\n            { immediate: true }\n          );\n        }\n        return;\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    devices.value = [];\n  };\n\n  watch(\n    owner,\n    async () => {\n      await loadDevices();\n    },\n    {\n      immediate: true\n    }\n  );\n\n  watch(\n    isReady,\n    async (isReady) => {\n      if (isReady) {\n        const unsubscribe = await getInstance().events.on(\n          { section: \"rws\", method: \"NewDevices\" },\n          async (result) => {\n            for (const event of result) {\n              if (event.data[0].toHuman() === owner.value) {\n                await loadDevices();\n              }\n            }\n          }\n        );\n        onUnmounted(unsubscribe);\n      }\n    },\n    { immediate: true }\n  );\n\n  return {\n    owner,\n    devices,\n    loadDevices\n  };\n};\n","<template>\n  <main-layout :pagetitle=\"title\">\n    <router-view />\n  </main-layout>\n</template>\n\n<script>\nimport MainLayout from \"@/components/layouts/Main.vue\";\nimport { inject, ref, watch } from \"vue\";\nimport { useRoute, useRouter } from \"vue-router\";\nimport { useStore } from \"vuex\";\n\nexport default {\n  name: \"App\",\n  components: {\n    MainLayout\n  },\n  setup() {\n    const RobonomicsProvider = inject(\"RobonomicsProvider\");\n    const IpfsProvider = inject(\"IpfsProvider\");\n    const store = useStore();\n    const router = useRouter();\n    const route = useRoute();\n\n    const title = ref();\n\n    // store.commit(\"rws/setKey\", process.env.VUE_APP_ROBONOMICS_UI_KEY);\n    // отказываемся от этой переменной совсем\n    // store.dispatch(\"rws/init\");\n\n    store.commit(\"rws/setLink\", {\n      link: \"activate\",\n      value: router.resolve({ name: \"rwsActivate\" }).path\n    });\n\n    store.commit(\"rws/setLink\", {\n      link: \"setup\",\n      value: router.resolve({ name: \"rwsSetup\" }).path\n    });\n\n    store.commit(\"rws/setLink\", {\n      link: \"setupnew\",\n      value: router.resolve({ name: \"rwsSetupNew\" }).path\n    });\n\n    store.commit(\"rws/setLink\", {\n      link: \"devices\",\n      value: router.resolve({ name: \"telemetry\" }).path\n    });\n\n    store.commit(\"ipfs/setGateways\", IpfsProvider.gateways);\n\n    watch(route, () => {\n      title.value = route?.meta?.title;\n      const resulttitle = title.value\n        ? `${title.value} / Robonomics Dapp`\n        : \"Robonomics Dapp\";\n      document.title = resulttitle;\n      if(document\n      .querySelector('meta[property=\"og:title\"]'))\n      document\n        .querySelector('meta[property=\"og:title\"]')\n        .setAttribute(\"content\", resulttitle);\n    });\n\n    watch(\n      [route, RobonomicsProvider.isReady],\n      ([route, isReady]) => {\n        if (route.name !== \"telemetry\" && isReady) {\n          store.commit(\"polkadot/setConnectionType\", \"parachain\");\n          store.commit(\"polkadot/setConnectionConnected\", true);\n        }\n      },\n      { immediate: true }\n    );\n\n    return {\n      title\n    };\n  }\n};\n</script>\n","<template>\n  <robo-layout-header\n    logoIcon=\"images/icon_white.svg\"\n    :title=\"title\"\n    v-if=\"renderComponent\"\n  >\n\n  <template #nav>\n\n    <robo-section>\n      <nav class=\"nav-rws\">\n        <ul>\n          <li><router-link :to=\"$store.state.robonomicsUIvue.rws.links.activate\" exact>Buy/renew a subscription</router-link></li>\n          <li><router-link :to=\"$store.state.robonomicsUIvue.rws.links.setupnew\" exact>New setup</router-link></li>\n          <li>\n            <router-link :to=\"$store.state.robonomicsUIvue.rws.links.setup\" exact>Your setup<template v-if=\"$store.state.robonomicsUIvue.rws.list.length > 1\">s</template></router-link>\n          </li>\n          <li>\n            <router-link :to=\"$store.state.robonomicsUIvue.rws.links.devices\" exact>Devices & Control</router-link>\n          </li>\n        </ul>\n      </nav>\n    </robo-section>\n\n    <robo-section>\n      <nav class=\"nav-devices\">\n        <ul>\n          <li>\n            <router-link to=\"/hardware/altruist\" exact>\n              <img src=\"images/hardware/altruist.webp\" />\n              <span>Air Quality Sensor “ALTRUIST“</span>\n            </router-link>\n          </li>\n          <li>\n            <router-link to=\"/hardware/riscv\" exact>\n              <img src=\"images/hardware/risc-v.webp\" />\n              <span>Home server with Web3 cloud</span>\n            </router-link>\n          </li>\n          <li>\n            <router-link to=\"/hardware/hikikomori\" exact>\n              <img src=\"images/hardware/hikikomori.webp\" />\n              <span>Smart Tamagotchi “Hikikomori“</span>\n            </router-link>\n          </li>\n          <li>\n            <router-link to=\"/hardware/energy-monitor\" exact>\n              <img src=\"images/hardware/e-monitor.webp\" />\n              <span>Energy monitor with USB-C</span>\n            </router-link>\n          </li>\n        </ul>\n      </nav>\n    </robo-section>\n\n  </template>\n  </robo-layout-header>\n</template>\n\n<script>\nimport { fromUnit, round } from \"@/utils/tools\";\nimport { toRaw } from \"vue\";\n\nexport default {\n  props: {\n    title: {\n      type: String,\n      default: \"Robonomics Dapp\"\n    }\n  },\n  inject: [\"RobonomicsProvider\"],\n  data() {\n    return {\n      renderComponent: true,\n    };\n  },\n  computed: {\n    robonomics: function () {\n      return toRaw(this.RobonomicsProvider.instance.value);\n    }\n  },\n  watch: {\n    \"$store.state.robonomicsUIvue.polkadot.extensionObj\": function (value) {\n      if (\n        value.signer &&\n        value.signer.signRaw &&\n        this.$store.state.robonomicsUIvue.polkadot.address\n      ) {\n        this.handlerAccount(this.$store.state.robonomicsUIvue.polkadot.address);\n      }\n    },\n    \"$store.state.robonomicsUIvue.polkadot.address\": {\n      handler: function (value) {\n        if (\n          value &&\n          this.$store.state.robonomicsUIvue.polkadot.extensionObj.signer &&\n          this.$store.state.robonomicsUIvue.polkadot.extensionObj.signer.signRaw\n        ) {\n          this.handlerAccount(value);\n        }\n      },\n      immediate: true\n    },\n    \"RobonomicsProvider.isReady.value\": {\n      handler: function (newValue, oldValue) {\n        if (newValue && !oldValue) {\n          this.handlerAccount(\n            this.$store.state.robonomicsUIvue.polkadot.address\n          );\n        }\n      },\n      immediate: true\n    },\n    $route: async function () {\n      this.renderComponent = false;\n      await this.$nextTick();\n      this.renderComponent = true;\n    }\n  },\n  methods: {\n    async handlerAccount(address) {\n      try{\n\n        if (!this.RobonomicsProvider.isReady.value) {\n          return;\n        }\n        if (this.unsubscribeBalance) {\n          this.unsubscribeBalance();\n        }\n        if (!this.$store.state.robonomicsUIvue.polkadot.accounts) {\n          return;\n        }\n        const account = this.$store.state.robonomicsUIvue.polkadot.accounts.find(\n          (item) => item.address === address\n        );\n        if (!account) {\n          return;\n        }\n        if (this.$route.name !== \"telemetry\") {\n          await this.robonomics.accountManager.setSender(address, {\n            type: account.type,\n            extension: this.$store.state.robonomicsUIvue.polkadot.extensionObj\n          });\n        }\n        this.unsubscribeBalance = await this.robonomics.account.getBalance(\n          address,\n          (r) => {\n            const transferable = r.free.sub(r.frozen);\n            this.$store.commit(\n              \"polkadot/setBalanceXRT\",\n              round(\n                fromUnit(\n                  transferable,\n                  this.robonomics.api.registry.chainDecimals[0]\n                ),\n                4\n              )\n            );\n          }\n        );\n      } catch (e) { console.error(e); }\n    }\n  }\n};\n</script>\n\n<style scoped>\n  .nav-rws ul {\n    text-align: left;\n    grid-template-columns: repeat(4, 1fr);\n  }\n\n  .nav-rws a {\n    display: block;\n    margin-bottom: 0.5rem;\n    font-weight: bold;\n    white-space: nowrap;\n    text-transform: uppercase;\n  }\n\n  .nav-devices {\n    margin-top: calc(var(--robo-space) * 2);\n  }\n\n  .nav-devices li {\n    padding: var(--robo-space) 0;\n    border-top: 1px solid var(--robo-color-dark);\n  }\n\n  .nav-devices a {\n    display: grid;\n    grid-template-columns: 100px auto;\n    align-items: center;\n    gap: var(--robo-space);\n    font-weight: bold;\n    text-transform: uppercase;\n  }\n\n  .nav-devices img {\n    max-width: 100%;\n    object-fit: contain;\n  }\n\n  .nav-devices li:not(:nth-child(2)) img {\n    max-height: 92px;\n  }\n\n  .nav-devices li:nth-child(2) img {\n    min-height: 100px;\n  }\n\n\n  @media screen and (width < 950px) {\n    .nav-rws ul {\n      grid-template-columns: repeat(2, 1fr);\n    }\n  }\n\n  @media screen and (width < 560px) {\n    .nav-devices a {\n      grid-template-columns: 50px auto;\n    }\n  }\n</style>\n","import Decimal from \"decimal.js-light\";\n\nDecimal.set({\n  toExpNeg: -31,\n  toExpPos: 31\n});\n\nexport function toDecimal(v) {\n  return new Decimal(v.toString());\n}\n\nexport function round(v, place) {\n  return toDecimal(v).todp(place);\n}\n\nexport function fromUnit(v, decimals = 0, dp) {\n  return toDecimal(v)\n    .div(new Decimal(10).pow(decimals.toString()))\n    .todp(dp)\n    .toString();\n}\n\nexport function toUnit(v, decimals = 0) {\n  return toDecimal(v).mul(new Decimal(10).pow(decimals.toString())).toString();\n}\n\nexport function showVersion() {\n  console.log(\n    \"Build version:\",\n    process.env.VUE_APP_GIT_BRANCH,\n    process.env.VUE_APP_GIT_TAG,\n    process.env.VUE_APP_GIT_SHA\n  );\n}\n","import { render } from \"./Header.vue?vue&type=template&id=4ab5b4e2&scoped=true\"\nimport script from \"./Header.vue?vue&type=script&lang=js\"\nexport * from \"./Header.vue?vue&type=script&lang=js\"\n\nimport \"./Header.vue?vue&type=style&index=0&id=4ab5b4e2&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4ab5b4e2\"]])\n\nexport default __exports__","<template>\n    <footer>\n        <div class=\"footer-section\">\n            <nav>\n                <ul v-for=\"item in navigation\" :key=\"item.title\" :data-label=\"item.title\">\n                    <li v-for=\"link in item.links\" :key=\"link.title\">\n                        <a :href=\"link.link\" target=\"_blank\">{{link.title}}</a>\n                    </li>\n                </ul>\n            </nav>\n            <robo-text size=\"small\" weight=\"bold\" align=\"center\">\n                <robo-grid id=\"footer-label\" type=\"flex\" gap=\"x05\" valign=\"center\">\n                    <span>Secured by</span>\n                    <img width=\"100\" alt=\"Polkadot\" src=\"/images/polkadot-new-dot-logo-horizontal.svg\" />\n                </robo-grid>\n            </robo-text>\n        </div>\n        <robo-text v-if=\"repoversion\" size=\"small\" weight=\"bold\" align=\"center\" class=\"footer-section\">\n            Latest release:\n            <a :href=\"repoversion.html_url\" target=\"_blank\">{{ repoversion.tag_name }} {{ repoversion.name }}</a>\n        </robo-text>\n    </footer>\n</template>\n\n<script setup>\n\nimport { ref, onMounted, computed } from \"vue\";\nimport { useStore } from \"vuex\";\nconst store = useStore();\n\nconst network = computed(() => {\n    return store.state.robonomicsUIvue?.polkadot?.connection?.network || \"polkadot\";\n});\n\nconst navigation = [\n{\n    title: \"Services\",\n    links: [\n    {\n        title: \"Sensors map\",\n        link: \"https://sensors.social\",\n    }\n    ]\n},\n\n{\n    title: \"Tokenomics\",\n    links: [\n    {\n        title: \"About XRT\",\n        link: \"https://robonomics.network/xrt/\",\n    },\n    {\n        title: \"Uniswap\",\n        link: \"https://app.uniswap.org/#/swap?inputCurrency=0x7de91b204c1c737bcee6f000aaa6569cf7061cb7&outputCurrency=0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n    },\n    {\n        title: \"Basilisk\",\n        link: \"https://app.basilisk.cloud/pools-and-farms\",\n    }\n    ]\n},\n\n{\n    title: \"Tools\",\n    links: [\n    {\n        title: \"Substrate Portal\",\n        link: \"https://polkadot.js.org/apps/?rpc=wss%3A%2F%2F\" + network.value + \".rpc.robonomics.network%2F#/explorer\",\n    },\n    {\n        title: \"Subscan\",\n        link: \"https://robonomics.subscan.io/\",\n    },\n    {\n        title: \"Polkassembly\",\n        link: \"https://robonomics.polkassembly.io/\",\n    }\n    ]\n},\n\n{\n    title: \"Help\",\n    links: [\n    {\n        title: \"GitHub\",\n        link: \"https://github.com/airalab/robonomics.app\",\n    },\n    {\n        title: \"Wiki\",\n        link: \"https://wiki.robonomics.network/\",\n    },\n    {\n        title: \"Academy\",\n        link: \"https://robonomics.academy/\",\n    },\n    {\n        title: \"Contacts\",\n        link: \"https://robonomics.network/contact/\",\n    },\n    {\n        title: \"Issues\",\n        link: \"https://github.com/airalab/robonomics.app/issues\",\n    },\n    ]\n}\n];\n\nconst repoversion = ref(null);\n\nonMounted(async () => {\n    try {\n      const response = await fetch('https://api.github.com/repos/airalab/robonomics.app/releases/latest');\n      const data = await response.json();\n      repoversion.value = data;\n    } catch (error) {\n      repoversion.value = 'Ошибка загрузки';\n      console.error('Ошибка получения версии:', error);\n    }\n});\n\n</script>\n\n<style scoped>\n    .footer-section {\n        border-top: 1px dotted var(--robo-color-text);\n        padding-top: var(--robo-layout-padding);\n        margin-top: var(--robo-layout-padding);\n    }\n    \n    footer {\n        margin-top: calc(var(--robo-space) * 5);\n        padding: var(--robo-layout-padding);\n    }\n\n    footer nav {\n        display: flex;\n        gap: calc(var(--robo-layout-padding) * 2);\n        justify-content: center;\n    }\n\n    footer nav ul:before {\n        content: attr(data-label);\n        display: block;\n        font-weight: bold;\n        margin-bottom: var(--robo-space);\n    }\n\n    @media screen and (width < 700px) {\n        footer nav {\n            font-size: 80%;\n            gap: var(--robo-layout-padding);\n        }\n    }\n\n    @media screen and (width < 500px) {\n        footer nav {\n            flex-direction: column;\n        }\n    }\n\n    #footer-label {\n        display: inline-flex;\n        width: fit-content;\n        padding-top: var(--robo-space);\n        padding-bottom: var(--robo-space);\n    }\n</style>","import script from \"./Footer.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Footer.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Footer.vue?vue&type=style&index=0&id=21672fb0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-21672fb0\"]])\n\nexport default __exports__","<template>\n  <robo-layout>\n    <dapp-header :title=\"props.pagetitle\" />\n    <slot />\n    <dapp-footer />\n  </robo-layout>\n</template>\n\n<script setup>\n\nimport DappHeader from '@/components/Header';\nimport DappFooter from '@/components/Footer';\nimport { useSubscription } from \"@/hooks/useSubscription\";\nimport { defineProps, watch } from 'vue';\nimport { useStore } from \"vuex\";\n\nconst props = defineProps({\n  pagetitle: {\n    type: String\n  }\n});\n\nconst store = useStore();\nconst subscription = useSubscription();\n\n watch(\n  () => store.state.robonomicsUIvue.rws.active,\n  (v) => {\n    subscription.owner.value = v;\n  },\n  { immediate: true }\n);\n\nwatch(\n  [subscription.owner, subscription.validUntil],\n  () => {\n    store.commit(\"rws/setExpiredate\", subscription.validUntil);\n  },\n  { immediate: true }\n);\n\nwatch(\n  subscription.devices,\n  (devices) => {\n    store.commit(\"rws/setUsers\", devices);\n  },\n  { immediate: true }\n);\n</script>\n","import script from \"./Main.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Main.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=547283f0\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","// import { Buffer } from \"buffer\";\nimport axios from \"axios\";\nimport { create } from \"ipfs-http-client\";\nimport { ref } from \"vue\";\n\nexport class IpfsApiClient {\n  constructor(endpoint) {\n    this.endpoint = endpoint;\n    this.authHeader = null;\n    this.robonomics = null;\n    this._create();\n  }\n  _create() {\n    this.client = create({\n      ...this._options()\n    });\n  }\n  _options() {\n    const options = {\n      url: this.endpoint,\n      headers: {}\n    };\n    if (this.authHeader) {\n      options.headers.authorization = `Basic ${this.authHeader}`;\n    }\n    if (this.robonomics) {\n      options.headers.robonomics = this.robonomics;\n    }\n    return options;\n  }\n  isAuth() {\n    return !!this.authHeader && !!this.robonomics;\n  }\n  auth(owner, address, signature) {\n    const authHeaderRaw = `sub-${address}:${signature}`;\n    this.authHeader = Buffer.from(authHeaderRaw).toString(\"base64\");\n    this.robonomics = owner;\n    this._create();\n  }\n  authClear() {\n    this.authHeader = null;\n    this.robonomics = null;\n    this._create();\n  }\n  async ls(cid) {\n    const files = [];\n    for await (const file of this.client.ls(cid)) {\n      if (file.type === \"file\") {\n        files.push(file);\n      }\n    }\n    return files;\n  }\n  async cat(cid) {\n    const cat = async (cid) => {\n      const decoder = new TextDecoder();\n      let content = \"\";\n      for await (const chunk of this.client.cat(cid)) {\n        content += decoder.decode(chunk, {\n          stream: true\n        });\n      }\n      return content;\n    };\n    return await cat(cid);\n  }\n  async add(data) {\n    return await this.client.add(data);\n  }\n  async catViaGateway(gateway, cid, attempts = 5) {\n    for (let index = 1; index <= attempts; index++) {\n      try {\n        return (await axios.get(`${gateway}${cid}`)).data;\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    throw new Error(\"File not available\");\n  }\n  async catViaGatewaysRotation(gateways, cid) {\n    for (const gateway of gateways) {\n      try {\n        return {\n          gateway,\n          result: await this.catViaGateway(gateway, cid)\n        };\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n    throw new Error(\"File not available\");\n  }\n  async catViaGateways(gateways, cid) {\n    const controller = new AbortController();\n    const readFile = async (gateway, cid) => {\n      const response = await axios.get(`${gateway}${cid}`, {\n        signal: controller.signal\n      });\n      controller.abort();\n      return response.data;\n    };\n    const requests = [];\n    for (const gateway of gateways) {\n      requests.push(readFile(gateway, cid));\n    }\n    try {\n      const result = await Promise.any(\n        requests.map((p, i) => p.then((v) => [v, i]))\n      );\n      return {\n        gateway: gateways[result[1]],\n        result: result[0]\n      };\n    } catch (_) {\n      throw new Error(\"File not available\");\n    }\n  }\n}\n\nexport default {\n  install: (app, params) => {\n    const instance = ref();\n    app.provide(\"IpfsProvider\", {\n      instance,\n      gateways: params.gateways || []\n    });\n    instance.value = new IpfsApiClient(params.api.gateway);\n  }\n};\n","import { u8aConcat, u8aToU8a } from \"@polkadot/util\";\nimport {\n  ed25519PairFromSeed,\n  encodeAddress,\n  mnemonicToMiniSecret,\n  randomAsU8a\n} from \"@polkadot/util-crypto\";\nimport ed2curve from \"ed2curve\";\nimport nacl from \"tweetnacl\";\n\nfunction naclOpen(sealed, nonce, senderBoxPublic, receiverBoxSecret) {\n  return (\n    nacl.box.open(sealed, nonce, senderBoxPublic, receiverBoxSecret) || null\n  );\n}\nfunction naclSeal(\n  message,\n  senderBoxSecret,\n  receiverBoxPublic,\n  nonce = randomAsU8a(24)\n) {\n  return {\n    nonce,\n    sealed: nacl.box(message, nonce, receiverBoxPublic, senderBoxSecret)\n  };\n}\nfunction convertSecretKeyToCurve25519(secretKey) {\n  return ed2curve.convertSecretKey(secretKey);\n}\nfunction convertPublicKeyToCurve25519(publicKey) {\n  return ed2curve.convertPublicKey(publicKey);\n}\nexport function decryptMessage(\n  encryptedMessageWithNonce,\n  senderPublicKey,\n  secretKey\n) {\n  const messageU8a = u8aToU8a(encryptedMessageWithNonce);\n  return naclOpen(\n    messageU8a.slice(24, messageU8a.length),\n    messageU8a.slice(0, 24),\n    convertPublicKeyToCurve25519(u8aToU8a(senderPublicKey)),\n    convertSecretKeyToCurve25519(secretKey)\n  );\n}\nexport function encryptMessage(\n  message,\n  recipientPublicKey,\n  secretKey,\n  nonceIn\n) {\n  const { nonce, sealed } = naclSeal(\n    u8aToU8a(message),\n    convertSecretKeyToCurve25519(secretKey),\n    convertPublicKeyToCurve25519(u8aToU8a(recipientPublicKey)),\n    nonceIn\n  );\n  return u8aConcat(nonce, sealed);\n}\nexport function createPair(mnemonic) {\n  const seed = mnemonicToMiniSecret(mnemonic);\n  const pair = ed25519PairFromSeed(seed);\n  return pair;\n}\nexport function encryptor(pair) {\n  return {\n    pair,\n    address: encodeAddress(pair.publicKey, 32),\n    encodeAddress: (ss58Format = 32) => {\n      return encodeAddress(pair.publicKey, ss58Format);\n    },\n    decryptMessage: (encryptedMessageWithNonce, senderPublicKey) => {\n      return decryptMessage(\n        encryptedMessageWithNonce,\n        senderPublicKey,\n        pair.secretKey\n      );\n    },\n    encryptMessage: (message, recipientPublicKey, nonce) => {\n      return encryptMessage(message, recipientPublicKey, pair.secretKey, nonce);\n    }\n  };\n}\n// export function encryptor(mnemonic) {\n//   const pair = createPair(mnemonic);\n//   return {\n//     pair,\n//     address: encodeAddress(pair.publicKey, 32),\n//     encodeAddress: (ss58Format = 32) => {\n//       return encodeAddress(pair.publicKey, ss58Format);\n//     },\n//     decryptMessage: (encryptedMessageWithNonce, senderPublicKey) => {\n//       return decryptMessage(\n//         encryptedMessageWithNonce,\n//         senderPublicKey,\n//         pair.secretKey\n//       );\n//     },\n//     encryptMessage: (message, recipientPublicKey, nonce) => {\n//       return encryptMessage(message, recipientPublicKey, pair.secretKey, nonce);\n//     }\n//   };\n// }\n","import { encryptor } from \"@/utils/encryptor\";\nimport { decodePair } from \"@polkadot/keyring/pair/decode\";\nimport { u8aToHex, u8aWrapBytes } from \"@polkadot/util\";\nimport { base64Decode } from \"@polkadot/util-crypto\";\nimport { AccountManager } from \"robonomics-interface\";\n\nexport default class AccountManagerDapp extends AccountManager {\n  constructor(keyring, config = {}, api = null) {\n    super(keyring, api);\n    this.extension = null;\n    keyring.loadAll(config);\n    this.setReady(true);\n  }\n\n  async beforeSetSender(address, { type, extension }) {\n    // if (this.account && !this.account.meta.isInjected) {\n    //   // this.keyring.forgetAccount(this.account.address);\n    //   this.account.lock();\n    // }\n    this.extension = extension;\n    try {\n      this.keyring.getPair(address);\n      // eslint-disable-next-line no-empty\n    } catch (_) {\n      this.keyring.loadInjected(address, {}, type);\n    }\n  }\n\n  async afterSetSender() {\n    await super.afterSetSender();\n    if (this.account.meta.isInjected && this.extension) {\n      this.api.setSigner(this.extension.signer);\n      this.account.signMsg = async (data) => {\n        return (\n          await this.extension.signer.signRaw({\n            address: this.account.address,\n            data: u8aToHex(u8aWrapBytes(data)),\n            type: \"bytes\"\n          })\n        ).signature;\n      };\n    }\n  }\n\n  async addUri(suri, meta = {}, type = \"ed25519\") {\n    const pair = this.keyring.keyring.addFromUri(suri, meta, type);\n    return await this.setSender(pair.address, {\n      type: type\n    });\n  }\n\n  async addUriPassword(\n    suri,\n    password = undefined,\n    meta = {},\n    type = \"ed25519\"\n  ) {\n    const { pair } = this.keyring.addUri(suri, password, meta, type);\n    return await this.setSender(pair.address, {\n      type: type\n    });\n  }\n\n  async addJsonPassword(json, password) {\n    const pair = this.keyring.createFromJson(json);\n    this.keyring.addPair(pair, password);\n    return await this.setSender(pair.address, {\n      type: pair.type\n    });\n  }\n\n  async addPair(pairKey) {\n    const pair = this.keyring.keyring.addFromPair(pairKey);\n    return await this.setSender(pair.address, {\n      type: pair.type\n    });\n  }\n\n  encryptor(password = null) {\n    if (!this.account.meta.isInjected && this.account.type === \"ed25519\") {\n      const json = this.account.toJson(password);\n      const decoded = decodePair(\n        password,\n        base64Decode(json.encoded),\n        json.encoding.type\n      );\n      return encryptor(decoded);\n    }\n  }\n}\n","import configApp from \"@/config\";\nimport keyring from \"@polkadot/ui-keyring\";\nimport { Robonomics } from \"robonomics-interface\";\nimport { ref, shallowRef } from \"vue\";\nimport AccountManager from \"./robonomicsAccountManager\";\n\nexport default {\n  install: async (app, params = {}) => {\n    const isReady = ref(false);\n    const instance = shallowRef();\n    const accountManager = new AccountManager(keyring);\n    app.provide(\"RobonomicsProvider\", {\n      isReady,\n      instance,\n      accountManager\n    });\n\n    const urlParams = new URLSearchParams(window.location.search);\n    let endpoint = urlParams.get(\"rpc\");\n\n    if (!endpoint) {\n      endpoint =\n        localStorage.getItem(\"rpc-parachain\") || configApp.default_rpc_endpoint;\n    }\n    localStorage.setItem(\"rpc-parachain\", endpoint);\n    const config = {\n      // endpoint: \"ws://127.0.0.1:9944\"\n      // endpoint: \"wss://kusama.rpc.robonomics.network/\"\n      endpoint\n    };\n\n    instance.value = await Robonomics.createInstance({ ...config, ...params });\n    instance.value.setAccountManager(accountManager);\n    isReady.value = true;\n  }\n};\n","import { ethers } from \"ethers\";\nimport { reactive } from \"vue\";\n\nconst CodeError = {\n  PROVIDER: 4,\n  NETWORK: 1,\n  ACCOUNT: 2\n};\n\nclass Web3Error extends Error {\n  constructor(code = null, ...params) {\n    super(...params);\n    this.code = code;\n  }\n}\n\nclass Connector {\n  async activate() {}\n  async getProvider() {}\n  async getAccount() {}\n  async getNetworkId() {}\n}\n\nclass Extension extends Connector {\n  constructor(provider, update) {\n    super();\n    this.provider = provider;\n    this.name = \"extension\";\n    this.account = null;\n    this.networkId = null;\n    this.emit = update;\n  }\n  handleChainChanged(networkId) {\n    this.networkId = Number(networkId);\n    this.emit(\"chainChanged\", { networkId: this.networkId });\n  }\n  async getProvider() {\n    this.provider.on(\"accountsChanged\", (accounts) => {\n      this.handleAccountsChanged(accounts);\n    });\n    this.provider.on(\"chainChanged\", (networkId) => {\n      this.handleChainChanged(networkId);\n    });\n    return this.provider;\n  }\n  async getNetworkId() {\n    this.networkId = Number(\n      await this.provider.request({ method: \"eth_chainId\" })\n    );\n    return this.networkId;\n  }\n  handleAccountsChanged(accounts) {\n    if (accounts.length > 0) {\n      this.account = accounts[0];\n    } else {\n      this.account = null;\n    }\n    this.emit(\"accountsChanged\", { account: this.account });\n  }\n}\n\nclass Provider {\n  constructor({ networks = [] } = {}) {\n    this.provider = null;\n    this.connector = null;\n    this.signer = null;\n    this.networks = networks;\n\n    this.state = reactive({\n      isReady: false,\n      error: null,\n      account: null,\n      networkId: null,\n      block: null\n    });\n  }\n  async setConnector(connector) {\n    if (connector.name === \"extension\") {\n      this.provider = new ethers.BrowserProvider(await connector.getProvider());\n    } else {\n      this.provider = new ethers.WebSocketProvider(\n        await connector.getProvider()\n      );\n    }\n    this.connector = connector;\n    this.setSigner();\n  }\n  async setSigner() {\n    if (this.connector && this.connector.name === \"extension\") {\n      try {\n        this.signer = await this.provider.getSigner();\n        this.state.account = this.signer.address;\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n  on(name, data) {\n    // if (name === \"accountsChanged\") {\n    //   this.state.account = data.account;\n    // }\n    if (name === \"chainChanged\") {\n      this.state.networkId = data.networkId;\n    }\n    if (!this.networks.includes(this.state.networkId)) {\n      this.state.error = new Web3Error(\n        CodeError.NETWORK,\n        `sssPlease, switch to network id ${this.networks}`\n      );\n    } else {\n      this.state.error = null;\n    }\n  }\n  async setProvider(provider) {\n    try {\n      await this.setConnector(\n        new Extension(provider, (name, data) => this.on(name, data))\n      );\n    } catch (error) {\n      console.warn(error.message);\n    }\n    try {\n      if (this.connector) {\n        this.state.networkId = await this.connector.getNetworkId();\n        if (!this.networks.includes(this.state.networkId)) {\n          this.state.error = new Web3Error(\n            CodeError.NETWORK,\n            `Please, switch to network id ${this.networks}`\n          );\n        }\n      }\n    } catch (error) {\n      this.state.error = error;\n    }\n\n    if (this.provider && this.state.error === null) {\n      this.state.isReady = true;\n      this.provider.on(\"block\", async (blockNumber) => {\n        this.state.block = await this.provider.getBlock(blockNumber);\n      });\n      this.state.block = await this.provider.getBlock(\"latest\");\n    }\n  }\n}\n\nexport const $web3 = new Provider({ networks: [11155111] });\n\nexport default {\n  install: async (app) => {\n    app.provide(\"EthereumProvider\", {\n      web3: $web3\n    });\n  }\n};\n","import script from \"./Altruist.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Altruist.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./Hikikomori.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Hikikomori.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./Riscv.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Riscv.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <div>balance: {{ balance }} NFT</div>\n    <nft-token\n      v-for=\"token in tokens\"\n      :key=\"token.tokenId\"\n      :token=\"token\"\n      @activate=\"loadTokens\"\n      class=\"card\"\n    />\n  </div>\n</template>\n\n<script>\nimport { address } from \"@/config\";\nimport { $web3 } from \"@/plugins/web3\";\nimport axios from \"axios\";\nimport { ethers } from \"ethers\";\nimport { ref, watch } from \"vue\";\nimport nft_abi from \"./abi/NFT.json\";\nimport NftToken from \"./NftToken.vue\";\n\nexport default {\n  components: { NftToken },\n  setup() {\n    const balance = ref(null);\n    const tokens = ref([]);\n\n    // NFT\n    const nftContract = new ethers.Contract(\n      address.nft,\n      nft_abi,\n      $web3.provider\n    );\n\n    (async () => {\n      try {\n        console.log('$web3.state.account', $web3.state.account)\n        balance.value = await nftContract.balanceOf($web3.state.account);\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n\n    watch(\n      () => $web3.state.block,\n      async () => {\n        try {\n          console.log('$web3.state.account', $web3.state.account)\n          balance.value = await nftContract.balanceOf($web3.state.account);\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    );\n\n    const loadTokens = async () => {\n      if (!balance.value) {\n        return;\n      }\n      const ids = [];\n      for (let index = 0; index < balance.value; index++) {\n        try {\n          const tokenId = await nftContract.tokenOfOwnerByIndex(\n            $web3.state.account,\n            index\n          );\n          const uri = await nftContract.tokenURI(tokenId);\n          const ipfsHash = uri.split(\"ipfs://\").pop();\n\n          const res = await axios.get(`https://ipfs.io/ipfs/${ipfsHash}`);\n\n          ids.push({\n            activated: await nftContract.activatedOf(tokenId),\n            tokenId: tokenId.toString(),\n            name: `${res.data.name} #${tokenId.toString()}`,\n            image: res.data.image.split(\"ipfs://\").pop()\n          });\n        } catch (error) {\n          console.log(error);\n        }\n        ``;\n      }\n      tokens.value = ids;\n    };\n\n    watch(balance, loadTokens);\n\n    return {\n      balance,\n      tokens,\n      loadTokens\n    };\n  }\n};\n</script>\n","<template>\n  <div>\n    {{ token.name }}<br />\n    <img :src=\"`https://ipfs.io/ipfs/${token.image}`\" style=\"width: 200px\" />\n    <br />\n    <btn-send\n      v-if=\"!token.activated\"\n      @click=\"(wait) => activate(wait, token.tokenId)\"\n    >\n      Activate\n    </btn-send>\n    <span v-else>activated</span>\n\n    <free-minimum :token=\"token.tokenId\" />\n  </div>\n</template>\n\n<script>\nimport { address } from \"@/config\";\nimport { $web3 } from \"@/plugins/web3\";\nimport { ethers } from \"ethers\";\nimport nft_abi from \"./abi/NFT.json\";\nimport BtnSend from \"./BtnSend.vue\";\nimport FreeMinimum from \"./FreeMinimum.vue\";\n\nexport default {\n  props: [\"token\"],\n  emits: [\"activate\"],\n  components: { BtnSend, FreeMinimum },\n  setup(_, { emit }) {\n    const activate = async (wait, tokenId) => {\n      const nftContract = new ethers.Contract(\n        address.nft,\n        nft_abi,\n        $web3.provider\n      );\n\n      try {\n        const tx = await nftContract.connect($web3.signer).activate(tokenId);\n        await wait(tx);\n        emit(\"activate\", tokenId);\n      } catch (error) {\n        if (error.code === \"CALL_EXCEPTION\" && error.data) {\n          await wait(null, nftContract.interface.parseError(error.data).name);\n        } else {\n          await wait(null, error);\n        }\n      }\n    };\n\n    return {\n      activate\n    };\n  }\n};\n</script>\n","<template>\n  <button\n    @click=\"send\"\n    :disabled=\"status === STATUS.PRE_PROCESS || status === STATUS.WAIT_TX\"\n  >\n    <slot />\n  </button>\n  <div v-if=\"status === STATUS.ERROR\" class=\"error\">{{ error }}</div>\n  <div v-if=\"status === STATUS.READY\" class=\"success\">✓</div>\n</template>\n\n<script>\nimport { ref } from \"vue\";\n\nconst STATUS = {\n  NEW: 1,\n  PRE_PROCESS: 2,\n  WAIT_TX: 3,\n  READY: 4,\n  ERROR: 5\n};\n\nexport default {\n  emits: [\"click\"],\n  setup(_, { emit }) {\n    const status = ref(STATUS.NEW);\n    const error = ref(null);\n\n    const send = async () => {\n      status.value = STATUS.PRE_PROCESS;\n      error.value = null;\n      emit(\"click\", async (tx, e, last = true) => {\n        status.value = STATUS.WAIT_TX;\n        try {\n          if (tx) {\n            const receipt = await tx.wait();\n            console.log(receipt.hash);\n            if (last) {\n              status.value = STATUS.READY;\n            }\n          } else if (e) {\n            if (e.code !== \"ACTION_REJECTED\") {\n              status.value = STATUS.ERROR;\n              error.value = e.code || e;\n            } else {\n              status.value = STATUS.NEW;\n            }\n          }\n        } catch (errorCatch) {\n          status.value = STATUS.ERROR;\n          error.value = errorCatch.message;\n        }\n      });\n    };\n\n    return {\n      STATUS,\n      status,\n      error,\n      send\n    };\n  }\n};\n</script>\n","import { render } from \"./BtnSend.vue?vue&type=template&id=5d3bb413\"\nimport script from \"./BtnSend.vue?vue&type=script&lang=js\"\nexport * from \"./BtnSend.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div>\n    <div v-if=\"received\">free minimum received</div>\n    <div v-else>\n      <div v-if=\"address\">\n        {{ address }}\n        <button\n          @click=\"requestFreeMinimum\"\n          :disabled=\"!avaible || (status !== 1 && status !== 4)\"\n        >\n          Get free minimum\n        </button>\n        <div v-if=\"status === 3\">request sent</div>\n        {{ error }}\n      </div>\n      <div v-else>Not found parachain account</div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { $web3 } from \"@/plugins/web3\";\nimport { computed, ref, watch } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { checkAvailible, getFreeMinimum } from \"./apiNftOracle\";\n\nexport default {\n  props: [\"token\"],\n  setup(props) {\n    const account = ref();\n\n    const store = useStore();\n\n    watch(\n      () => store.state.robonomicsUIvue.polkadot.address,\n      (address) => {\n        try {\n          account.value = store.state.robonomicsUIvue.polkadot.accounts.find(\n            (item) => item.address === address\n          );\n        } catch (e) { console.error(e); }\n      },\n      { immediate: true }\n    );\n\n    const address = computed(() => account.value?.address);\n\n    const error = ref();\n\n    const avaible = ref(false);\n    const check = async () => {\n      const r = await checkAvailible(props.token, $web3.state.account);\n      avaible.value = r[0];\n      error.value = r[1];\n    };\n    check();\n    const timerId = setInterval(check, 10000);\n\n    const received = computed(() => {\n      if (\n        !avaible.value &&\n        error.value === \"Free minimum for this token has already been received\"\n      ) {\n        return true;\n      }\n      return false;\n    });\n    watch(\n      received,\n      (received) => {\n        if (received) {\n          status.value = 1;\n          clearInterval(timerId);\n        }\n      },\n      { immediate: true }\n    );\n\n    const status = ref(1);\n    const requestFreeMinimum = async () => {\n      status.value = 2;\n      const r = await getFreeMinimum(\n        props.token,\n        $web3.state.account,\n        address.value\n      );\n      if (r[0]) {\n        status.value = 3;\n      } else {\n        status.value = 4;\n      }\n      error.value = r[1];\n    };\n\n    return {\n      address,\n      received,\n      avaible,\n      error,\n      status,\n      requestFreeMinimum\n    };\n  }\n};\n</script>\n","import configApp from \"@/config\";\nimport { $web3 } from \"@/plugins/web3\";\nimport axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: `${configApp.nft_oracle_endpoint}api`\n});\n\nexport const checkAvailible = async (token, accountEthereum) => {\n  try {\n    const result = await api.post(\"/check\", {\n      nft: token,\n      address: accountEthereum\n    });\n    if (result.data.result) {\n      return [result.data.result, result.data.error];\n    } else {\n      return [false, result.data.error];\n    }\n  } catch (error) {\n    return [false, error.message];\n  }\n};\n\nexport const getFreeMinimum = async (\n  token,\n  accountEthereum,\n  accauntParachain\n) => {\n  try {\n    const msg = JSON.stringify({\n      nft: token,\n      address: accountEthereum,\n      for: accauntParachain\n    });\n    const signature = await $web3.signer.signMessage(msg);\n\n    const result = await api.post(\"/verify\", {\n      signature,\n      nft: token,\n      address: accountEthereum,\n      for: accauntParachain\n    });\n    if (result.data.result) {\n      return [result.data.result, result.data.error];\n    } else {\n      return [false, result.data.error];\n    }\n  } catch (error) {\n    return [false, error.message];\n  }\n};\n","import { render } from \"./FreeMinimum.vue?vue&type=template&id=329595d0\"\nimport script from \"./FreeMinimum.vue?vue&type=script&lang=js\"\nexport * from \"./FreeMinimum.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./NftToken.vue?vue&type=template&id=48229e54\"\nimport script from \"./NftToken.vue?vue&type=script&lang=js\"\nexport * from \"./NftToken.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./NftInfo.vue?vue&type=template&id=4b2d5a1a\"\nimport script from \"./NftInfo.vue?vue&type=script&lang=js\"\nexport * from \"./NftInfo.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <robo-layout-section>\n    <robo-text title=\"1\">Season pass</robo-text>\n    \n    <hr />\n    {{ store.state.robonomicsUIvue.ethereum.activeAccount }}\n    <hr/>\n    {{store.state.robonomicsUIvue.ethereum.activeProviderRdns}}\n    <div>\n      <div v-if=\"$web3.state.isReady\">\n        <nft-info v-if=\"$web3.state.account\" />\n        <div v-else>Not found account</div>\n      </div>\n      <div v-else>...</div>\n      <div v-if=\"$web3.state.error\">\n        {{ $web3.state.error }}\n      </div>\n    </div>\n  </robo-layout-section>\n</template>\n\n<script setup>\nimport NftInfo from \"@/components/web3/NftInfo.vue\";\nimport { $web3 } from \"@/plugins/web3\";\nimport { watch, onMounted } from \"vue\";\nimport { useStore } from \"vuex\";\n\nconst store = useStore();\n\nconst providers = [];\nconst handler = (event) => providers.push(event.detail);\n\nwatch(\n  () => store.state.robonomicsUIvue.ethereum.activeProviderRdns,\n  async (value) => {\n    const index = providers.findIndex((item) => {\n      if (item.info.rdns === value) {\n        return true;\n      }\n      return false;\n    });\n    if (index >= 0) {\n      try {\n        await $web3.setProvider(providers[index].provider);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n);\n\nwatch(\n  () => store.state.robonomicsUIvue.ethereum.activeAccount,\n  async () => {\n    await $web3.setSigner();\n  }\n);\n\nwindow.addEventListener(\"eip6963:announceProvider\", handler);\nwindow.dispatchEvent(new CustomEvent(\"eip6963:requestProvider\"));\n\nonMounted(async () => {\n  const index = providers.findIndex((item) => {\n      if (item.info.rdns === store.state.robonomicsUIvue.ethereum.activeProviderRdns) {\n        return true;\n      }\n      return false;\n    });\n    if (index >= 0) {\n      try {\n        await $web3.setProvider(providers[index].provider);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    await $web3.setSigner();\n})\n</script>\n","import script from \"./Season-pass-2.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Season-pass-2.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","const chains =\n    {\n       1: {\n        name: 'Ethereum Mainnet'\n       },\n       2: {\n        name: 'Expanse Network'\n       },\n       11155111: {\n        name: 'Sepolia'\n       }\n    }\n\nexport default chains","<template>\n  <robo-layout-section>\n\n    <robo-card allowExpand class=\"seasonpass\">\n        <robo-text title=\"3\" offset=\"x0\">Your season pass 2024-2025</robo-text>\n        <div class=\"seasonpass-content\">\n            <div class=\"seasonpass-content-inside\">\n                <div class=\"seasonpass-msg\" v-if=\"status !== 'START'\">\n                    <template v-if=\"status === 'NO_ETH_EXTENSION'\">Connect or install Ethereum extension in your browser</template>\n                    <template v-if=\"status === 'WRONG_ETH_NETWORK'\">Please, switch to {{chains[workingchain].name}}</template>\n                    <template v-if=\"status === 'NO_WALLET_PERMISSION'\">Please, check permissions in the connected extension</template>\n                    <template v-if=\"status === 'NO_ETH_ACCOUNT'\">No Ethereum account found: check your extension</template>\n                    <template v-if=\"status === 'NFT_NOT_FOUND' || status === 'TOKENS_NOT_FOUND'\">No Season Pass NFT accosiated with this account</template>\n                </div>\n                <robo-loader v-if=\"status === 'NFT_STARTED_GETTING'\" size=\"3\" />\n\n                <div class=\"tokens\" :class=\"'tokens-show-' + curentslide\" v-if=\"status === 'TOKENS_FOUND' && tokens\">\n                    <div class=\"token\" v-for=\"token in tokens\" :key=\"token.tokenId\">\n                        <img :src=\"`https://ipfs.io/ipfs/${token?.image}`\" />\n                        <robo-text lines=\"dotted\" size=\"small\">\n                            <robo-grid type=\"flex\" offset=\"x0\" gap=\"x025\" galign=\"start\" valign=\"center\">\n                                {{token?.name}}\n                            </robo-grid>\n                            <robo-grid type=\"flex\" offset=\"x0\" gap=\"x025\" galign=\"start\" valign=\"center\">\n                                {{token?.tokenId}}\n                            </robo-grid>\n                            <robo-grid type=\"flex\" offset=\"x0\" gap=\"x025\" galign=\"start\" valign=\"center\">\n                                {{token?.status}}\n                            </robo-grid>\n                            <robo-grid type=\"flex\" offset=\"x0\" gap=\"x025\" galign=\"start\" valign=\"center\">\n                                <template v-if=\"token.activated\">Activated</template>\n                                <template v-else>Not activated</template>\n                            </robo-grid>\n                        </robo-text>\n                        <robo-section offset=\"x1\">\n                            <robo-button v-if=\"token.tokenId && !token.activated\" @click.prevent=\"activateToken(token.tokenId)\" size=\"small\">Activate</robo-button>\n                        </robo-section>\n                    </div>\n                </div>\n                <div class=\"tokens-switch\" :class=\"'tokens-switch-showed-' + curentslide\" v-if=\"status === 'TOKENS_FOUND'\">\n                    <robo-button v-for=\"(token, i) in tokens\" :key=\"token.tokenId\" clean @click.prevent=\"setslide(i + 1)\">{{i + 1}}</robo-button>\n                </div>\n            </div>\n            <div class=\"seasonpass-monkey\" aria-hidden=\"true\" v-if=\"status !== 'TOKENS_FOUND'\">\n                <img src=\"images/season-pass-24-25-monkey.webp\" aria-hidden=\"true\"/>\n            </div>\n        </div>\n    </robo-card>\n\n    <!-- <details>\n        <summary>tech</summary>\n        <div v-for=\"token in tokens\" :key=\"token.tokenId\">\n            <img :src=\"`https://ipfs.io/ipfs/${token.image}`\" style=\"width: 200px\" />\n            <p>{{token.name}}</p>\n            <p>activated: {{token.activated}}, {{token.tokenId}}</p>\n            <p>status: {{token?.status}}</p>\n            <robo-button v-if=\"token.tokenId && !token.activated\" @click.prevent=\"activateToken(token.tokenId)\">Activate</robo-button>\n        </div>\n\n        {{account}}\n        <hr/>\n        {{provider?.info?.name}}\n        <hr/>\n        {{balance}}\n        <hr/>\n        {{status}}\n    </details> -->\n\n  </robo-layout-section>\n</template>\n\n<script setup>\nimport { reactive, computed, onMounted, ref, watch } from \"vue\";\nimport { useStore } from \"vuex\";\nconst store = useStore();\n\nimport nft_abi from \"../../components/web3/abi/NFT.json\";\nimport { ethers } from \"ethers\";\nimport { address } from \"@/config\";\n\nimport chains from \"../../eth_chains\";\n\n/* + get providers */\nimport { createStore } from 'mipd';\nconst mipdstore = createStore();\n\nconst state = reactive({ \n    providers: mipdstore.getProviders()\n});\n\nmipdstore.subscribe(providers => {\n    console.log('Providers updated:', providers);\n    state.providers = providers;\n});\n/* - get providers */\n\nconst account = computed(() =>{\n    return store.state.robonomicsUIvue.ethereum.activeAccount;\n});\n\nconst provider = computed(() =>{\n    return state.providers.find(i => i.info.rdns === store.state.robonomicsUIvue.ethereum.activeProviderRdns)\n});\n\nconst isConnected = () => {\n    if(provider?.value) {\n        return provider.value?.provider?._state?.isConnected || provider.value?.provider?.isConnected\n    } else {\n        return false;\n    }\n}\n\nconst workingchain = 11155111;\nconst balance = ref(null);\nconst tokens = ref([]);\nlet signer;\nlet contract;\nlet providerethers = null;\nconst status = ref('START');\nconst curentslide = ref(1);\n\nconst setslide = (s) => {\n    curentslide.value = s\n}\n\nconst getEthersProviderObj = () => {\n    try {\n        providerethers = new ethers.BrowserProvider(provider.value.provider);\n    } catch (error) { console.log(error); }\n}\n\nconst getNFT = async (blockupdate = false) => {\n\n    if(!blockupdate) {\n        status.value = '';\n        tokens.value = [];\n\n        if(!provider.value || !isConnected()) {\n            status.value = 'NO_ETH_EXTENSION';\n            return;\n        }\n    }\n\n    try {\n\n        if(!blockupdate) {\n            const perms = await provider.value.provider.request({method: 'wallet_getPermissions', params: [{ eth_accounts: {} }]});\n            if(!perms || !perms.some(i => i.parentCapability === 'eth_accounts')) {\n                status.value = 'NO_WALLET_PERMISSION';\n                return;\n            }\n\n            const accounts = await provider.value.provider.request({method: 'eth_requestAccounts', params: [{ eth_accounts: {} }]});\n            if(!accounts || accounts?.length < 1) {\n                status.value = 'NO_ETH_ACCOUNT';\n                return;\n            }\n            \n            const chain = await provider.value.provider.request({method: 'eth_chainId', params: [{ eth_accounts: {} }]});\n            if(parseInt(chain) !== workingchain) {\n                status.value = 'WRONG_ETH_NETWORK';\n                return;\n            }\n\n            status.value = 'NFT_STARTED_GETTING';\n\n            getEthersProviderObj();\n            signer = await providerethers.getSigner();\n            contract = new ethers.Contract(address.nft, nft_abi, signer);\n        }\n\n        contract.balanceOf(signer.address)\n            .then(async (r) => {\n                if(blockupdate) {\n                    if(balance.value === parseFloat(r)){\n                        return;\n                    }\n                }\n                balance.value = parseFloat(r);\n\n                if(!balance.value || balance.value < 1) {\n                    status.value = 'NFT_NOT_FOUND';\n                } else {\n                    await loadTokens();\n                }\n\n            })\n            .catch((e) => {\n                console.log(e);\n            });\n    } catch (error) {\n        status.value = 'NFT_NOT_FOUND';\n        console.log(error);\n    }\n}\n\nconst loadTokens = async () => {\n\n    const ids = [];\n    for (let index = 0; index < balance.value; index++) {\n        try {\n            const tokenId = await contract.tokenOfOwnerByIndex(\n                signer.address,\n                index\n            );\n\n            const uri = await contract.tokenURI(tokenId);\n            const ipfsHash = uri.split(\"ipfs://\").pop();\n            const data = await fetch(`https://ipfs.io/ipfs/${ipfsHash}`);\n            const res = await data.json();\n\n            ids.push({\n                activated: await contract.activatedOf(tokenId),\n                tokenId: tokenId.toString(),\n                name: `${res.name} #${tokenId.toString()}`,\n                image: res.image.split(\"ipfs://\").pop(),\n                status: 'INIT'\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    tokens.value = ids;\n\n    if(tokens.value?.length > 0) {\n        status.value = 'TOKENS_FOUND';\n    } else {\n        status.value = 'TOKENS_NOT_FOUND';\n    }\n}\n\nconst activateToken = async (tokenId) => {\n    let current = 0;\n\n    if(tokens.value) {\n        current = tokens.value.findIndex(i => i.tokenId === tokenId);\n    }\n\n    try {\n        tokens.value[current].status = 'ACTIVATION_STARTED';\n\n        const tx = await contract.connect(signer).activate(tokenId);\n        console.log('tx', tx);\n        await loadTokens(); // for updating status\n        tokens.value[current].status = 'ACTIVATION_ENDED';\n    } catch (error) {\n        console.error(error);\n\n        if(error.code === \"ACTION_REJECTED\") {\n            tokens.value[current].status = 'ACTIVATION_REJECTED';\n        } else {\n            tokens.value[current].status = 'ACTIVATION_NOT_SUCCESSFULL';\n        }\n    }\n}\n\n\nwatch([provider, account], async() => {\n    balance.value = null;\n    await getNFT();\n});\n\nonMounted( async () => {\n\n    // const b = await providerethers.getBalance(account.value)\n    // console.log('getBalance', ethers.formatEther(b))\n    await getNFT();\n\n    if(providerethers) {\n        providerethers.on('block', async () => {\n            await getNFT(true);\n        });\n    }\n})\n\n</script>\n\n<style>\n    .seasonpass .robo-card-content {\n        display: grid;\n        grid-template-rows: calc(var(--robo-space) * 4) auto;\n        gap: calc(var(--robo-space) * 2);\n        align-items: stretch;\n    }\n</style>\n\n<style scoped>\n    .seasonpass {\n        position: relative;\n        min-height: 600px;\n    }\n\n    .seasonpass:not(.expand) {\n        max-width: 700px;\n        margin: 0 auto;\n    }\n\n    .seasonpass-monkey {\n        position: absolute;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        text-align: center;\n        opacity: 0;\n        visibility: hidden;\n        animation: flick 2s linear 0.3s forwards;\n        z-index: 0;\n    }\n\n    @keyframes flick {\n        10% {\n            opacity: 0;\n            visibility: hidden;\n        }\n        20% {\n            opacity: 1;\n            visibility: visible;\n        }\n        30% {\n            opacity: 0;\n            visibility: hidden;\n        }\n        40% {\n            opacity: 1;\n            visibility: visible;\n        }\n        50% {\n            opacity: 0;\n            visibility: hidden;\n        }\n        60% {\n            opacity: 1;\n            visibility: visible;\n        }\n        100% {\n            opacity: 1;\n            visibility: visible;\n        }\n    }\n\n    .seasonpass-monkey img {\n        display: inline-block;\n        max-height: 600px;\n        opacity: 0.5;\n    }\n\n    @media (prefers-color-scheme: dark){\n        .seasonpass-monkey img {\n            opacity: 0.2;\n        }\n    }\n\n    .seasonpass-msg {\n        font-weight: bold;\n        text-align: center;\n        max-width: 500px;\n    }\n\n    .seasonpass-content {\n        justify-self: center;\n        align-content: center;\n        min-height: calc(600px - calc(var(--robo-space) * 4));\n    }\n\n    .seasonpass-content-inside {\n        position: relative;\n        z-index: 1;\n    }\n\n    .tokens .token {\n        display: none;\n    }\n\n    .tokens-show-1 .token:nth-child(1),\n    .tokens-show-2 .token:nth-child(2),\n    .tokens-show-3 .token:nth-child(3),\n    .tokens-show-4 .token:nth-child(4),\n    .tokens-show-5 .token:nth-child(5),\n    .tokens-show-6 .token:nth-child(6) {\n        display: block;\n    }\n\n    .tokens-switch-showed-1 .robo-button:nth-child(1),\n    .tokens-switch-showed-2 .robo-button:nth-child(2),\n    .tokens-switch-showed-3 .robo-button:nth-child(3),\n    .tokens-switch-showed-4 .robo-button:nth-child(4),\n    .tokens-switch-showed-5 .robo-button:nth-child(5),\n    .tokens-switch-showed-6 .robo-button:nth-child(6) {\n        opacity: 0.5;\n    }\n\n    .token img {\n        display: block;\n        max-width: 80%;\n        margin: var(--robo-space) auto;\n    }\n\n    .tokens-switch {\n        margin-top: calc(var(--robo-space) * 2);\n    }\n</style>\n","import script from \"./Season-pass.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Season-pass.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Season-pass.vue?vue&type=style&index=0&id=d54f8394&lang=css\"\nimport \"./Season-pass.vue?vue&type=style&index=1&id=d54f8394&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-d54f8394\"]])\n\nexport default __exports__","<template>\n  <robo-layout-section width=\"middle-wide\">\n\n    <robo-grid minColumnWidth=\"200px\" gap=\"x2\">\n\n      <robo-section>\n        <robo-section card>\n          <template v-if=\"rwsactive && rwsactive !== ''\">\n            <robo-rws-setup-active :show=\"['name', 'owner', 'date', 'userstext', 'link']\" />\n          </template>\n          <template v-else>\n            <robo-text title=\"4\" align=\"left\">RWS subscription</robo-text>\n            <robo-section offset=\"x1\">\n              <robo-text size=\"small\" weight=\"normal-italic\">\n                <robo-grid gap=\"x05\" columns=\"1\">\n                  <robo-grid-item borderbottom>\n                    Price from: <b>~ {{ price }} XRT </b>\n\n                    <robo-details>\n                      <template #summary>\n                        <robo-icon icon=\"circle-question\" />\n                      </template>\n                      <robo-grid gap=\"x05\">\n                        <robo-text weight=\"bold\">Where to buy XRT</robo-text>\n                        <robo-link href=\"https://app.basilisk.cloud/trade\">\n                          Basilisk\n                        </robo-link>\n                        <robo-link\n                          href=\"https://app.solarbeam.io/exchange/swap\"\n                        >\n                          Solarbeam\n                        </robo-link>\n                        <robo-link\n                          href=\"https://trade.kraken.com/markets/kraken/xrt/usd\"\n                        >\n                          Kraken\n                        </robo-link>\n                      </robo-grid>\n                    </robo-details>\n                  </robo-grid-item>\n\n                  <robo-grid-item borderbottom>\n                    Activation time <b>~ 2 min</b>\n                  </robo-grid-item>\n\n                  <robo-grid-item>\n                    Available subscriptions:\n                    <b>{{ freeAuctions }}</b>\n                  </robo-grid-item>\n                </robo-grid>\n              </robo-text>\n            </robo-section>\n\n            <robo-button :router=\"linkActivate\" size=\"small\" block>\n              <robo-icon icon=\"wallet\" /> Buy a subscription\n            </robo-button>\n          </template>\n        </robo-section>\n      </robo-section>\n\n      <robo-section>\n        <robo-text title=\"4\" align=\"left\" offset=\"x05\">Open-source hardware & web3 cloud</robo-text>\n        <robo-text size=\"small\" weight=\"normal-italic\">\n          <robo-grid gap=\"x05\" columns=\"1\">\n            <robo-grid-item borderbottom>\n              <robo-icon icon=\"check\" /> Secured data, only you have an access\n            </robo-grid-item>\n            <robo-grid-item borderbottom>\n              <robo-icon icon=\"check\" /> Remote control without any corporate clouds\n            </robo-grid-item>\n            <robo-grid-item borderbottom>\n              <robo-icon icon=\"check\" /> Brand-independent smart home, combine wanted devices\n            </robo-grid-item>\n            <robo-grid-item>\n              <robo-icon icon=\"check\" /> Update your Robonomics devices as you wish with Type-C\n            </robo-grid-item>\n          </robo-grid>\n        </robo-text>\n      </robo-section>\n    </robo-grid>\n  </robo-layout-section>\n</template>\n\n<script>\nimport { useRobonomics } from \"@/hooks/useRobonomics\";\nimport { fromUnit } from \"@/utils/tools\";\nimport { bnToBn } from \"@polkadot/util\";\nimport { computed, onUnmounted, ref, watch } from \"vue\";\nimport { useStore } from \"vuex\";\n\nexport default {\n  setup() {\n    const price = ref(0);\n    const freeAuctions = ref(0);\n    let unsubscribeBlock = null;\n\n    const store = useStore();\n    const rwsactive = computed(() => {\n      return store.state.robonomicsUIvue.rws.active;\n    });\n    const linkActivate = computed(() => {\n      return store.state.robonomicsUIvue.rws.links.activate;\n    });\n\n    const { isReady, getInstance } = useRobonomics();\n\n    watch(\n      isReady,\n      async (isReady) => {\n        if (isReady) {\n          const robonomics = getInstance();\n          freeAuctions.value = (await robonomics.rws.getAuctionQueue()).length;\n          unsubscribeBlock = await robonomics.events.onBlock(async () => {\n            freeAuctions.value = (\n              await robonomics.rws.getAuctionQueue()\n            ).length;\n          });\n          const minimalBid = await robonomics.rws.getMinimalBid();\n          price.value = minimalBid.add(bnToBn(1));\n        }\n      },\n      { immediate: true }\n    );\n\n    onUnmounted(() => {\n      if (unsubscribeBlock) {\n        unsubscribeBlock();\n      }\n    });\n\n    const priceFormat = computed(() => {\n      if (isReady.value) {\n        return fromUnit(\n          price.value,\n          getInstance().api.registry.chainDecimals[0],\n          0\n        );\n      }\n      return 0;\n    });\n\n    return {\n      rwsactive,\n      linkActivate,\n      freeAuctions,\n      price: priceFormat\n    };\n  }\n};\n</script>\n\n<style>\n#home-links .robo-link {\n  position: relative;\n  display: block;\n  background-color: var(--robo-color-blue-80);\n  min-height: 150px;\n  color: var(--robo-color-light);\n  padding: var(--robo-space);\n  font-weight: bold;\n  text-transform: uppercase;\n}\n\n#home-links .robo-link:before {\n  content: \"\";\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  height: 15px;\n  background-color: var(--robo-color-blue);\n  z-index: 1;\n  transition: 0.2s all;\n}\n\n#home-links .robo-link:hover::before {\n  height: 100%;\n}\n\n#home-links .robo-link span {\n  display: block;\n  margin-top: 30px;\n  position: relative;\n  z-index: 2;\n}\n</style>\n","import { render } from \"./Home.vue?vue&type=template&id=307ab300\"\nimport script from \"./Home.vue?vue&type=script&lang=js\"\nexport * from \"./Home.vue?vue&type=script&lang=js\"\n\nimport \"./Home.vue?vue&type=style&index=0&id=307ab300&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <robo-section offset=\"x2\" width=\"narrow\">\n    <robo-section offset=\"x3\">\n      <robo-select\n        block\n        :values=\"commands.map((item) => item.value)\"\n        :options=\"commands.map((item) => item.name)\"\n        v-model=\"parameter\"\n      />\n      <br />\n      <robo-button @click=\"send\" block :loading=\"proccess\">Pay</robo-button>\n      <robo-text weight=\"bold\" v-if=\"result\">{{ result }}</robo-text>\n      <robo-text highlight=\"error\" v-if=\"error\">{{ error }}</robo-text>\n    </robo-section>\n  </robo-section>\n</template>\n\n<script>\nimport { ref, inject } from \"vue\";\nimport * as config from \"./config\";\n\nexport default {\n  setup() {\n    const RobonomicsProvider = inject(\"RobonomicsProvider\");\n\n    const proccess = ref(false);\n    const result = ref(null);\n    const error = ref(null);\n    const commands = ref(config.listOfCommands);\n    const parameter = ref(config.listOfCommands[0].value);\n    const unsubscribe = ref(null);\n\n    const send = async () => {\n      error.value = \"\";\n      result.value = \"\";\n      proccess.value = true;\n      try {\n        const txs = [\n          RobonomicsProvider.instance.value.api.tx.balances.transfer(\n            config.robot,\n            config.price\n          ),\n          RobonomicsProvider.instance.value.launch.send(\n            config.robot,\n            parameter.value\n          )\n        ];\n        const tx = RobonomicsProvider.instance.value.api.tx.utility.batch(txs);\n        const resultTx =\n          await RobonomicsProvider.instance.value.accountManager.signAndSend(\n            tx\n          );\n        console.log(\"saved\", resultTx);\n        result.value = `${resultTx.blockNumber}-${resultTx.txIndex}`;\n      } catch (error) {\n        console.log(error);\n        error.value = error.message;\n      }\n      proccess.value = false;\n    };\n\n    return {\n      proccess,\n      result,\n      error,\n      commands,\n      parameter,\n      unsubscribe,\n      send\n    };\n  }\n};\n</script>\n","export const price = 500_000_000;\nexport const robot = \"4GfZP7fbGZBx5GxR4mreLGTm872vHYhDMmaV6d1SEHGtv7AP\";\nexport const listOfCommands = [\n  {\n    name: \"Wave Hand\",\n    value: \"0x3000000000000000000000000000000000000000000000000000000000000000\"\n  },\n  {\n    name: \"Wave Hand with Turn\",\n    value: \"0x3100000000000000000000000000000000000000000000000000000000000000\"\n  },\n  {\n    name: \"Shake Hand\",\n    value: \"0x3200000000000000000000000000000000000000000000000000000000000000\"\n  }\n];\n","import { render } from \"./RobonomicsLaunch.vue?vue&type=template&id=40ebbd76\"\nimport script from \"./RobonomicsLaunch.vue?vue&type=script&lang=js\"\nexport * from \"./RobonomicsLaunch.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <robo-layout-section>\n    <robo-section offset=\"x2\" width=\"narrow\" style=\"text-align: center\">\n      <h2>Pay the robot with cryptocurrency.</h2>\n      <br />\n      <robo-text>\n        Experience this unique demo of the future robot economy on the streets\n        of Las Vegas during CES 2025! Pay one Robonomics token ($XRT) to a\n        humanoid for any basic action.\n      </robo-text>\n      <br />\n      <robo-text weight=\"bold\" style=\"font-size: 40px\">\n        Price: 0.5<img src=\"./icon_XRT.png\" class=\"logo\" />\n      </robo-text>\n    </robo-section>\n\n    <template v-if=\"RobonomicsProvider.isReady\">\n      <robonomics-launch />\n    </template>\n    <template v-else>...</template>\n  </robo-layout-section>\n</template>\n\n<script setup>\nimport { inject } from \"vue\";\nimport RobonomicsLaunch from \"./RobonomicsLaunch.vue\";\n\nconst RobonomicsProvider = inject(\"RobonomicsProvider\");\n</script>\n\n<style scoped>\n.logo {\n  width: 45px;\n  vertical-align: text-top;\n  margin: -2px 5px 0;\n}\n</style>\n","import script from \"./RobonomicsApp.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./RobonomicsApp.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./RobonomicsApp.vue?vue&type=style&index=0&id=2314f0b4&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-2314f0b4\"]])\n\nexport default __exports__","<script>\nexport default {\n  created: function () {\n    window.location.href = `https://v0.dapp.robonomics.network/${this.$route.href}`;\n  }\n};\n</script>\n","import script from \"./PathNotFound.vue?vue&type=script&lang=js\"\nexport * from \"./PathNotFound.vue?vue&type=script&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <robo-layout-section>\n    <robo-template-rws-buy\n      :price=\"price\"\n      activationtime=\"2\"\n      :available=\"freeAuctions\"\n      :chainInfoUploaded=\"chainInfoStatus\"\n      :rwsExpiration=\"expiredate\"\n      @on-activate=\"onActivate\"\n    />\n  </robo-layout-section>\n</template>\n\n<script>\nimport { useAccount } from \"@/hooks/useAccount\";\nimport { useBalance } from \"@/hooks/useBalance\";\nimport { useDevices } from \"@/hooks/useDevices\";\nimport { useRobonomics } from \"@/hooks/useRobonomics\";\nimport { useSend } from \"@/hooks/useSend\";\nimport { useSubscription } from \"@/hooks/useSubscription\";\nimport { fromUnit } from \"@/utils/tools\";\nimport { bnToBn } from \"@polkadot/util\";\nimport { computed, onUnmounted, ref, watch, watchEffect } from \"vue\";\n\nexport default {\n  setup() {\n    const price = ref(0);\n    const freeAuctions = ref(0);\n    const chainInfoStatus = ref(false);\n    let unsubscribeBlock = null;\n\n    const { isReady, getInstance } = useRobonomics();\n    const { account, unsubscribe: unsubscribeAccount } = useAccount();\n    const { balance, unsubscribe: unsubscribeBalance } = useBalance(account);\n    const subscription = useSubscription(account);\n    const devices = useDevices(account);\n\n    watch(\n      isReady,\n      async (isReady) => {\n        if (isReady) {\n          const robonomics = getInstance();\n          freeAuctions.value = (await robonomics.rws.getAuctionQueue()).length;\n          unsubscribeBlock = await robonomics.events.onBlock(async () => {\n            freeAuctions.value = (\n              await robonomics.rws.getAuctionQueue()\n            ).length;\n          });\n\n          const minimalBid = await robonomics.rws.getMinimalBid();\n          price.value = minimalBid.add(bnToBn(1));\n          chainInfoStatus.value = true;\n        }\n      },\n      { immediate: true }\n    );\n\n    onUnmounted(() => {\n      if (unsubscribeBlock) {\n        unsubscribeBlock();\n      }\n      if (unsubscribeBalance) {\n        unsubscribeBalance();\n      }\n      unsubscribeAccount();\n    });\n\n    const transaction = useSend();\n    const onActivate = async (setStatus) => {\n\n      if (!isReady.value) {\n        setStatus(\"error\", \"Parachain is not ready\");\n        return;\n      }\n\n      if (\n        !balance.value ||\n        bnToBn(balance.value).lt(price.value.add(bnToBn(10000000)))\n      ) {\n        console.log(balance.value);\n        setStatus(\n          \"error\",\n          \"Subscription can not be activated due to unsuffcicient XRT balance\"\n        );\n        return;\n      }\n\n      if (freeAuctions.value <= 0) {\n        setStatus(\"error\", \"There are no available subscriptions\");\n        return;\n      }\n\n      if (subscription.hasSubscription.value && subscription.isActive.value) {\n        setStatus(\"error\", \"You have an active subscription\");\n        return;\n      }\n\n      const robonomics = getInstance();\n      let call = robonomics.rws.bid(\n        Number(await robonomics.rws.getFirtsFreeAuction()),\n        price.value\n      );\n      if (!devices.devices.value.includes(account.value)) {\n        call = robonomics.api.tx.utility.batch([\n          call,\n          robonomics.rws.setDevices([...devices.devices.value, account.value])\n        ]);\n      }\n      const tx = transaction.createTx();\n      await transaction.send(tx, call);\n      if (tx.error.value) {\n        if (tx.error.value !== \"Cancelled\") {\n          setStatus(\"error\", tx.error.value);\n        } else {\n          setStatus(\"cancel\");\n        }\n        return;\n      }\n\n      const unsubscribeBlock = await robonomics.events.onBlock(() => {\n        subscription.loadLedger();\n      });\n      const stopWatchEffect = watchEffect(() => {\n        if (subscription.hasSubscription.value && subscription.isActive.value) {\n          stopWatchEffect();\n          unsubscribeBlock();\n          setStatus(\"ok\");\n        }\n      });\n    };\n\n    const priceFormat = computed(() => {\n      if (isReady.value) {\n        return fromUnit(\n          price.value,\n          getInstance().api.registry.chainDecimals[0],\n          0\n        );\n      }\n      return 0;\n    });\n\n    return {\n      freeAuctions,\n      price: priceFormat,\n      expiredate: subscription.validUntil,\n      chainInfoStatus,\n      onActivate\n    };\n  }\n};\n</script>","import { ref, watch } from \"vue\";\nimport { useRobonomics } from \"./useRobonomics\";\n\nexport const useBalance = (account) => {\n  const balance = ref(null);\n  const { isReady, getInstance } = useRobonomics();\n  let unsubscribe;\n  watch(\n    [account, isReady],\n    async () => {\n      if (unsubscribe) {\n        unsubscribe();\n      }\n      if (!isReady.value || !account.value) {\n        return;\n      }\n      const robonomics = getInstance();\n      unsubscribe = await robonomics.account.getBalance(account.value, (r) => {\n        balance.value = r.free.sub(r.frozen).toNumber();\n      });\n    },\n    { immediate: true }\n  );\n  return { balance, unsubscribe };\n};\n","import { render } from \"./RwsActivate.vue?vue&type=template&id=4413a05e\"\nimport script from \"./RwsActivate.vue?vue&type=script&lang=js\"\nexport * from \"./RwsActivate.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <robo-layout-section>\n    <robo-rws-setup\n      :onUserDelete=\"removeUser\"\n      :onUserAdd=\"addUser\"\n      :onSaveHapass=\"saveHapass\"\n      :onControllerEdit=\"addUser\"\n    />\n  </robo-layout-section>\n</template>\n\n<script>\nimport { useAccount } from \"@/hooks/useAccount\";\nimport { useDevices } from \"@/hooks/useDevices\";\nimport { useRobonomics } from \"@/hooks/useRobonomics\";\nimport { useSend } from \"@/hooks/useSend\";\nimport { u8aToHex } from \"@polkadot/util\";\nimport { decodeAddress, encodeAddress } from \"@polkadot/util-crypto\";\nimport { computed } from \"vue\";\nimport { useStore } from \"vuex\";\n\nexport default {\n  setup() {\n    const store = useStore();\n\n    const setupOwner = computed(() => {\n      return store.state.robonomicsUIvue.rws.active;\n    });\n\n    const { isReady, getInstance } = useRobonomics();\n    const transaction = useSend();\n    const devices = useDevices(setupOwner);\n    const { account } = useAccount();\n\n    const addUser = async (user, setStatus) => {\n\n      if (!isReady.value) {\n        setStatus(\"error\", \"Parachain is not ready.\");\n        return;\n      }\n      if (setupOwner.value && setupOwner.value !== account.value) {\n        setStatus(\"error\", \"You do not have access to this action.\");\n        return;\n      }\n      if (devices.devices.value.includes(user)) {\n        setStatus(\"error\", \"The address is already in the subscription.\");\n        return;\n      }\n\n      const call = await getInstance().rws.setDevices([\n        ...devices.devices.value,\n        user\n      ]);\n      const tx = transaction.createTx();\n      if (devices.devices.value.includes(account.value)) {\n        await transaction.send(tx, call, setupOwner.value);\n      } else {\n        await transaction.send(tx, call);\n      }\n      if (tx.error.value) {\n        if (tx.error.value !== \"Cancelled\") {\n          setStatus(\"error\", tx.error.value);\n        } else {\n          setStatus(\"cancel\");\n        }\n        return;\n      } else {\n        await devices.loadDevices();\n      }\n      store.commit(\"rws/setUsers\", devices.devices);\n      setStatus(\"ok\");\n    };\n\n    const removeUser = async (user, setStatus) => {\n      if (!isReady.value) {\n        setStatus(\"error\", \"Parachain is not ready.\");\n        return;\n      }\n      if (setupOwner.value && setupOwner.value !== account.value) {\n        setStatus(\"error\", \"You do not have access to this action.\");\n        return;\n      }\n      if (devices.devices.value.includes(user)) {\n        const call = await getInstance().rws.setDevices(\n          devices.devices.value.filter((item) => item !== user)\n        );\n        const tx = transaction.createTx();\n        if (devices.devices.value.includes(account.value)) {\n          await transaction.send(tx, call, setupOwner.value);\n        } else {\n          await transaction.send(tx, call);\n        }\n        if (tx.error.value) {\n          if (tx.error.value !== \"Cancelled\") {\n            setStatus(\"error\", tx.error.value);\n          } else {\n            setStatus(\"cancel\");\n          }\n          return;\n        } else {\n          await devices.loadDevices();\n        }\n      }\n      store.commit(\"rws/setUsers\", devices.devices);\n      setStatus(\"ok\");\n    };\n\n    const saveHapass = async (passToSave, setStatus) => {\n      if (!isReady.value) {\n        setStatus(\"error\", \"Parachain is not ready.\");\n        return;\n      }\n      const userAddress = store.state.robonomicsUIvue.rws.user.account;\n      const userType = store.state.robonomicsUIvue.rws.user.acctype ?? 'ed25519';\n      console.log('userType', userType);\n\n      const robonomics = getInstance();\n\n      await robonomics.accountManager.addPair(\n        store.state.robonomicsUIvue.rws.user.key\n      );\n      const user = robonomics.accountManager.encryptor();\n\n      try {\n        encodeAddress(userAddress);\n      } catch (error) {\n        setStatus(\"error\", error.message);\n        return;\n      }\n\n      const encodedDevices = devices.devices.value.map((item) =>\n        encodeAddress(item)\n      );\n      if (!encodedDevices.includes(encodeAddress(userAddress))) {\n        setStatus(\"error\", \"User not found in subscription\");\n        return;\n      }\n\n      const setup = store.state.robonomicsUIvue.rws.list.find(\n        (item) => item.owner === setupOwner.value\n      );\n\n      const passwordForAdmin = user.encryptMessage(\n        passToSave,\n        decodeAddress(setup.controller)\n      );\n\n      const passwordForRecovery = user.encryptMessage(\n        passToSave,\n        decodeAddress(userAddress)\n      );\n\n      const call = await robonomics.datalog.write(\n        JSON.stringify({\n          subscription: setup.owner,\n          ha: setup.controller.address,\n          admin: u8aToHex(passwordForAdmin),\n          user: u8aToHex(passwordForRecovery)\n        })\n      );\n      const tx = transaction.createTx();\n      await transaction.send(tx, call, setup.owner);\n\n      try {\n        const accountOld = store.state.robonomicsUIvue.polkadot.accounts.find(\n          (item) => item.address === store.state.robonomicsUIvue.polkadot.address\n        );\n      \n      if (accountOld) {\n        await robonomics.accountManager.setSender(accountOld.address, {\n          type: accountOld.type,\n          extension: store.state.robonomicsUIvue.polkadot.extensionObj\n        });\n      }\n      } catch (e) { console.error(e); }\n\n      if (tx.error.value) {\n        if (tx.error.value !== \"Cancelled\") {\n          setStatus(\"error\", tx.error.value);\n        } else {\n          setStatus(\"cancel\");\n        }\n        return;\n      }\n\n      setStatus(\"ok\");\n    };\n\n    return {\n      saveHapass,\n      addUser,\n      removeUser\n    };\n  }\n};\n</script>\n","import { render } from \"./RwsSetup.vue?vue&type=template&id=398bd38f\"\nimport script from \"./RwsSetup.vue?vue&type=script&lang=js\"\nexport * from \"./RwsSetup.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <robo-layout-section>\n    <robo-rws-setup-new\n      :onRequestSubscription=\"onRequestSubscription\"\n      :onSetupGenerate=\"onSetupGenerate\"\n    />\n  </robo-layout-section>\n</template>\n\n<script setup>\nimport { getDevices } from \"@/hooks/useDevices\";\nimport { useRobonomics } from \"@/hooks/useRobonomics\";\nimport { useSend } from \"@/hooks/useSend\";\nimport { getLedger, getValidUntil } from \"@/hooks/useSubscription\";\nimport { nextTick, watch } from \"vue\";\n\nconst { isReady, getInstance } = useRobonomics();\nconst transaction = useSend();\n\nconst onRequestSubscription = async (address, send) => {\n  watch(\n    isReady,\n    async (isReady) => {\n      if (isReady) {\n        try {\n          const robonomics = getInstance();\n          const ledger = await getLedger(robonomics, address);\n          send(getValidUntil(ledger));\n        } catch (e) {\n          console.log(e);\n          send(null);\n        }\n      }\n    },\n    { immediate: true }\n  );\n};\n\nconst onSetupGenerate = async (config, setStatus) => {\n  console.log('onSetupGenerate', config)\n  watch(\n    isReady,\n    async (isReady) => {\n      if (isReady) {\n        try {\n          const robonomics = getInstance();\n          if (robonomics.accountManager.account.address !== config.owner) {\n            setStatus(\"error\", \"owner != signer\");\n            return;\n          }\n          const devices = await getDevices(robonomics, config.owner);\n          if (devices.includes(config.controller.address)) {\n            setStatus(\"ok\", \"Setup saved\");\n            if (stop) {\n              stop();\n            } else {\n              nextTick(() => {\n                stop();\n              });\n            }\n            return;\n          }\n          const call = await robonomics.rws.setDevices([\n            ...devices,\n            config.controller.address\n          ]);\n          const tx = transaction.createTx();\n          if (devices.includes(config.owner)) {\n            await transaction.send(tx, call, config.owner);\n          } else {\n            await transaction.send(tx, call);\n          }\n          if (tx.error.value) {\n            if (tx.error.value !== \"Cancelled\") {\n              setStatus(\"error\", tx.error.value);\n            } else {\n              setStatus(\"error\", 'cancel');\n            }\n            return;\n          } else {\n            setStatus(\"ok\", \"Setup saved\");\n          }\n        } catch (e) {\n          console.log(e);\n          setStatus(\"error\", e);\n        }\n      }\n    },\n    { immediate: true }\n  );\n};\n</script>\n","import script from \"./RwsSetupNew.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./RwsSetupNew.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <robo-layout-section>\n    energy-monitor\n  </robo-layout-section>\n</template>\n","import { render } from \"./Energy-monitor.vue?vue&type=template&id=827cb03e\"\nconst script = {}\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <robo-layout-section>\n    Subscription owner: <robo-input v-model=\"owner\" />\n    <account-unlock\n      @unlock=\"\n        () => {\n          isUnlock = true;\n        }\n      \"\n    />\n    <hr />\n    <div v-if=\"isUnlock\">\n      <h2>Digital twin</h2>\n      <d-twin\n        :address=\"owner\"\n        :owner=\"owner\"\n        :key=\"updateKey\"\n        @twinId=\"\n          (r) => {\n            twinId = r;\n          }\n        \"\n        @find=\"\n          (r) => {\n            finedFiles = r;\n          }\n        \"\n      />\n      <hr />\n      <div v-if=\"finedFiles\">\n        <h2>Files</h2>\n        <template v-for=\"finedFile in finedFiles\" :key=\"finedFile\">\n          <ipfs-file\n            v-if=\"\n              finedFile !==\n              '0x0000000000000000000000000000000000000000000000000000000000000000'\n            \"\n            :hex=\"finedFile\"\n          />\n        </template>\n      </div>\n      <hr />\n\n      <div>\n        <h2>Setup</h2>\n        <encrypt-message\n          @encrypt=\"\n            (data) => {\n              messageHash = data;\n            }\n          \"\n        />\n        <hr />\n        <div v-if=\"messageHash\">\n          <h3>Upload to ipfs</h3>\n          <ipfs-upload\n            :data=\"messageHash\"\n            @upload=\"\n              (result) => {\n                ipfsFile = result;\n              }\n            \"\n          />\n        </div>\n        <hr />\n        <div v-if=\"ipfsFile\">\n          <h3>Save to crust</h3>\n          <crust-store\n            :file=\"ipfsFile\"\n            @store=\"\n              () => {\n                isStored = true;\n              }\n            \"\n          />\n          <div v-if=\"isStored\">Crust saved</div>\n        </div>\n        <hr />\n        <div v-if=\"twinId && ipfsFile\">\n          <h3>Save to digital twin</h3>\n          <d-twin-save\n            :owner=\"owner\"\n            :twinId=\"twinId\"\n            :address=\"owner\"\n            :data=\"ipfsFile.path\"\n            @save=\"\n              () => {\n                isStored = true;\n                updateKey++;\n              }\n            \"\n          />\n          <div v-if=\"isStored\">Digital twin saved</div>\n        </div>\n      </div>\n    </div>\n  </robo-layout-section>\n</template>\n\n<script>\nimport { ref } from \"vue\";\nimport AccountUnlock from \"./Account.vue\";\nimport CrustStore from \"./Crust.vue\";\nimport DTwin from \"./DTwin.vue\";\nimport DTwinSave from \"./DTwinSave.vue\";\nimport EncryptMessage from \"./Encrypt.vue\";\nimport IpfsFile from \"./IpfsFile.vue\";\nimport IpfsUpload from \"./IpfsUpload.vue\";\n\nexport default {\n  name: \"PageSave\",\n  components: {\n    AccountUnlock,\n    EncryptMessage,\n    DTwin,\n    DTwinSave,\n    IpfsUpload,\n    IpfsFile,\n    CrustStore\n  },\n  setup() {\n    const isUnlock = ref(false);\n    const messageHash = ref(\"\");\n    const ipfsFile = ref();\n    const isStored = ref(false);\n    const isSaved = ref(false);\n    const twinId = ref();\n    const finedFiles = ref();\n    const updateKey = ref(0);\n\n    const owner = \"\";\n\n    return {\n      isUnlock,\n      messageHash,\n      ipfsFile,\n      isStored,\n      isSaved,\n      twinId,\n      finedFiles,\n      owner,\n      updateKey\n    };\n  }\n};\n</script>\n\n<style scoped>\nhr {\n  margin: 20px;\n}\n</style>\n","<template>\n  <div>\n    Account seed:\n    <robo-input v-model=\"seed\" />\n    <robo-button @click=\"unlock\">unlock</robo-button>\n  </div>\n</template>\n\n<script>\nimport { useRobonomics } from \"@/hooks/useRobonomics\";\nimport { ref } from \"vue\";\n\nexport default {\n  name: \"AccountUnlock\",\n  emits: [\"unlock\"],\n  setup(_, { emit }) {\n    const seed = ref(\"\");\n\n    const { getInstance } = useRobonomics();\n\n    const unlock = async () => {\n      const robonomics = getInstance();\n\n      try {\n        await robonomics.accountManager.addUri(seed.value);\n      } catch (error) {\n        console.log(error);\n        return;\n      }\n      console.log(robonomics.accountManager.account.address);\n\n      emit(\"unlock\");\n    };\n\n    return {\n      seed,\n      unlock\n    };\n  }\n};\n</script>\n","import { render } from \"./Account.vue?vue&type=template&id=03ef7282\"\nimport script from \"./Account.vue?vue&type=script&lang=js\"\nexport * from \"./Account.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div>\n    <div><b>Ipfs file info</b>: {{ file }}</div>\n    <div v-if=\"info\">replica: {{ info.reported_replica_count }}</div>\n    <div v-if=\"balance && price\">\n      <div><b>Balance</b>: {{ $filters.balance(balance, 12, \"CRU\") }}</div>\n      <div><b>Price</b>: {{ $filters.balance(price, 12, \"CRU\") }}</div>\n\n      <div v-if=\"info === null\">\n        <div v-if=\"canStored\">\n          <robo-button @click=\"storeFile\">store file</robo-button>\n        </div>\n        <div v-else>low balance</div>\n      </div>\n    </div>\n    <div v-else>...</div>\n  </div>\n</template>\n\n<script>\nimport { useRobonomics } from \"@/hooks/useRobonomics\";\nimport { Crust } from \"@/utils/crust\";\nimport { computed, ref } from \"vue\";\n\nexport default {\n  name: \"CrustStore\",\n  props: [\"file\"],\n  emits: [\"store\"],\n  setup(props, { emit }) {\n    const { getInstance } = useRobonomics();\n    const crust = new Crust(\"wss://rpc.crust.network\");\n\n    const balance = ref();\n    const price = ref();\n    const info = ref();\n\n    crust.watch(async () => {\n      const robonomics = getInstance();\n      balance.value = await crust.getBalance(\n        robonomics.accountManager.account.address\n      );\n      price.value = await crust.getStorePrice(props.file.size);\n      info.value = (await crust.getInfo(props.file.path)).toHuman();\n      if (info.value) {\n        emit(\"store\");\n      }\n    });\n\n    const canStored = computed(() => {\n      if (balance.value > price.value) {\n        return true;\n      }\n      return false;\n    });\n\n    const storeFile = async () => {\n      if (canStored.value === false) {\n        return;\n      }\n      const robonomics = getInstance();\n      const tx = crust.storeFile(props.file.path, props.file.size);\n      const res = await crust.signAndSend(\n        robonomics.accountManager.account,\n        tx\n      );\n      console.log(res);\n      emit(\"store\");\n    };\n\n    return {\n      balance,\n      price,\n      info,\n      canStored,\n      storeFile\n    };\n  }\n};\n</script>\n","import { typesBundleForPolkadot } from \"@crustio/type-definitions\";\nimport { ApiPromise, WsProvider } from \"@polkadot/api\";\nimport { cryptoWaitReady } from \"@polkadot/util-crypto\";\n\nexport class Crust {\n  constructor(endpoint) {\n    this.isReady = false;\n    this.init(endpoint);\n  }\n\n  watch(cb) {\n    if (this.isReady) {\n      cb();\n      return;\n    }\n    const intervalId = setInterval(() => {\n      if (this.isReady) {\n        clearInterval(intervalId);\n        cb();\n        return;\n      }\n    }, 100);\n  }\n\n  async init(endpoint) {\n    this.provider = new WsProvider(endpoint);\n    this.api = await ApiPromise.create({\n      provider: this.provider,\n      typesBundle: typesBundleForPolkadot\n    });\n    await cryptoWaitReady();\n    this.isReady = true;\n  }\n\n  async getBalance(account, cb) {\n    if (!cb) {\n      const { data } = await this.api.query.system.account(account);\n      return data.free.sub(data.feeFrozen).toNumber();\n    }\n    return this.api.query.system.account(account, ({ data }) => {\n      cb(data.free.sub(data.feeFrozen).toNumber());\n    });\n  }\n\n  async getStorePrice(file_size) {\n    const fileBaseFee = await this.api.query.market.fileBaseFee();\n    const fileByteFee = await this.api.query.market.fileByteFee();\n    return Math.round(\n      fileBaseFee.toNumber() + (fileByteFee.toNumber() * file_size) / 1024 ** 2\n    );\n  }\n\n  async getInfo(ipfs_cid) {\n    return await this.api.query.market.filesV2(ipfs_cid);\n  }\n\n  addRenewalPoolBalance(ipfs_cid, amount) {\n    return this.api.tx.market.addPrepaid(ipfs_cid, amount);\n  }\n\n  storeFile(ipfs_cid, file_size, tips = 0) {\n    return this.api.tx.market.placeStorageOrder(ipfs_cid, file_size, tips, \"\");\n  }\n\n  async signAndSend(account, tx, options = {}) {\n    return new Promise((resolve, reject) => {\n      tx.signAndSend(\n        account.meta.isInjected ? account.address : account,\n        options,\n        (result) => {\n          if (result.status.isInBlock) {\n            result.events.forEach(async (events) => {\n              const {\n                event: { method, section },\n                phase\n              } = events;\n              if (section === \"system\" && method === \"ExtrinsicFailed\") {\n                let message = \"Error\";\n                if (result.dispatchError?.isModule) {\n                  const mod = result.dispatchError.asModule;\n                  const { docs, name, section } =\n                    mod.registry.findMetaError(mod);\n                  console.log(name, section, docs);\n                  message = docs.join(\", \");\n                }\n                return reject(new Error(message));\n              } else if (\n                section === \"system\" &&\n                method === \"ExtrinsicSuccess\"\n              ) {\n                let blockNumber;\n                if (this.api) {\n                  const block = await this.api.rpc.chain.getBlock(\n                    result.status.asInBlock.toString()\n                  );\n                  blockNumber = block.block.header.number.toNumber();\n                }\n                resolve({\n                  block: result.status.asInBlock.toString(),\n                  blockNumber: blockNumber,\n                  txIndex: phase.asApplyExtrinsic.toHuman(),\n                  tx: tx.hash.toString()\n                });\n              }\n            });\n          }\n        }\n      ).catch(reject);\n    });\n  }\n}\n","import { render } from \"./Crust.vue?vue&type=template&id=387582e3\"\nimport script from \"./Crust.vue?vue&type=script&lang=js\"\nexport * from \"./Crust.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div>\n    <select-twin @change=\"(r) => (twinId = r)\" :key=\"keySelect\" />\n    <create-twin :owner=\"owner\" @create=\"keySelect++\" />\n  </div>\n</template>\n\n<script>\nimport { ref, watch } from \"vue\";\nimport CreateTwin from \"../dtwin/CreateTwin.vue\";\nimport SelectTwin from \"../dtwin/SelectTwin.vue\";\nimport { useTwin } from \"../dtwin/dtwin\";\n\nexport default {\n  props: [\"address\", \"owner\", \"data\"],\n  emits: [\"twinId\", \"find\"],\n  components: { SelectTwin, CreateTwin },\n  setup(props, { emit }) {\n    const twinId = ref();\n    const keySelect = ref(0);\n    const keyRecords = ref(0);\n    const { twin } = useTwin(twinId);\n\n    watch(twinId, (twinId) => {\n      emit(\"twinId\", twinId);\n    });\n\n    watch(twin, (twin) => {\n      if (twin) {\n        const list = [];\n        for (const key in twin) {\n          if (twin[key] === props.address) {\n            list.push(key);\n          }\n        }\n        emit(\"find\", list);\n      }\n    });\n\n    return {\n      twinId,\n      keySelect,\n      keyRecords\n    };\n  }\n};\n</script>\n","import { render } from \"./DTwin.vue?vue&type=template&id=1ab336fb\"\nimport script from \"./DTwin.vue?vue&type=script&lang=js\"\nexport * from \"./DTwin.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div>\n    <robo-button @click=\"save\">save to digital twin</robo-button>\n  </div>\n</template>\n\n<script>\nimport { useTwinAction } from \"../dtwin/dtwin\";\n\nexport default {\n  props: [\"twinId\", \"owner\", \"address\", \"data\"],\n  emits: [\"save\"],\n  setup(props, { emit }) {\n    const { setSource } = useTwinAction(props.owner);\n\n    const save = async () => {\n      const tx = await setSource(props.twinId, props.data, props.address);\n      if (tx.error.value) {\n        if (tx.error.value !== \"Cancelled\") {\n          console.log(tx.error.value);\n        } else {\n          console.log(\"cancel\");\n        }\n        return false;\n      }\n      emit(\"save\");\n    };\n\n    return {\n      save\n    };\n  }\n};\n</script>\n","import { render } from \"./DTwinSave.vue?vue&type=template&id=e0697b7c\"\nimport script from \"./DTwinSave.vue?vue&type=script&lang=js\"\nexport * from \"./DTwinSave.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div>\n    <robo-input v-model=\"data\" />\n    <robo-button @click=\"encrypt\">encrypt</robo-button>\n  </div>\n</template>\n\n<script>\nimport { useRobonomics } from \"@/hooks/useRobonomics\";\nimport { u8aToHex } from \"@polkadot/util\";\nimport { decodeAddress } from \"@polkadot/util-crypto\";\nimport { ref } from \"vue\";\n\nexport default {\n  name: \"EncryptMessage\",\n  emits: [\"encrypt\"],\n  setup(_, { emit }) {\n    const data = ref('{\"name\":\"blushing cow\"}');\n\n    const { getInstance } = useRobonomics();\n\n    const encrypt = () => {\n      const robonomics = getInstance();\n      const user = robonomics.accountManager.encryptor();\n      const encryptedMessage = user.encryptMessage(\n        data.value,\n        decodeAddress(user.address)\n      );\n      const dataHex = u8aToHex(encryptedMessage);\n      emit(\"encrypt\", dataHex);\n    };\n\n    return {\n      data,\n      encrypt\n    };\n  }\n};\n</script>\n","import { render } from \"./Encrypt.vue?vue&type=template&id=6cd25a86\"\nimport script from \"./Encrypt.vue?vue&type=script&lang=js\"\nexport * from \"./Encrypt.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"block\">\n    <a :href=\"`https://ipfs.io/ipfs/${ipfsHash}`\" target=\"_blank\">\n      {{ ipfsHash }}\n    </a>\n    <div><b>crust info</b>: {{ info }}</div>\n    <div v-if=\"encrypt\"><b>encrypt</b>: {{ encrypt }}</div>\n    <div><b>data</b>: {{ content }}</div>\n  </div>\n</template>\n\n<script>\nimport { useRobonomics } from \"@/hooks/useRobonomics\";\nimport { Crust } from \"@/utils/crust\";\nimport { u8aToString } from \"@polkadot/util\";\nimport { decodeAddress } from \"@polkadot/util-crypto\";\nimport axios from \"axios\";\nimport { hexToCid } from \"robonomics-interface/dist/utils\";\nimport { ref } from \"vue\";\n\nexport default {\n  name: \"IpfsFile\",\n  props: [\"hex\"],\n  setup(props) {\n    const encrypt = ref();\n    const content = ref();\n    const info = ref();\n    const ipfsHash = hexToCid(props.hex);\n\n    const { getInstance } = useRobonomics();\n    const crust = new Crust(\"wss://rpc.crust.network\");\n\n    function omit(key, obj) {\n      const { [key]: omitted, ...rest } = obj;\n      return [rest, omitted];\n    }\n\n    crust.watch(async () => {\n      const res = (await crust.getInfo(ipfsHash)).toHuman();\n      if (res) {\n        const o = omit(\"replicas\", res);\n        info.value = { ...o[0], replicas: Object.keys(o[1]).length };\n      } else {\n        info.value = \"File is not pinned in crust network\";\n      }\n    });\n\n    const decrypt = (data) => {\n      const robonomics = getInstance();\n      const user = robonomics.accountManager.encryptor();\n      const decryptedMessage = user.decryptMessage(\n        data,\n        decodeAddress(user.address)\n      );\n      return u8aToString(decryptedMessage);\n    };\n    const getContentFile = async () => {\n      try {\n        const res = await axios.get(`https://ipfs.io/ipfs/${ipfsHash}`);\n        if (res.data.startsWith(\"0x\")) {\n          encrypt.value = res.data;\n          content.value = decrypt(res.data);\n        } else {\n          encrypt.value = undefined;\n          content.value = res.data;\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getContentFile();\n\n    return {\n      ipfsHash,\n      info,\n      encrypt,\n      content\n    };\n  }\n};\n</script>\n\n<style scoped>\n.block {\n  margin: 5px 0;\n  padding: 5px;\n  border: 1px solid #036ffc;\n}\n</style>\n","import { render } from \"./IpfsFile.vue?vue&type=template&id=0eb1b343&scoped=true\"\nimport script from \"./IpfsFile.vue?vue&type=script&lang=js\"\nexport * from \"./IpfsFile.vue?vue&type=script&lang=js\"\n\nimport \"./IpfsFile.vue?vue&type=style&index=0&id=0eb1b343&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0eb1b343\"]])\n\nexport default __exports__","<template>\n  <div>\n    Encrypted content:\n    <small>{{ data }}</small>\n    <robo-input v-model=\"ipfsGateway\" />\n    <robo-button @click=\"upload\">upload</robo-button>\n  </div>\n</template>\n\n<script>\nimport { useRobonomics } from \"@/hooks/useRobonomics\";\nimport { stringToU8a } from \"@polkadot/util\";\nimport { ref } from \"vue\";\nimport { IpfsApiClient } from \"../../plugins/ipfs\";\n\nexport default {\n  name: \"IpfsUpload\",\n  props: [\"data\"],\n  emits: [\"upload\"],\n  setup(props, { emit }) {\n    const ipfsGateway = ref(\"https://ipfs-gw.decloud.foundation\");\n\n    const { getInstance } = useRobonomics();\n\n    const upload = async () => {\n      const ipfs = new IpfsApiClient(ipfsGateway.value);\n\n      const robonomics = getInstance();\n\n      try {\n        const signature = (\n          await robonomics.accountManager.account.signMsg(\n            stringToU8a(robonomics.accountManager.account.address)\n          )\n        ).toString();\n        ipfs.auth(null, robonomics.accountManager.account.address, signature);\n        const file = await ipfs.add(props.data);\n\n        emit(\"upload\", {\n          path: file.path,\n          size: file.size\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    return {\n      ipfsGateway,\n      upload\n    };\n  }\n};\n</script>\n","import { render } from \"./IpfsUpload.vue?vue&type=template&id=1b4f81de\"\nimport script from \"./IpfsUpload.vue?vue&type=script&lang=js\"\nexport * from \"./IpfsUpload.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./Page.vue?vue&type=template&id=dcb50b02&scoped=true\"\nimport script from \"./Page.vue?vue&type=script&lang=js\"\nexport * from \"./Page.vue?vue&type=script&lang=js\"\n\nimport \"./Page.vue?vue&type=style&index=0&id=dcb50b02&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-dcb50b02\"]])\n\nexport default __exports__","<template>\n\n  <Libp2p\n    v-if=\"type === 'libp2p'\"\n    :config=\"config\"\n    :isKey\n    @connected=\"handlerConnected\"\n    @error=\"handlerError\"\n  />\n  <Launch v-else :config=\"config\" :isKey />\n</template>\n\n<script>\nimport { useRobonomics } from \"@/hooks/useRobonomics\";\nimport { onMounted, onUnmounted, ref, watch, computed } from \"vue\";\nimport { useStore } from \"vuex\";\nimport Launch from \"./Launch.vue\";\nimport Libp2p from \"./Libp2p.vue\";\nimport { useConfig } from \"./common\";\n\nexport default {\n  components: { Libp2p, Launch },\n  setup() {\n    const store = useStore();\n    const { isReady, accountManager } = useRobonomics();\n    const { config, load } = useConfig();\n    const isKey = ref(false);\n\n    const type = computed( () => {\n      /* always has a value, default is 'libp2p' */\n      return store.state.robonomicsUIvue.polkadot.connection.type;\n    });\n\n    onMounted(() => {\n      // store.commit(\"polkadot/setConnectionConnected\", false);\n      store.commit(\"polkadot/setConnectionStatus\", null);\n    });\n    \n    onUnmounted(async () => {\n      if (\n        isReady.value &&\n        isKey.value &&\n        store.state.robonomicsUIvue.polkadot.address !==\n          accountManager.account.address\n      ) {\n        try {\n          const accountOld = store.state.robonomicsUIvue.polkadot.accounts.find(\n          (item) =>\n              item.address === store.state.robonomicsUIvue.polkadot.address\n          );\n          if (accountOld) {\n            await accountManager.setSender(accountOld.address, {\n              type: accountOld.type,\n              extension: store.state.robonomicsUIvue.polkadot.extensionObj\n            });\n          }\n        } catch (e) { console.error(e); }\n      }\n    });\n\n    watch(() => isReady.value, v => {\n      if(type.value === \"parachain\") {\n        store.commit(\"polkadot/setConnectionConnected\", v);\n      }\n    }, {immediate: true});\n\n    watch(\n      () => store.state.robonomicsUIvue.rws.user.key,\n      async (key) => {\n        if (key) {\n          await accountManager.addPair(key);\n          isKey.value = true;\n          load();\n        } else {\n          console.log(\"User key not found\");\n        }\n      },\n      { immediate: true }\n    );\n\n    return {\n      store,\n      type,\n      isKey,\n      config,\n      handlerConnected: (result) => {\n        store.commit(\"polkadot/setConnectionType\", \"libp2p\");\n\n        if (result.protoNames().includes(\"p2p-circuit\")) {\n          store.commit(\"polkadot/setConnectionStatus\", \"via relay\");\n        } else {\n          store.commit(\"polkadot/setConnectionStatus\", null);\n        }\n\n        store.commit(\"polkadot/setConnectionConnected\", true);\n      },\n      handlerError: (e) => {\n        console.log(e.message);\n        console.log(\"Switching to parachain\");\n\n        store.commit(\"polkadot/setConnectionType\", \"parachain\");\n        store.commit(\"polkadot/setConnectionConnected\", true);\n        store.commit(\"polkadot/setConnectionStatus\", null); /* delete message about relay if it was there */\n      }\n    };\n  }\n};\n</script>\n","<template>\n  <robo-smarthome-dashboard\n    :config=\"config\"\n    :datalog=\"data\"\n    :updateTime=\"updateTime\"\n  />\n\n  <!-- {{data}}, {{dataTest}} -->\n</template>\n\n<script>\nimport { watch } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { useData } from \"./launch\";\n\nimport dataTest from \"./Lugano.json\"\nimport configTest from \"./Lugano-config.json\"\n\nexport default {\n  props: {\n    isKey: {\n      default: false,\n      type: Boolean\n    },\n    config: {\n      default: null,\n      type: Object\n    }\n  },\n  setup(props) {\n    const { data, updateTime, run, launch } = useData();\n    const store = useStore();\n\n    watch(\n      () => props.isKey,\n      (value) => {\n        if (value) {\n          run();\n        }\n      },\n      { immediate: true }\n    );\n\n    watch(\n      () => store.state.robonomicsUIvue.rws.launch,\n      (value) => {\n        try {\n          launch(JSON.parse(value));\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    );\n\n    return { data, updateTime, dataTest, configTest };\n  }\n};\n</script>\n","import { useAccount } from \"@/hooks/useAccount\";\nimport { inject, watch } from \"vue\";\n\nexport function useIpfs() {\n  const { account } = useAccount();\n  const { instance } = inject(\"IpfsProvider\");\n\n  watch(account, async () => {\n    if (instance.value) {\n      instance.value.authClear();\n    }\n  });\n\n  return instance.value;\n}\n","import { u8aToString } from \"@polkadot/util\";\nimport { utils } from \"robonomics-interface\";\n\nconst clearJson = (string) => {\n  return string\n    .replaceAll(\"'\", '\"')\n    .replaceAll(\"\\\\\", \"\")\n    .replaceAll('\"\"', '\"')\n    .replaceAll(\"True\", \"true\")\n    .replaceAll(\"False\", \"false\")\n    .replaceAll(\"None\", '\"None\"');\n};\n\nexport const parseJson = (string) => {\n  try {\n    return JSON.parse(string);\n  } catch (error) {\n    console.log(\"error parse 1\");\n  }\n  try {\n    return JSON.parse(clearJson(string));\n  } catch (error) {\n    console.log(\"error parse 2\");\n    console.log(string);\n  }\n  return false;\n};\n\nconst getLastIndex = async (robonomics, address) => {\n  const id = await robonomics.datalog.getLastId(address);\n  return id.id;\n};\nexport const getLastDatalog = async (robonomics, controller) => {\n  // console.log(\"getLastDatalog\");\n  if (!controller) {\n    return false;\n  }\n  const lastIndex = await getLastIndex(robonomics, controller);\n  if (lastIndex !== null && lastIndex >= 0) {\n    const last = await robonomics.datalog.readByIndex(controller, lastIndex);\n    return { timestamp: last[0].toNumber(), cid: u8aToString(last[1]) };\n  }\n  return false;\n};\n\n// export const getLastDatalog = async (robonomics, controller) => {\n//   console.log(\"getLastDatalog\");\n//   if (!controller) {\n//     return false;\n//   }\n//   const result = await robonomics.datalog.read(controller);\n//   if (!result.length) {\n//     return false;\n//   }\n//   const last = result[result.length - 1];\n//   return { timestamp: last[0].toNumber(), cid: u8aToString(last[1]) };\n// };\n\nexport const getConfigCid = async (robonomics, controller, twin_id) => {\n  // console.log(\"getConfigCid\");\n  if (!controller || (!twin_id && twin_id !== 0)) {\n    return false;\n  }\n  const twin = await robonomics.twin.getTwin(twin_id);\n  if (!twin) {\n    return false;\n  }\n  const configHex = Object.keys(twin).find((key) => twin[key] === controller);\n  if (!configHex) {\n    return false;\n  }\n  return utils.hexToCid(configHex);\n};\n","import configApp from \"@/config\";\nimport { useIpfs } from \"@/hooks/useIpfs\";\nimport { useRobonomics } from \"@/hooks/useRobonomics\";\nimport { createPair, encryptor } from \"@/utils/encryptor\";\nimport { getConfigCid, getLastDatalog, parseJson } from \"@/utils/telemetry\";\nimport { hexToU8a, u8aToString } from \"@polkadot/util\";\nimport { decodeAddress } from \"@polkadot/util-crypto\";\nimport { ref, watch } from \"vue\";\nimport { useStore } from \"vuex\";\n\nexport const chainSS58 = 32;\n\nconst catFile = async (store, ipfs, cid) => {\n  if (!cid) {\n    return false;\n  }\n  const res = await ipfs.catViaGateways(\n    store.state.robonomicsUIvue.ipfs.gateways,\n    cid\n  );\n  store.commit(\"ipfs/setActiveGateway\", res.gateway);\n  return res.result;\n};\n\nexport const decryptData = async (encryptedMsg, controller, account) => {\n  if (encryptedMsg) {\n    try {\n      const controllerPublicKey = decodeAddress(controller);\n      const seed = account.decryptMessage(\n        hexToU8a(encryptedMsg[account.address]),\n        controllerPublicKey\n      );\n      const admin = encryptor(createPair(u8aToString(seed)));\n      const data = admin.decryptMessage(\n        hexToU8a(encryptedMsg.data),\n        controllerPublicKey\n      );\n      return parseJson(u8aToString(data));\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n  return false;\n};\n\nexport const readFileDecrypt = async (\n  cid,\n  controller,\n  account,\n  store,\n  ipfs\n) => {\n  if (cid) {\n    const data = await catFile(store, ipfs, cid);\n    if (!data) {\n      console.log(`Error: ${cid} not found in ipfs`);\n      throw new Error(`${cid} not found in ipfs`);\n    }\n    const result = await decryptData(data, controller, account);\n    if (result) {\n      return result;\n    } else {\n      console.log(`Error: decryptMsg`);\n      throw new Error(`decryptMsg`);\n    }\n  }\n  return null;\n};\n\nconst loadSetup = (store) => {\n  if (store.state.robonomicsUIvue.rws.active) {\n    const setupRaw = store.state.robonomicsUIvue.rws.list.find(\n      (item) => item.owner === store.state.robonomicsUIvue.rws.active\n    );\n    if (setupRaw) {\n      try {\n        return {\n          controller: setupRaw.controller.address,\n          owner: setupRaw.owner\n        };\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n  return false;\n};\n\nexport const useSetup = () => {\n  const controller = ref(null);\n  const owner = ref(null);\n\n  const store = useStore();\n\n  watch(\n    () => store.state.robonomicsUIvue.rws.active,\n    () => {\n      const setup = loadSetup(store);\n      if (setup) {\n        controller.value = setup.controller;\n        owner.value = setup.owner;\n      }\n    },\n    { immediate: true }\n  );\n\n  return { controller, owner };\n};\n\nexport const notify = (store, text, timeout = 3000) => {\n  store.dispatch(\"app/setStatus\", {\n    value: text,\n    timeout\n  });\n  // console.log(text);\n};\n\nexport const setStatusLaunch = (store, command, status) => {\n  store.commit(\n    \"rws/setLaunch\",\n    JSON.stringify({ ...command, tx: { tx_status: status } })\n  );\n};\n\nexport const useLastDatalog = () => {\n  const cid = ref(null);\n  const updateTime = ref(null);\n  const data = ref(null);\n\n  const store = useStore();\n  const ipfs = useIpfs();\n  const { isReady, getInstance } = useRobonomics();\n  const { controller } = useSetup();\n\n  (async () => {\n    if (isReady.value && controller.value) {\n      const robonomics = getInstance();\n      const datalog = await getLastDatalog(robonomics, controller.value);\n      cid.value = datalog.cid;\n      updateTime.value = datalog.timestamp;\n      try {\n        data.value = await readFileDecrypt(\n          cid.value,\n          controller.value,\n          robonomics.accountManager.encryptor(),\n          store,\n          ipfs\n        );\n      } catch (error) {\n        console.log(error);\n        notify(store, error.message);\n      }\n    }\n  })();\n\n  return { cid, updateTime, data };\n};\n\nexport const useConfig = () => {\n  const config = ref(null);\n\n  const store = useStore();\n  const ipfs = useIpfs();\n  const { isReady, getInstance, accountManager } = useRobonomics();\n  const { controller } = useSetup();\n\n  const getConfig = async (controller) => {\n    const endpoint =\n      localStorage.getItem(\"rpc-parachain\") || configApp.default_rpc_endpoint;\n    const lsKey = `haconfig:${endpoint}:${controller}`;\n\n    if (!isReady.value) {\n      const data = localStorage.getItem(lsKey);\n      if (data) {\n        try {\n          const parsedData = JSON.parse(data);\n          console.log(\"getConfig cache\");\n          return { data: parsedData.value, cache: true };\n        } catch (error) {\n          console.log(\"haconfig bad\", error);\n        }\n      } else {\n        return { data: null, cache: true };\n      }\n    } else {\n      const robonomics = getInstance();\n\n      const datalog = await getLastDatalog(robonomics, controller);\n      const result = await readFileDecrypt(\n        datalog.cid,\n        controller,\n        accountManager.encryptor(),\n        store,\n        ipfs\n      );\n\n      if (result) {\n        const twin_id = result.twin_id;\n        notify(store, `Twin id #${twin_id}`);\n\n        notify(store, `Start load config`);\n        const cid = await getConfigCid(robonomics, controller, twin_id);\n        if (!cid) {\n          console.log(\"Config not found\");\n          console.log(\"controller\", controller);\n          console.log(\"twin_id\", twin_id);\n        }\n\n        const config = await readFileDecrypt(\n          cid,\n          controller,\n          accountManager.encryptor(),\n          store,\n          ipfs\n        );\n\n        localStorage.setItem(\n          lsKey,\n          JSON.stringify({ time: Date.now(), value: config })\n        );\n        console.log(\"getConfig chain\");\n\n        return { data: config, cache: false };\n      }\n    }\n    return { data: null, cache: false };\n  };\n\n  const load = async () => {\n    notify(store, \"Find twin id\");\n\n    if (\n      !controller.value ||\n      !accountManager.account ||\n      accountManager.account.type !== \"ed25519\"\n    ) {\n      notify(store, \"Error\");\n      return;\n    }\n\n    let result;\n    try {\n      result = await getConfig(controller.value);\n    } catch (error) {\n      console.log(error);\n      notify(store, \"Error: \" + error.message);\n      return;\n    }\n\n    config.value = result.data;\n    if (result.cache) {\n      const stop = watch(\n        isReady,\n        async () => {\n          if (isReady.value) {\n            try {\n              const result = await getConfig(controller.value);\n              config.value = result.data;\n              stop();\n            } catch (error) {\n              console.log(error);\n              notify(store, \"Error: \" + error.message);\n            }\n          }\n        },\n        { immediate: true }\n      );\n    }\n\n    if (config.value !== null) {\n      notify(store, `Config loaded`);\n    }\n  };\n\n  return { config, load };\n};\n","import { useDevices } from \"@/hooks/useDevices\";\nimport { useIpfs } from \"@/hooks/useIpfs\";\nimport { useRobonomics } from \"@/hooks/useRobonomics\";\nimport { useSend } from \"@/hooks/useSend\";\nimport { getLastDatalog } from \"@/utils/telemetry\";\nimport { stringToU8a, u8aToHex } from \"@polkadot/util\";\nimport { decodeAddress } from \"@polkadot/util-crypto\";\nimport { onUnmounted, ref, watch } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { notify, readFileDecrypt, setStatusLaunch, useSetup } from \"./common\";\n\nexport const useData = () => {\n  const cid = ref(null);\n  const updateTime = ref(null);\n  const data = ref(null);\n\n  const store = useStore();\n  const ipfs = useIpfs();\n  const { isReady, getInstance, accountManager } = useRobonomics();\n  const transaction = useSend();\n  const devices = useDevices();\n  const { controller, owner } = useSetup();\n\n  watch(\n    () => store.state.robonomicsUIvue.rws.active,\n    () => {\n      devices.owner.value = store.state.robonomicsUIvue.rws.active;\n    },\n    { immediate: true }\n  );\n\n  let unsubscribeDatalog;\n  const watchDatalog = async () => {\n    if (!isReady.value) {\n      return;\n    }\n    unsubscribeDatalog = await getInstance().datalog.on(\n      { method: \"NewRecord\" },\n      (results) => {\n        const r = results.filter((item) => {\n          return (\n            item.success &&\n            controller.value &&\n            item.data[0].toHuman() === controller.value\n          );\n        });\n        for (const item of r) {\n          updateTime.value = item.data[1].toNumber();\n          cid.value = item.data[2].toHuman();\n        }\n      }\n    );\n  };\n\n  watch(cid, async () => {\n    try {\n      data.value = await readFileDecrypt(\n        cid.value,\n        controller.value,\n        accountManager.encryptor(),\n        store,\n        ipfs\n      );\n    } catch (error) {\n      console.log(error);\n      notify(store, error.message);\n    }\n  });\n\n  const run = async () => {\n    if (controller.value) {\n      if (isReady.value) {\n        const datalog = await getLastDatalog(getInstance(), controller.value);\n        cid.value = datalog.cid;\n        updateTime.value = datalog.timestamp;\n        watchDatalog();\n      } else {\n        const stop = watch(isReady, (isReady) => {\n          if (isReady) {\n            run();\n            stop();\n          }\n        });\n      }\n    }\n  };\n\n  const stop = () => {\n    if (unsubscribeDatalog) {\n      unsubscribeDatalog();\n    }\n  };\n\n  onUnmounted(() => {\n    console.log(\"unmount launch\");\n    stop();\n  });\n\n  const launch = async (command) => {\n    console.log(command.launch.params.entity_id, command.tx.tx_status);\n    if (command.tx.tx_status !== \"pending\") {\n      return;\n    }\n\n    notify(store, `Launch command`);\n    console.log(`command ${JSON.stringify(command)}`);\n\n    if (!devices.devices.value.includes(accountManager.account.address)) {\n      notify(store, `Error: You do not have access to device management.`);\n      setStatusLaunch(store, command, \"error\");\n      return;\n    }\n\n    if (!ipfs.isAuth()) {\n      notify(store, `Authorization on ipfs node`);\n      try {\n        const signature = (\n          await accountManager.account.signMsg(\n            stringToU8a(accountManager.account.address)\n          )\n        ).toString();\n        ipfs.auth(owner.value, accountManager.account.address, signature);\n      } catch (error) {\n        if (error.message === \"Cancelled\") {\n          setStatusLaunch(store, command, \"declined\");\n        } else {\n          console.log(error);\n          setStatusLaunch(store, command, \"error\");\n        }\n        return;\n      }\n      setStatusLaunch(store, command, \"approved\");\n    }\n\n    const encryptor = accountManager.encryptor();\n    const controllerPublicKey = decodeAddress(controller.value);\n\n    let commandCid;\n    try {\n      const cmdString = JSON.stringify(command.launch);\n      const cmdCrypto = encryptor.encryptMessage(\n        cmdString,\n        controllerPublicKey\n      );\n      commandCid = await ipfs.add(u8aToHex(cmdCrypto));\n    } catch (error) {\n      setStatusLaunch(store, command, \"error\");\n      notify(store, `Error: ${error.message}`);\n      return;\n    }\n    console.log(`launch ipfs file ${commandCid.path}`);\n\n    if (!isReady.value) {\n      notify(store, `Error: Robonomics is not ready.`);\n      setStatusLaunch(store, command, \"error\");\n      return;\n    }\n\n    notify(store, `Send launch`);\n    const call = getInstance().launch.send(controller.value, commandCid.path);\n    const tx = transaction.createTx();\n    await transaction.send(tx, call, owner.value);\n    if (tx.error.value) {\n      if (tx.error.value !== \"Cancelled\") {\n        setStatusLaunch(store, command, \"error\");\n        notify(store, `Error: ${tx.error.value}`);\n      } else {\n        setStatusLaunch(store, command, \"declined\");\n        notify(store, \"Calcel\");\n      }\n    } else {\n      console.log(command);\n      setStatusLaunch(store, command, \"success\");\n      notify(store, \"Launch sended\");\n    }\n  };\n\n  return { cid, updateTime, data, run, stop, launch };\n};\n","import { render } from \"./Launch.vue?vue&type=template&id=60336642\"\nimport script from \"./Launch.vue?vue&type=script&lang=js\"\nexport * from \"./Launch.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <robo-smarthome-dashboard\n    :config=\"config\"\n    :datalog=\"data\"\n    :updateTime=\"updateTime\"\n  />\n</template>\n\n<script>\nimport { watch } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { useData } from \"./libp2p\";\n\nexport default {\n  props: {\n    isKey: {\n      default: false,\n      type: Boolean\n    },\n    config: {\n      default: null,\n      type: Object\n    }\n  },\n  emits: [\"connected\", \"error\"],\n  setup(props, { emit }) {\n    const { data, updateTime, run, launch } = useData();\n    const store = useStore();\n\n    const isOnce = props.isKey && props.config !== null;\n    const stop = watch(\n      () => [props.isKey, props.config],\n      ([isKey, config]) => {\n        if (isKey && config !== null) {\n          if (!isOnce && typeof stop === \"function\") {\n            stop();\n          }\n          if (config.peer_id) {\n            (async () => {\n              const result = await run(\n                config.peer_id,\n                config.libp2p_multiaddress\n              );\n              if (result) {\n                emit(\"connected\", result);\n                if (!result.protoNames().includes(\"p2p-circuit\")) {\n                  const gateway = `http://${\n                    result.nodeAddress().address\n                  }:8080/ipfs/`;\n                  if (\n                    store.state.robonomicsUIvue.ipfs.activegateway !== gateway\n                  ) {\n                    console.log(\"set local gateway\", gateway);\n                    store.commit(\"ipfs/setActiveGateway\", gateway);\n                  }\n                } else {\n                  console.log(\"relay\");\n                }\n              } else {\n                emit(\"error\", new Error(\"connect\"));\n              }\n            })();\n          } else {\n            emit(\"error\", new Error(\"not found peer_id\"));\n          }\n        }\n      },\n      { immediate: true, once: isOnce }\n    );\n\n    watch(\n      () => store.state.robonomicsUIvue.rws.launch,\n      (value) => {\n        try {\n          launch(JSON.parse(value));\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    );\n\n    return { data, updateTime };\n  }\n};\n</script>\n","import { pipe } from \"it-pipe\";\nimport { fromString as uint8ArrayFromString } from \"uint8arrays/from-string\";\nimport { toString as uint8ArrayToString } from \"uint8arrays/to-string\";\n\nexport function createHa() {\n  return (components) => {\n    async function getRequest(stream) {\n      return pipe(stream, async function (source) {\n        let result = \"\";\n        for await (const data of source) {\n          result += uint8ArrayToString(data.subarray());\n        }\n        return JSON.parse(result);\n      });\n    }\n\n    async function sendResponse(stream, msg) {\n      return pipe(\n        [uint8ArrayFromString(JSON.stringify(msg))],\n        stream.sink\n      ).finally(() => {\n        stream.close();\n      });\n    }\n\n    return {\n      async handle(\n        protocol,\n        handler,\n        options = {\n          runOnTransientConnection: true\n        }\n      ) {\n        await components.registrar.handle(\n          protocol,\n          async ({ stream }) => {\n            handler(await getRequest(stream), stream);\n          },\n          options\n        );\n      },\n      async request(\n        connection,\n        protocol,\n        data,\n        options = {\n          runOnTransientConnection: true\n        }\n      ) {\n        if (connection.status !== \"open\") {\n          return;\n        }\n        const stream = await connection.newStream([protocol], options);\n        return pipe(\n          [uint8ArrayFromString(JSON.stringify(data))],\n          stream,\n          async function (source) {\n            let result = \"\";\n            for await (const data of source) {\n              result += uint8ArrayToString(data.subarray());\n            }\n            try {\n              // stream.close();\n              return JSON.parse(result);\n            } catch (error) {\n              return result;\n            }\n          }\n        );\n      },\n      utils: {\n        getRequest,\n        sendResponse\n      }\n    };\n  };\n}\n","import { noise } from \"@chainsafe/libp2p-noise\";\nimport { circuitRelayTransport } from \"@libp2p/circuit-relay-v2\";\nimport { identify } from \"@libp2p/identify\";\n// import { keychain } from \"@libp2p/keychain\";\n// import { defaultLogger } from \"@libp2p/logger\";\nimport { mplex } from \"@libp2p/mplex\";\n// import { webRTC } from \"@libp2p/webrtc\";\nimport { webSockets } from \"@libp2p/websockets\";\nimport * as filters from \"@libp2p/websockets/filters\";\nimport { multiaddr } from \"@multiformats/multiaddr\";\n// import { LevelDatastore } from \"datastore-level\";\n// import { Key } from \"interface-datastore\";\nimport { createLibp2p } from \"libp2p\";\nimport { createHa } from \"./ha\";\n\nexport async function createNode() {\n  // const selfKey = new Key(\"/pkcs8/self\");\n  // const datastore = new LevelDatastore(`libp2p/data`);\n  // const chain = keychain()({\n  //   datastore: datastore,\n  //   logger: defaultLogger()\n  // });\n  // let peerId;\n  // if (await datastore.has(selfKey)) {\n  //   peerId = await chain.exportPeerId(\"self\");\n  // }\n  const node = await createLibp2p({\n    // peerId: peerId,\n    // addresses: {\n    //   listen: [\"/webrtc\"]\n    // },\n    transports: [\n      webSockets({\n        filter: filters.all\n      }),\n      // webRTC(),\n      circuitRelayTransport()\n    ],\n    streamMuxers: [mplex()],\n    connectionEncryption: [noise()],\n    services: {\n      identify: identify(),\n      ha: createHa()\n    },\n    connectionGater: {\n      denyDialMultiaddr: () => {\n        return false;\n      }\n    },\n    connectionManager: {\n      minConnections: 0\n    }\n  });\n  // if (chain != null && !(await datastore.has(selfKey))) {\n  //   await chain.importPeer(\"self\", node.peerId);\n  // }\n  return node;\n}\nexport function defaultRelay(peer_id) {\n  return multiaddr(\n    `/dns4/libp2p-relay-1.robonomics.network/tcp/443/wss/p2p/12D3KooWEMFXXvpZUjAuj1eKR11HuzZTCQ5HmYG9MNPtsnqPSERD/p2p-circuit/p2p/${peer_id}`\n  );\n}\nexport async function connectMultiaddress(peer_id, peer_multiaddress) {\n  if (peer_multiaddress.length > 0) {\n    const localMultiaddrs = [];\n    const circuit = [];\n    for (const peer_multiaddr of peer_multiaddress) {\n      const localMultiaddr = multiaddr(peer_multiaddr);\n      const protos = localMultiaddr.protoNames();\n      if (protos.includes(\"ws\") || protos.includes(\"wss\")) {\n        if (protos.includes(\"p2p-circuit\")) {\n          circuit.push(localMultiaddr);\n        } else if (\n          window.location.protocol !== \"https:\" ||\n          protos.includes(\"wss\")\n        ) {\n          localMultiaddrs.push(localMultiaddr);\n        }\n      }\n    }\n\n    if (localMultiaddrs.length > 0) {\n      for (const addr of localMultiaddrs) {\n        try {\n          await connect(addr);\n          return addr;\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    }\n\n    if (circuit.length > 0) {\n      for (const addr of circuit) {\n        try {\n          await connect(addr);\n          return addr;\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    }\n  }\n  try {\n    const addr = defaultRelay(peer_id);\n    await connect(addr);\n    return addr;\n  } catch (error) {\n    console.log(error);\n  }\n  return false;\n}\n\nlet node = null;\nlet connections = [];\nlet connection = null;\n\nexport async function start() {\n  if (node) {\n    return node;\n  }\n  node = await createNode();\n  await node.start();\n  console.log(`Node started with id ${node.peerId.toString()}`);\n\n  function updateConnectionsList() {\n    connections = node.getConnections().map((item) => {\n      return item.remoteAddr.toString();\n    });\n    console.log(\"Update Connections List\", connections);\n  }\n\n  node.addEventListener(\"connection:open\", (event) => {\n    console.log(\"connected\", event.detail.remoteAddr.toString());\n    updateConnectionsList();\n  });\n\n  node.addEventListener(\"connection:close\", (event) => {\n    console.log(\"disconected\", event.detail.remoteAddr.toString());\n    updateConnectionsList();\n    setTimeout(() => {\n      if (\n        connection &&\n        event.detail.remoteAddr.toString() === connection.remoteAddr.toString()\n      ) {\n        console.log(\"reconnect\");\n        reconnect(connection.remoteAddr.toString());\n      }\n    }, 10000);\n  });\n\n  return node;\n}\n\nexport async function reconnect(addr) {\n  try {\n    await connect(addr);\n  } catch (error) {\n    console.log(error);\n    // setTimeout(async () => {\n    //   if (addr && !connections.includes(addr)) {\n    //     await reconnect(addr);\n    //   }\n    // }, 3000);\n  }\n}\nexport async function connect(addr) {\n  console.log(\"connect to\", addr.toString());\n  if (!connections.includes(addr)) {\n    const listenerMultiaddr = multiaddr(addr);\n    connection = await node.dial(listenerMultiaddr);\n  }\n  return addr;\n}\n\nexport async function disconnect() {\n  if (connection) {\n    await connection.close();\n  }\n  connection = null;\n}\n\nexport function request(data, protocol = \"/call\") {\n  if (node && connection) {\n    return node.services.ha.request(connection, protocol, data);\n  }\n  throw new Error(\"error\");\n}\n","import { useDevices } from \"@/hooks/useDevices\";\nimport { useRobonomics } from \"@/hooks/useRobonomics\";\nimport {\n  connectMultiaddress,\n  disconnect,\n  request,\n  start\n} from \"@/utils/libp2p/libp2p\";\nimport { u8aToHex } from \"@polkadot/util\";\nimport { decodeAddress } from \"@polkadot/util-crypto\";\nimport { onUnmounted, ref, watch } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { decryptData, notify, setStatusLaunch, useSetup } from \"./common\";\n\nexport const useData = () => {\n  const data = ref(null);\n  const updateTime = ref(null);\n\n  const store = useStore();\n  const { accountManager } = useRobonomics();\n  const devices = useDevices();\n  const { controller } = useSetup();\n\n  watch(\n    () => store.state.robonomicsUIvue.rws.active,\n    () => {\n      devices.owner.value = store.state.robonomicsUIvue.rws.active;\n    },\n    { immediate: true }\n  );\n\n  onUnmounted(() => {\n    disconnect();\n  });\n\n  const run = async (peer_id, peer_multiaddress) => {\n    const node = await start();\n    try {\n      notify(store, `Connect to peer id ${peer_id}`);\n      const connected = await connectMultiaddress(peer_id, peer_multiaddress);\n      if (connected) {\n        notify(store, `Connected`);\n        const protocols = node.getProtocols();\n        if (protocols.includes(\"/update\")) {\n          await node.unhandle(\"/update\");\n        }\n        node.services.ha.handle(\"/update\", async (dataRaw, stream) => {\n          const result = await decryptData(\n            dataRaw.data,\n            controller.value,\n            accountManager.encryptor()\n          );\n          if (result) {\n            data.value = result;\n            updateTime.value = Date.now();\n            await node.services.ha.utils.sendResponse(stream, {\n              result: true\n            });\n          } else {\n            notify(store, `Error: decryptMsg`);\n          }\n        });\n        return connected;\n      }\n    } catch (error) {\n      notify(store, `Error: ${error.message}`);\n      console.log(error);\n    }\n    return false;\n  };\n\n  const launch = async (command) => {\n    console.log(command.launch.params.entity_id, command.tx.tx_status);\n    if (command.tx.tx_status !== \"pending\") {\n      return;\n    }\n\n    notify(store, `Launch command`);\n\n    if (!devices.devices.value.includes(accountManager.account.address)) {\n      notify(store, `Error: You do not have access to device management.`);\n      setStatusLaunch(store, command, \"error\");\n      return;\n    }\n\n    try {\n      const encryptor = accountManager.encryptor();\n      const controllerPublicKey = decodeAddress(controller.value);\n      const cmdString = JSON.stringify(command.launch);\n      const cmdCrypto = encryptor.encryptMessage(\n        cmdString,\n        controllerPublicKey\n      );\n      const response = await request({\n        data: {\n          sender: accountManager.account.address,\n          data: u8aToHex(cmdCrypto)\n        }\n      });\n      console.log(`response:`, response);\n\n      setStatusLaunch(store, command, \"success\");\n    } catch (error) {\n      console.log(error);\n      notify(store, `Error: Check status of the HomeAssistant.`);\n      setStatusLaunch(store, command, \"error\");\n    }\n  };\n\n  return { data, updateTime, run, launch };\n};\n","import { render } from \"./Libp2p.vue?vue&type=template&id=7c97fef3\"\nimport script from \"./Libp2p.vue?vue&type=script&lang=js\"\nexport * from \"./Libp2p.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./Telemetry.vue?vue&type=template&id=a5d8ec2e\"\nimport script from \"./Telemetry.vue?vue&type=script&lang=js\"\nexport * from \"./Telemetry.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createRouter, createWebHashHistory } from \"vue-router\";\nimport Altruist from \"./views/hardware/Altruist.vue\";\nimport Hikikomori from \"./views/hardware/Hikikomori.vue\";\nimport Riscv from \"./views/hardware/Riscv.vue\";\nimport SeasonPass2 from \"./views/hardware/Season-pass-2.vue\";\nimport SeasonPass from \"./views/hardware/Season-pass.vue\";\nimport Home from \"./views/Home.vue\";\nimport Humanoid from \"./views/humanoid/RobonomicsApp.vue\";\nimport PathNotFound from \"./views/PathNotFound.vue\";\nimport RwsActivate from \"./views/RwsActivate.vue\";\nimport RwsSetup from \"./views/RwsSetup.vue\";\nimport RwsSetupNew from \"./views/RwsSetupNew.vue\";\n// import Services from \"./views/Services.vue\";\nimport EnergyMonitor from \"./views/hardware/Energy-monitor.vue\";\nimport SaveSetup from \"./views/saveSetup/Page.vue\";\nimport Telemetry from \"./views/telemetry/Telemetry.vue\";\n\nconst routes = [\n  {\n    path: \"/\",\n    name: \"Home\",\n    component: Home,\n    meta: {\n      title: \"Dashboard\"\n    }\n  },\n  {\n    path: \"/rws-buy\",\n    name: \"rwsActivate\",\n    component: RwsActivate,\n    meta: {\n      title: \"Buy a Subscription\"\n    }\n  },\n  {\n    path: \"/rws-setup\",\n    name: \"rwsSetup\",\n    component: RwsSetup,\n    meta: {\n      title: \"Setup a Subscription\"\n    }\n  },\n  {\n    path: \"/rws-setup-new\",\n    name: \"rwsSetupNew\",\n    component: RwsSetupNew,\n    meta: {\n      title: \"New Subscription setup\"\n    }\n  },\n  {\n    path: \"/telemetry\",\n    name: \"telemetry\",\n    component: Telemetry,\n    meta: {\n      title: \"Devices control panel\"\n    }\n  },\n  // {\n  //   path: \"/services\",\n  //   name: \"services\",\n  //   component: Services,\n  //   meta: {\n  //     title: \"Services\"\n  //   }\n  // },\n  {\n    path: \"/hardware/altruist\",\n    name: \"Altruist\",\n    component: Altruist,\n    meta: {\n      title: \"Altruist\"\n    }\n  },\n  {\n    path: \"/hardware/riscv\",\n    name: \"Riscv\",\n    component: Riscv,\n    meta: {\n      title: \"Riscv\"\n    }\n  },\n  {\n    path: \"/hardware/hikikomori\",\n    name: \"Hikikomori\",\n    component: Hikikomori,\n    meta: {\n      title: \"Hikikomori\"\n    }\n  },\n  {\n    path: \"/hardware/season-pass\",\n    name: \"SeasonPass\",\n    component: SeasonPass,\n    meta: {\n      title: \"Season Pass\"\n    }\n  },\n  {\n    path: \"/hardware/season-pass-2\",\n    name: \"SeasonPass2\",\n    component: SeasonPass2,\n    meta: {\n      title: \"Season Pass 2\"\n    }\n  },\n  {\n    path: \"/hardware/energy-monitor\",\n    name: \"EnergyMonitor\",\n    component: EnergyMonitor,\n    meta: {\n      title: \"Energy Monitor\"\n    }\n  },\n  {\n    path: \"/humanoid\",\n    name: \"Humanoid\",\n    component: Humanoid,\n    meta: {\n      title: \"Pay the robot with cryptocurrency\"\n    }\n  },\n  {\n    path: \"/altruist/:address?\",\n    props: true,\n    name: \"AltruistPage\",\n    component: () => import(\"./views/altruist/Page.vue\"),\n    meta: {\n      title: \"Altruist\"\n    }\n  },\n  {\n    path: \"/energy-monitor/:address?\",\n    props: true,\n    name: \"EnergytMonitorPage\",\n    component: () => import(\"./views/energyMonitor/Page.vue\"),\n    meta: {\n      title: \"Energy\"\n    }\n  },\n  {\n    path: \"/dtwin\",\n    name: \"DTwinPage\",\n    component: () => import(\"./views/dtwin/Page.vue\"),\n    meta: {\n      title: \"Digital Twin\"\n    }\n  },\n  {\n    path: \"/save-setup\",\n    name: \"save-setup\",\n    component: SaveSetup,\n    meta: {\n      title: \"Savesetup\"\n    }\n  },\n  { path: \"/:pathMatch(.*)*\", component: PathNotFound }\n];\n\nconst router = createRouter({\n  history: createWebHashHistory(),\n  routes\n});\n\nexport default router;\n","import { createStore } from \"vuex\";\n\nconst store = createStore({\n  state: {\n    name: \"Vue\"\n  }\n});\n\nexport default store;\n","import { fromUnit } from \"./tools\";\nexport default {\n  install: (app) => {\n    app.config.globalProperties.$filters = {\n      balance(value, decimals, symbol) {\n        if (\n          typeof value === \"string\" ||\n          typeof value === \"number\" ||\n          typeof value === \"bigint\"\n        ) {\n          return `${fromUnit(value, decimals, 4)} ${symbol}`;\n        }\n        return \"\";\n      }\n    };\n  }\n};\n","import { Buffer } from \"buffer\";\nimport { robonomicsUI } from \"robonomics-ui-vue\";\nimport { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport ipfs from \"./plugins/ipfs\";\nimport robonomics from \"./plugins/robonomics\";\nimport web3 from \"./plugins/web3\";\nimport router from \"./router\";\nimport store from \"./store\";\nimport filters from \"./utils/filters\";\nimport { showVersion } from \"./utils/tools\";\n\nimport \"robonomics-ui-vue/style.css\";\n\nwindow.Buffer = Buffer;\n\nshowVersion();\n\nconst app = createApp(App);\n\napp\n  .use(router)\n  .use(store)\n  .use(filters)\n  .use(robonomics)\n  .use(web3)\n  .use(ipfs, {\n    api: { gateway: \"https://ipfs.url.today\" },\n    gateways: [\n      \"https://ipfs.url.today/ipfs/\",\n      \"https://ipfs.io/ipfs/\",\n      \"https://gateway.pinata.cloud/ipfs/\",\n      \"https://aira.mypinata.cloud/ipfs/\"\n    ]\n  })\n  .use(robonomicsUI, { store })\n  .mount(\"#app\");\n","<template>\n  <robo-select\n    v-if=\"twins !== undefined && twins.length > 0\"\n    :options=\"twins\"\n    :values=\"twins\"\n    v-model=\"twinId\"\n    size=\"small\"\n    label=\"Choose digital twin\"\n    block\n  />\n  <robo-status v-else-if=\"twins !== undefined && !isLoading\" type=\"warning\">\n    Digital twins do not exist\n  </robo-status>\n  <robo-text v-if=\"isLoading\" weight=\"normal-italic\" align=\"center\">\n    <robo-loader size=\"1.5\" /> Loading\n  </robo-text>\n</template>\n\n<script>\nimport { ref, watch } from \"vue\";\nimport { useTwins } from \"./dtwin\";\n\nexport default {\n  emits: [\"change\"],\n  setup(_, { emit }) {\n    const { twins, isLoading } = useTwins(true);\n    const twinId = ref();\n\n    watch(\n      twins,\n      (twins) => {\n        if (twinId.value === undefined && twins && twins.length > 0) {\n          twinId.value = twins[twins.length - 1];\n        }\n      },\n      { immediate: true }\n    );\n\n    watch(twinId, (twinId) => {\n      emit(\"change\", twinId);\n    });\n\n    return {\n      twins,\n      twinId,\n      isLoading\n    };\n  }\n};\n</script>\n","import { render } from \"./SelectTwin.vue?vue&type=template&id=41307847\"\nimport script from \"./SelectTwin.vue?vue&type=script&lang=js\"\nexport * from \"./SelectTwin.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { inject } from \"vue\";\n\nexport function useRobonomics() {\n  const provider = inject(\"RobonomicsProvider\");\n  return {\n    accountManager: provider.accountManager,\n    isReady: provider.isReady,\n    robonomics: provider.instance,\n    getInstance: () => provider.instance.value\n  };\n}\n","import configApp from \"@/config\";\nimport { useAccount } from \"@/hooks/useAccount\";\nimport { useDevices } from \"@/hooks/useDevices\";\nimport { useRobonomics } from \"@/hooks/useRobonomics\";\nimport { useSend } from \"@/hooks/useSend\";\nimport {\n  cidToHex,\n  hexToCid,\n  stringToHex\n} from \"robonomics-interface/dist/utils\";\nimport { ref, toRef, watch } from \"vue\";\n\n/**\n * Stores the list of digital twin IDs and the total count of digital twins for\n * the given account in the local storage. The storage key is based on the\n * current parachain endpoint and the account address.\n *\n * @param {string} account - The account address.\n * @param {number} total - The total number of digital twins.\n * @param {string[]} twins - The list of digital twin IDs.\n */\nconst setCache = (account, total, twins) => {\n  const endpoint =\n    localStorage.getItem(\"rpc-parachain\") || configApp.default_rpc_endpoint;\n  localStorage.setItem(\n    `twins:${new URL(endpoint).host}:${account}`,\n    JSON.stringify({ total, twins })\n  );\n};\n\n/**\n * Retrieves the cached digital twin data for a given account from local storage.\n * The storage key is based on the current parachain endpoint and the account address.\n *\n * @param {string} account - The account address.\n * @returns {Object} - An object containing the total number of digital twins and the list of twin IDs.\n *                     If no cache is found, returns an object with total set to false and twins as an empty array.\n */\nexport const getCache = (account) => {\n  const endpoint =\n    localStorage.getItem(\"rpc-parachain\") || configApp.default_rpc_endpoint;\n  try {\n    const result = JSON.parse(\n      localStorage.getItem(`twins:${new URL(endpoint).host}:${account}`)\n    );\n    if (result) {\n      return result;\n    }\n  } catch (e) {\n    console.log(e);\n  }\n  return { total: false, twins: [] };\n};\n\n/**\n * Queries the total number of digital twins in the parachain.\n *\n * @param {Robonomics} robonomics - The Robonomics API instance.\n * @returns {Promise<number>} - The total number of digital twins.\n */\nexport const getTotal = async (robonomics) => {\n  return await robonomics.twin.getTotal();\n};\n\n/**\n * Queries the digital twin IDs for a given account address, starting from a given index.\n * The function returns an object containing the total number of digital twins and the list of twin IDs.\n *\n * @param {Robonomics} robonomics - The Robonomics API instance.\n * @param {string} address - The account address.\n * @param {number} [startIndex=0] - The starting index for the query.\n * @returns {Promise<Object>} - An object containing the total number of digital twins and the list of twin IDs.\n */\nconst twinsByAccount = async (robonomics, address, startIndex = 0) => {\n  const twins = [];\n  const total = await getTotal(robonomics);\n  for (let id = startIndex; id < total; id++) {\n    const owner = await robonomics.twin.getOwner(id);\n    if (owner === address) {\n      twins.push(id);\n    }\n  }\n  return { total, twins };\n};\n\n/**\n * Queries the digital twin IDs for a given account address and stores them in local storage.\n *\n * @param {Robonomics} robonomics - The Robonomics API instance.\n * @param {string} address - The account address.\n * @returns {Promise<number[]>} - The list of digital twin IDs.\n */\nexport const loadTwins = async (robonomics, address) => {\n  const { total, twins } = await twinsByAccount(robonomics, address);\n  setCache(address, total, twins);\n  return twins;\n};\n\n/**\n * Converts a given token (hex-string) to a utf-8 encoded string.\n * @param {string} token - A token (hex-string).\n * @returns {string} The utf-8 encoded string.\n */\nexport const tokenToString = (token) => {\n  token = token.replace(/^0x/, \"\").replace(/^00+/, \"\");\n  if (token.length % 2 !== 0) {\n    token = \"0\" + token;\n  }\n  return Buffer.from(token, \"hex\").toString(\"utf8\");\n};\n\n/**\n * Converts a given token (hex-string) to a Content-Addressed Identifier (CID).\n * @param {string} token - A token (hex-string).\n * @returns {string} The Content-Addressed Identifier (CID).\n */\nexport const tokenToCid = (token) => {\n  return hexToCid(token);\n};\n\n/**\n * A hook that returns the digital twin data for a given digital twin ID.\n * The hook listens to changes of the given `id` ref and updates the `twin` ref\n * with the corresponding digital twin data.\n *\n * @param {Ref<number>} id - The digital twin ID.\n * @returns {Object} - An object containing a `twin` ref with the digital twin data.\n */\nexport function useTwin(id) {\n  const { getInstance } = useRobonomics();\n  const twin = ref();\n\n  watch(\n    id,\n    async (twinId) => {\n      if (twinId >= 0) {\n        const robonomics = getInstance();\n        twin.value = await robonomics.twin.getTwin(twinId);\n      }\n    },\n    { immediate: true }\n  );\n\n  return { twin };\n}\n\n/**\n * A hook that returns the list of digital twin IDs for a given account address.\n * The hook listens to changes of the given `account` ref and updates the `twins` ref\n * with the corresponding list of digital twin IDs. The `isLoading` ref indicates if the\n * data is being loaded.\n *\n * @param {boolean} [force=false] - If true, will immediately run the query.\n * @returns {Object} - An object containing a `twins` ref with the list of digital twin IDs,\n * a `isLoading` ref indicating if the data is being loaded, and a `run` function to run\n * the query.\n */\nexport function useTwins(force = false) {\n  const { isReady, getInstance } = useRobonomics();\n  const { account } = useAccount();\n  const twins = ref();\n  const isLoading = ref(false);\n\n  const load = async (account) => {\n    const robonomics = getInstance();\n    const result = getCache(account);\n    let startIndex = 0;\n    if (result.total !== false) {\n      const total = await getTotal(robonomics);\n      if (total === result.total) {\n        twins.value = result.twins;\n        return;\n      } else {\n        startIndex = result.total;\n      }\n    }\n    twins.value = await loadTwins(robonomics, account, startIndex);\n  };\n\n  const run = () => {\n    watch(\n      [account, isReady],\n      async ([account, isReady]) => {\n        if (account && isReady) {\n          isLoading.value = true;\n          await load(account);\n          isLoading.value = false;\n        }\n      },\n      { immediate: true }\n    );\n  };\n  if (force) {\n    run();\n  }\n\n  return {\n    twins,\n    isLoading,\n    run\n  };\n}\n\n/**\n * A hook that returns an object with two functions: `create` and `setSource`.\n * Both functions return a transaction hash after sending the transaction.\n *\n * @function create - Creates a new digital twin. The function takes no arguments.\n * @function setSource - Sets the source of a digital twin. The function takes three arguments:\n *   - `id`: The ID of the digital twin.\n *   - `topic`: The topic of the source. Can be a CID or a string.\n *   - `source`: The source of the digital twin.\n */\nexport function useTwinAction(subscribe) {\n  const { getInstance } = useRobonomics();\n  const transaction = useSend();\n  const { account } = useAccount();\n  if (!subscribe) {\n    subscribe = account;\n  } else {\n    subscribe = toRef(subscribe);\n  }\n  const devices = useDevices(subscribe);\n\n  const create = async () => {\n    const robonomics = getInstance();\n    const call = robonomics.twin.create();\n    const tx = transaction.createTx();\n    if (devices.devices.value.includes(account.value)) {\n      await transaction.send(tx, call, subscribe.value);\n    } else {\n      await transaction.send(tx, call);\n    }\n    return tx;\n  };\n\n  const setSource = async (id, topic, source) => {\n    const robonomics = getInstance();\n    let hex = topic;\n    if (!topic.startsWith(\"0x\")) {\n      try {\n        hex = cidToHex(topic);\n      } catch (_) {\n        hex = stringToHex(topic);\n      }\n    }\n    const call = robonomics.twin.setSource(id, hex, source);\n    const tx = transaction.createTx();\n    if (devices.devices.value.includes(account.value)) {\n      await transaction.send(tx, call, subscribe.value);\n    } else {\n      await transaction.send(tx, call);\n    }\n    return tx;\n  };\n\n  return { create, setSource };\n}\n","export default {\n  default_rpc_endpoint: \"wss://polkadot.rpc.robonomics.network/\",\n  nft_oracle_endpoint: \"https://nft-oracle.robonomics.network/\"\n};\n\n// SEPOLIA\nexport const address = {\n  xrt: \"0x9516AFb2b538CAbDcC04e2289E9d48eEBD8fa6ef\",\n  tokenVesting: \"0xf1ba89053f407DF832b135F19fDB064C7A97E1F3\",\n  nft: \"0x0c0C092f372c3Cb49D116A14fA7dcc40e84275aa\"\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"js/\" + chunkId + \".\" + {\"459\":\"90517406\",\"552\":\"deefca98\",\"730\":\"2e67d9ad\",\"955\":\"bcfe67b1\"}[chunkId] + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"css/\" + chunkId + \".\" + {\"552\":\"c892dec7\",\"730\":\"355dac2f\",\"955\":\"9d5660a1\"}[chunkId] + \".css\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var inProgress = {};\nvar dataWebpackPrefix = \"dapp-robonomics.network:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = function(url, done, key, chunkId) {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = function(prev, event) {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach(function(fn) { return fn(event); });\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"\";","if (typeof document === \"undefined\") return;\nvar createStylesheet = function(chunkId, fullhref, oldTag, resolve, reject) {\n\tvar linkTag = document.createElement(\"link\");\n\n\tlinkTag.rel = \"stylesheet\";\n\tlinkTag.type = \"text/css\";\n\tif (__webpack_require__.nc) {\n\t\tlinkTag.nonce = __webpack_require__.nc;\n\t}\n\tvar onLinkComplete = function(event) {\n\t\t// avoid mem leaks.\n\t\tlinkTag.onerror = linkTag.onload = null;\n\t\tif (event.type === 'load') {\n\t\t\tresolve();\n\t\t} else {\n\t\t\tvar errorType = event && event.type;\n\t\t\tvar realHref = event && event.target && event.target.href || fullhref;\n\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + errorType + \": \" + realHref + \")\");\n\t\t\terr.name = \"ChunkLoadError\";\n\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n\t\t\terr.type = errorType;\n\t\t\terr.request = realHref;\n\t\t\tif (linkTag.parentNode) linkTag.parentNode.removeChild(linkTag)\n\t\t\treject(err);\n\t\t}\n\t}\n\tlinkTag.onerror = linkTag.onload = onLinkComplete;\n\tlinkTag.href = fullhref;\n\n\n\tif (oldTag) {\n\t\toldTag.parentNode.insertBefore(linkTag, oldTag.nextSibling);\n\t} else {\n\t\tdocument.head.appendChild(linkTag);\n\t}\n\treturn linkTag;\n};\nvar findStylesheet = function(href, fullhref) {\n\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n\tfor(var i = 0; i < existingLinkTags.length; i++) {\n\t\tvar tag = existingLinkTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return tag;\n\t}\n\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n\tfor(var i = 0; i < existingStyleTags.length; i++) {\n\t\tvar tag = existingStyleTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\");\n\t\tif(dataHref === href || dataHref === fullhref) return tag;\n\t}\n};\nvar loadStylesheet = function(chunkId) {\n\treturn new Promise(function(resolve, reject) {\n\t\tvar href = __webpack_require__.miniCssF(chunkId);\n\t\tvar fullhref = __webpack_require__.p + href;\n\t\tif(findStylesheet(href, fullhref)) return resolve();\n\t\tcreateStylesheet(chunkId, fullhref, null, resolve, reject);\n\t});\n}\n// object to store loaded CSS chunks\nvar installedCssChunks = {\n\t524: 0\n};\n\n__webpack_require__.f.miniCss = function(chunkId, promises) {\n\tvar cssChunks = {\"552\":1,\"730\":1,\"955\":1};\n\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n\t\tpromises.push(installedCssChunks[chunkId] = loadStylesheet(chunkId).then(function() {\n\t\t\tinstalledCssChunks[chunkId] = 0;\n\t\t}, function(e) {\n\t\t\tdelete installedCssChunks[chunkId];\n\t\t\tthrow e;\n\t\t}));\n\t}\n};\n\n// no hmr\n\n// no prefetching\n\n// no preloaded","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n__webpack_require__.f.j = function(chunkId, promises) {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = function(event) {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkdapp_robonomics_network\"] = self[\"webpackChunkdapp_robonomics_network\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(44744); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createBlock","_component_robo_button","onClick","$setup","create","block","disabled","isProccess","loading","type","isSuccess","default","_withCtx","_cache","_createTextVNode","_","props","emits","setup","emit","useTwinAction","owner","ref","async","value","tx","error","console","log","__exports__","render","getRegistry","registry","TypeRegistry","types","PalletRobonomicsRwsSubscription","_enum","Lifetime","tps","Daily","days","PalletRobonomicsRwsSubscriptionLedger","freeWeight","issueTime","lastUpdate","kind","register","DAYS_TO_MS","getLedger","robonomics","res","rws","isEmpty","getValidUntil","ledger","isLifetime","issue_time","toNumber","isDaily","useSubscription","initialOwner","dataRaw","shallowRef","isReady","getInstance","useRobonomics","devices","loadDevices","useDevices","getReferenceCallWeight","api","consts","referenceCallWeight","endpoint","localStorage","getItem","configApp","default_rpc_endpoint","lsKey","setItem","JSON","stringify","time","Date","now","toJSON","data","cache","undefined","parsedData","parse","createType","getFreeWeightCalc","utps","duration_ms","delta","Math","floor","validUntil","computed","countMonth","isActive","hasSubscription","loadLedger","validateAddress","result","stop","watch","immediate","useSend","accountManager","getCallWeight","signer","account","Error","address","hasPaymentInfo","paymentInfo","weight","checkWeight","freeWeightCalc","callWeight","createTx","process","send","call","subscription","nonce","rpc","system","accountNextIndex","signAndSend","e","message","useAccount","unsubscribe","onChange","getDevices","map","item","toHuman","list","events","on","section","method","event","onUnmounted","_component_main_layout","pagetitle","title","_createVNode","_component_router_view","class","$data","renderComponent","_component_robo_layout_header","key","logoIcon","$props","nav","_component_robo_section","_createElementVNode","_hoisted_1","_component_router_link","to","_ctx","$store","state","robonomicsUIvue","links","activate","exact","setupnew","length","_createElementBlock","_Fragment","_createCommentVNode","_hoisted_2","src","toDecimal","v","Decimal","toString","round","place","todp","fromUnit","decimals","dp","div","pow","showVersion","toExpNeg","toExpPos","String","inject","toRaw","this","RobonomicsProvider","instance","signRaw","polkadot","handlerAccount","handler","extensionObj","newValue","oldValue","$route","$nextTick","methods","unsubscribeBalance","accounts","find","name","setSender","extension","getBalance","r","transferable","free","sub","frozen","commit","chainDecimals","store","useStore","network","connection","navigation","link","repoversion","onMounted","response","fetch","json","__props","active","components","MainLayout","IpfsProvider","router","useRouter","route","useRoute","resolve","path","gateways","meta","resulttitle","document","querySelector","setAttribute","IpfsApiClient","constructor","authHeader","_create","client","_options","options","url","headers","authorization","isAuth","auth","signature","authHeaderRaw","Buffer","from","authClear","ls","cid","files","file","push","cat","decoder","TextDecoder","content","chunk","decode","stream","add","catViaGateway","gateway","attempts","index","axios","get","catViaGatewaysRotation","catViaGateways","controller","AbortController","readFile","signal","abort","requests","Promise","any","p","i","then","install","app","params","provide","naclOpen","sealed","senderBoxPublic","receiverBoxSecret","nacl","open","naclSeal","senderBoxSecret","receiverBoxPublic","randomAsU8a","convertSecretKeyToCurve25519","secretKey","ed2curve","convertPublicKeyToCurve25519","publicKey","decryptMessage","encryptedMessageWithNonce","senderPublicKey","messageU8a","u8aToU8a","slice","encryptMessage","recipientPublicKey","nonceIn","u8aConcat","createPair","mnemonic","seed","mnemonicToMiniSecret","pair","ed25519PairFromSeed","encryptor","encodeAddress","ss58Format","AccountManagerDapp","AccountManager","keyring","config","super","loadAll","setReady","beforeSetSender","getPair","loadInjected","afterSetSender","isInjected","setSigner","signMsg","u8aToHex","u8aWrapBytes","addUri","suri","addFromUri","addUriPassword","password","addJsonPassword","createFromJson","addPair","pairKey","addFromPair","toJson","decoded","decodePair","base64Decode","encoded","encoding","urlParams","URLSearchParams","window","location","search","Robonomics","createInstance","setAccountManager","CodeError","PROVIDER","NETWORK","ACCOUNT","Web3Error","code","Connector","getProvider","getAccount","getNetworkId","Extension","provider","update","networkId","handleChainChanged","Number","handleAccountsChanged","request","Provider","networks","connector","reactive","setConnector","ethers","getSigner","includes","setProvider","warn","getBlock","blockNumber","$web3","web3","_toDisplayString","balance","_renderList","tokens","token","_component_nft_token","tokenId","onActivate","loadTokens","image","style","activated","_component_btn_send","wait","_component_free_minimum","args","status","STATUS","PRE_PROCESS","WAIT_TX","_renderSlot","$slots","ERROR","READY","_hoisted_3","NEW","last","receipt","hash","errorCatch","received","requestFreeMinimum","avaible","_hoisted_4","_hoisted_5","_hoisted_6","baseURL","nft_oracle_endpoint","checkAvailible","accountEthereum","post","nft","getFreeMinimum","accauntParachain","msg","for","signMessage","check","timerId","setInterval","clearInterval","BtnSend","FreeMinimum","nftContract","nft_abi","connect","interface","parseError","NftToken","balanceOf","ids","tokenOfOwnerByIndex","uri","tokenURI","ipfsHash","split","pop","activatedOf","providers","detail","ethereum","activeProviderRdns","findIndex","info","rdns","activeAccount","addEventListener","dispatchEvent","CustomEvent","chains","workingchain","mipdstore","createStore","getProviders","subscribe","isConnected","_state","contract","providerethers","curentslide","setslide","s","getEthersProviderObj","getNFT","blockupdate","perms","eth_accounts","some","parentCapability","chain","parseInt","parseFloat","catch","activateToken","current","_component_robo_layout_section","width","_component_robo_grid","minColumnWidth","gap","card","rwsactive","_component_robo_rws_setup_active","show","_component_robo_text","align","offset","size","columns","_component_robo_grid_item","borderbottom","price","_component_robo_details","summary","_component_robo_icon","icon","_component_robo_link","href","freeAuctions","linkActivate","unsubscribeBlock","getAuctionQueue","onBlock","minimalBid","getMinimalBid","bnToBn","priceFormat","_component_robo_select","values","commands","modelValue","parameter","$event","proccess","highlight","robot","listOfCommands","txs","balances","transfer","launch","utility","batch","resultTx","txIndex","created","_component_robo_template_rws_buy","activationtime","available","chainInfoUploaded","chainInfoStatus","rwsExpiration","expiredate","onOnActivate","useBalance","unsubscribeAccount","transaction","setStatus","lt","bid","getFirtsFreeAuction","setDevices","stopWatchEffect","watchEffect","_component_robo_rws_setup","onUserDelete","removeUser","onUserAdd","addUser","onSaveHapass","saveHapass","onControllerEdit","setupOwner","user","filter","passToSave","userAddress","userType","acctype","encodedDevices","passwordForAdmin","decodeAddress","passwordForRecovery","datalog","write","ha","admin","accountOld","onRequestSubscription","onSetupGenerate","nextTick","script","_component_robo_input","_component_account_unlock","onUnlock","isUnlock","_component_d_twin","updateKey","onTwinId","twinId","onFind","finedFiles","finedFile","_component_ipfs_file","hex","_component_encrypt_message","onEncrypt","messageHash","_component_ipfs_upload","onUpload","ipfsFile","_component_crust_store","onStore","isStored","_component_d_twin_save","onSave","_hoisted_7","unlock","reported_replica_count","$filters","canStored","storeFile","Crust","init","cb","intervalId","WsProvider","ApiPromise","typesBundle","typesBundleForPolkadot","cryptoWaitReady","query","feeFrozen","getStorePrice","file_size","fileBaseFee","market","fileByteFee","getInfo","ipfs_cid","filesV2","addRenewalPoolBalance","amount","addPrepaid","tips","placeStorageOrder","reject","isInBlock","forEach","phase","dispatchError","isModule","mod","asModule","docs","findMetaError","join","asInBlock","header","number","asApplyExtrinsic","crust","_component_select_twin","keySelect","_component_create_twin","onCreate","SelectTwin","CreateTwin","keyRecords","twin","useTwin","save","setSource","encrypt","encryptedMessage","dataHex","target","hexToCid","omit","obj","omitted","rest","o","replicas","Object","keys","decrypt","decryptedMessage","u8aToString","getContentFile","startsWith","ipfsGateway","upload","ipfs","stringToU8a","AccountUnlock","EncryptMessage","DTwin","DTwinSave","IpfsUpload","IpfsFile","CrustStore","isSaved","_component_Libp2p","isKey","onConnected","handlerConnected","onError","handlerError","_component_Launch","_component_robo_smarthome_dashboard","updateTime","useIpfs","clearJson","string","replaceAll","parseJson","getLastIndex","id","getLastId","getLastDatalog","lastIndex","readByIndex","timestamp","getConfigCid","twin_id","getTwin","configHex","utils","catFile","decryptData","encryptedMsg","controllerPublicKey","hexToU8a","readFileDecrypt","loadSetup","setupRaw","useSetup","notify","text","timeout","dispatch","setStatusLaunch","command","tx_status","useConfig","getConfig","load","useData","unsubscribeDatalog","watchDatalog","results","success","run","entity_id","commandCid","cmdString","cmdCrypto","Boolean","dataTest","configTest","createHa","getRequest","pipe","source","uint8ArrayToString","subarray","sendResponse","uint8ArrayFromString","sink","finally","close","handle","protocol","runOnTransientConnection","registrar","newStream","createNode","node","createLibp2p","transports","webSockets","filters","circuitRelayTransport","streamMuxers","mplex","connectionEncryption","noise","services","identify","connectionGater","denyDialMultiaddr","connectionManager","minConnections","defaultRelay","peer_id","multiaddr","connectMultiaddress","peer_multiaddress","localMultiaddrs","circuit","peer_multiaddr","localMultiaddr","protos","protoNames","addr","connections","start","updateConnectionsList","getConnections","remoteAddr","peerId","setTimeout","reconnect","listenerMultiaddr","dial","disconnect","connected","protocols","getProtocols","unhandle","sender","isOnce","libp2p_multiaddress","nodeAddress","activegateway","once","Libp2p","Launch","routes","component","Home","RwsActivate","RwsSetup","RwsSetupNew","Telemetry","Altruist","Riscv","Hikikomori","SeasonPass","SeasonPass2","EnergyMonitor","Humanoid","SaveSetup","PathNotFound","createRouter","history","createWebHashHistory","globalProperties","symbol","createApp","App","use","robonomicsUI","mount","twins","label","isLoading","_component_robo_status","_component_robo_loader","useTwins","setCache","total","URL","host","getCache","getTotal","twinsByAccount","startIndex","getOwner","loadTwins","tokenToString","replace","tokenToCid","force","toRef","topic","cidToHex","stringToHex","xrt","tokenVesting","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","m","amdO","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","n","getter","__esModule","d","a","leafPrototypes","getProto","getPrototypeOf","__proto__","t","mode","ns","def","indexOf","getOwnPropertyNames","definition","defineProperty","enumerable","f","chunkId","all","reduce","promises","u","miniCssF","g","globalThis","Function","prop","prototype","hasOwnProperty","inProgress","dataWebpackPrefix","l","done","needAttach","scripts","getElementsByTagName","getAttribute","createElement","charset","nc","onScriptComplete","prev","onerror","onload","clearTimeout","doneFns","parentNode","removeChild","bind","head","appendChild","Symbol","toStringTag","nmd","paths","children","createStylesheet","fullhref","oldTag","linkTag","rel","onLinkComplete","errorType","realHref","err","insertBefore","nextSibling","findStylesheet","existingLinkTags","tag","dataHref","existingStyleTags","loadStylesheet","installedCssChunks","miniCss","cssChunks","installedChunks","installedChunkData","promise","loadingEnded","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}