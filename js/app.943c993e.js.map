{"version":3,"file":"js/app.943c993e.js","mappings":"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","sources":["webpack://dapp-robonomics.network/./src/App.vue","webpack://dapp-robonomics.network/./src/components/Header.vue","webpack://dapp-robonomics.network/./src/utils/tools.js","webpack://dapp-robonomics.network/./src/components/Header.vue?801b","webpack://dapp-robonomics.network/./src/components/Footer.vue","webpack://dapp-robonomics.network/./src/components/Footer.vue?7cca","webpack://dapp-robonomics.network/./src/config.js","webpack://dapp-robonomics.network/./src/hooks/useRobonomics.js","webpack://dapp-robonomics.network/./src/hooks/useDevices.js","webpack://dapp-robonomics.network/./src/hooks/useSubscription.js","webpack://dapp-robonomics.network/./src/components/layouts/Main.vue","webpack://dapp-robonomics.network/./src/components/layouts/Main.vue?a356","webpack://dapp-robonomics.network/./src/App.vue?7ccd","webpack://dapp-robonomics.network/./src/plugins/ipfs.js","webpack://dapp-robonomics.network/./src/utils/encryptor.js","webpack://dapp-robonomics.network/./src/plugins/robonomicsAccountManager.js","webpack://dapp-robonomics.network/./src/plugins/robonomics.js","webpack://dapp-robonomics.network/./src/plugins/web3.js","webpack://dapp-robonomics.network/./src/views/Home.vue","webpack://dapp-robonomics.network/./src/views/Home.vue?9051","webpack://dapp-robonomics.network/./src/views/PathNotFound.vue","webpack://dapp-robonomics.network/./src/views/PathNotFound.vue?dbdf","webpack://dapp-robonomics.network/./src/views/RwsActivate.vue","webpack://dapp-robonomics.network/./src/hooks/useAccount.js","webpack://dapp-robonomics.network/./src/hooks/useBalance.js","webpack://dapp-robonomics.network/./src/hooks/useSend.js","webpack://dapp-robonomics.network/./src/views/RwsActivate.vue?116c","webpack://dapp-robonomics.network/./src/views/RwsSetup.vue","webpack://dapp-robonomics.network/./src/views/RwsSetup.vue?d6aa","webpack://dapp-robonomics.network/./src/views/RwsSetupNew.vue","webpack://dapp-robonomics.network/./src/views/RwsSetupNew.vue?1f64","webpack://dapp-robonomics.network/./src/views/Services.vue","webpack://dapp-robonomics.network/./src/views/Services.vue?0e03","webpack://dapp-robonomics.network/./src/views/telemetry/Telemetry.vue","webpack://dapp-robonomics.network/./src/views/telemetry/Launch.vue","webpack://dapp-robonomics.network/./src/hooks/useIpfs.js","webpack://dapp-robonomics.network/./src/utils/telemetry.js","webpack://dapp-robonomics.network/./src/views/telemetry/common.js","webpack://dapp-robonomics.network/./src/views/telemetry/launch.js","webpack://dapp-robonomics.network/./src/views/telemetry/Launch.vue?a7de","webpack://dapp-robonomics.network/./src/views/telemetry/Libp2p.vue","webpack://dapp-robonomics.network/./src/utils/libp2p/ha.js","webpack://dapp-robonomics.network/./src/utils/libp2p/libp2p.js","webpack://dapp-robonomics.network/./src/views/telemetry/libp2p.js","webpack://dapp-robonomics.network/./src/views/telemetry/Libp2p.vue?d944","webpack://dapp-robonomics.network/./src/views/telemetry/Telemetry.vue?f25e","webpack://dapp-robonomics.network/./src/views/hardware/Altruist.vue","webpack://dapp-robonomics.network/./src/views/hardware/Riscv.vue","webpack://dapp-robonomics.network/./src/views/hardware/Hikikomori.vue","webpack://dapp-robonomics.network/./src/views/hardware/Smart-safe.vue","webpack://dapp-robonomics.network/./src/eth_chains.js","webpack://dapp-robonomics.network/./src/views/hardware/Season-pass.vue","webpack://dapp-robonomics.network/./src/views/hardware/Season-pass.vue?e5cd","webpack://dapp-robonomics.network/./src/components/web3/NftInfo.vue","webpack://dapp-robonomics.network/./src/components/web3/NftToken.vue","webpack://dapp-robonomics.network/./src/components/web3/BtnSend.vue","webpack://dapp-robonomics.network/./src/components/web3/BtnSend.vue?fc9a","webpack://dapp-robonomics.network/./src/components/web3/FreeMinimum.vue","webpack://dapp-robonomics.network/./src/components/web3/apiNftOracle.js","webpack://dapp-robonomics.network/./src/components/web3/FreeMinimum.vue?6b81","webpack://dapp-robonomics.network/./src/components/web3/NftToken.vue?6082","webpack://dapp-robonomics.network/./src/components/web3/NftInfo.vue?0a2c","webpack://dapp-robonomics.network/./src/views/hardware/Season-pass-2.vue","webpack://dapp-robonomics.network/./src/views/hardware/Season-pass-2.vue?7d65","webpack://dapp-robonomics.network/./src/router.js","webpack://dapp-robonomics.network/./src/store.js","webpack://dapp-robonomics.network/./src/utils/filters.js","webpack://dapp-robonomics.network/./src/main.js","webpack://dapp-robonomics.network/webpack/bootstrap","webpack://dapp-robonomics.network/webpack/runtime/amd options","webpack://dapp-robonomics.network/webpack/runtime/chunk loaded","webpack://dapp-robonomics.network/webpack/runtime/compat get default export","webpack://dapp-robonomics.network/webpack/runtime/create fake namespace object","webpack://dapp-robonomics.network/webpack/runtime/define property getters","webpack://dapp-robonomics.network/webpack/runtime/global","webpack://dapp-robonomics.network/webpack/runtime/hasOwnProperty shorthand","webpack://dapp-robonomics.network/webpack/runtime/make namespace object","webpack://dapp-robonomics.network/webpack/runtime/node module decorator","webpack://dapp-robonomics.network/webpack/runtime/jsonp chunk loading","webpack://dapp-robonomics.network/webpack/startup"],"sourcesContent":["<template>\n  <main-layout :pagetitle=\"title\">\n    <router-view />\n  </main-layout>\n</template>\n\n<script>\nimport MainLayout from \"@/components/layouts/Main.vue\";\nimport { inject, ref, watch } from \"vue\";\nimport { useRoute, useRouter } from \"vue-router\";\nimport { useStore } from \"vuex\";\n\nexport default {\n  name: \"App\",\n  components: {\n    MainLayout\n  },\n  setup() {\n    const RobonomicsProvider = inject(\"RobonomicsProvider\");\n    const IpfsProvider = inject(\"IpfsProvider\");\n    const store = useStore();\n    const router = useRouter();\n    const route = useRoute();\n\n    const title = ref();\n\n    store.commit(\"rws/setKey\", process.env.VUE_APP_ROBONOMICS_UI_KEY);\n    store.dispatch(\"rws/init\");\n\n    store.commit(\n      \"rws/setLinkActivate\",\n      router.resolve({ name: \"rwsActivate\" }).path\n    );\n    store.commit(\"rws/setLinkSetup\", router.resolve({ name: \"rwsSetup\" }).path);\n    store.commit(\n      \"rws/setLinkSetupnew\",\n      router.resolve({ name: \"rwsSetupNew\" }).path\n    );\n    store.commit(\n      \"rws/setLinkDevices\",\n      router.resolve({ name: \"telemetry\" }).path\n    );\n    store.commit(\"ipfs/setGateways\", IpfsProvider.gateways);\n\n    watch(route, () => {\n      title.value = route?.meta?.title;\n      const resulttitle = title.value\n        ? `${title.value} / Robonomics Dapp`\n        : \"Robonomics Dapp\";\n      document.title = resulttitle;\n      document\n        .querySelector('meta[property=\"og:title\"]')\n        .setAttribute(\"content\", resulttitle);\n    });\n\n    watch(\n      [route, RobonomicsProvider.isReady],\n      ([route, isReady]) => {\n        if (route.name !== \"telemetry\" && isReady) {\n          store.dispatch(\"app/setlibp2p\", {\n            connected: false\n          });\n          store.dispatch(\"app/setrelay\", {\n            connected: false\n          });\n        }\n      },\n      { immediate: true }\n    );\n\n    return {\n      title\n    };\n  }\n};\n</script>\n","<template>\n  <robo-layout-header\n    logoIcon=\"images/icon_white.svg\"\n    :title=\"title\"\n    v-if=\"renderComponent\"\n  >\n\n  <template #nav>\n    <robo-section>\n      <robo-text title=\"3\" linemiddle offset=\"x05\"><span>Hardware for Cryptopunks Control & Telemetry</span></robo-text>\n      <nav class=\"nav-devices\">\n        <ul>\n          <li>\n            <router-link to=\"/hardware/season-pass\" exact>\n              <img src=\"images/season-pass-24-25-monkey.webp\" />\n              <span>Season pass</span>\n            </router-link>\n          </li>\n          <li>\n            <router-link to=\"/hardware/altruist\" exact>\n              <img src=\"images/hardware/altruist.webp\" />\n              <span>Altruist Outdoor Sensor</span>\n            </router-link>\n          </li>\n          <li>\n            <router-link to=\"/hardware/riscv\" exact>\n              <img src=\"images/hardware/risc-v.webp\" />\n              <span>Risc-V Smart Home</span>\n            </router-link>\n          </li>\n          <li>\n            <router-link to=\"/hardware/hikikomori\" exact>\n              <img src=\"images/hardware/hikikomori.webp\" />\n              <span>Hikikomori</span>\n            </router-link>\n          </li>\n          <li>\n            <router-link to=\"/hardware/smart-safe\" exact>\n              <img src=\"images/hardware/smart-safe.webp\" />\n              <span>Smart safe</span>\n            </router-link>\n          </li>\n        </ul>\n      </nav>\n    </robo-section>\n\n    <robo-section>\n      <robo-text title=\"3\" linemiddle offset=\"x05\"><span>Robonomics Web Services Control & Telemetry</span></robo-text>\n      <nav class=\"nav-rws\">\n        <ul>\n          <li><router-link :to=\"$store.state.robonomicsUIvue.rws.links.activate\" exact>Your subscription</router-link></li>\n          <li><router-link :to=\"$store.state.robonomicsUIvue.rws.links.setupnew\" exact>New configuration</router-link></li>\n          <!-- <li v-if=\"$store.state.robonomicsUIvue.rws.list.length > 0\"> -->\n          <li>\n            <router-link :to=\"$store.state.robonomicsUIvue.rws.links.setup\" exact>Your configuration<template v-if=\"$store.state.robonomicsUIvue.rws.list.length > 1\">s</template></router-link>\n          </li>\n          <!-- <li v-if=\"$store.state.robonomicsUIvue.rws.list.length > 0\"> -->\n          <li>\n            <router-link :to=\"$store.state.robonomicsUIvue.rws.links.devices\" exact>Devices & Control</router-link>\n          </li>\n        </ul>\n      </nav>\n    </robo-section>\n  </template>\n  </robo-layout-header>\n</template>\n\n<script>\nimport { fromUnit, round } from \"@/utils/tools\";\nimport { toRaw } from \"vue\";\n\nexport default {\n  props: {\n    title: {\n      type: String,\n      default: \"Robonomics Dapp\"\n    }\n  },\n  inject: [\"RobonomicsProvider\"],\n  data() {\n    return {\n      renderComponent: true,\n      // navigation: [\n      //   {\n      //     title: \"Services\",\n      //     links: [\n      //       {\n      //         title: \"Sensors map\",\n      //         link: \"https://sensors.robonomics.network\",\n      //         type: \"external\"\n      //       }\n      //     ]\n      //   },\n\n      //   {\n      //     title: \"Tokenomics\",\n      //     links: [\n      //       {\n      //         title: \"About XRT\",\n      //         link: \"https://robonomics.network/xrt/\",\n      //         type: \"external\"\n      //       },\n      //       {\n      //         title: \"Uniswap\",\n      //         link: \"https://app.uniswap.org/#/swap?inputCurrency=0x7de91b204c1c737bcee6f000aaa6569cf7061cb7&outputCurrency=0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n      //         type: \"external\"\n      //       },\n      //       {\n      //         title: \"Basilisk\",\n      //         link: \"https://app.basilisk.cloud/pools-and-farms\",\n      //         type: \"external\"\n      //       }\n      //     ]\n      //   },\n\n      //   {\n      //     title: \"Tools\",\n      //     links: [\n      //       {\n      //         title: \"Substrate Portal\",\n      //         link: \"https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fkusama.rpc.robonomics.network%2F#/explorer\",\n      //         type: \"external\"\n      //       },\n      //       {\n      //         title: \"Subscan\",\n      //         link: \"https://robonomics.subscan.io/\",\n      //         type: \"external\"\n      //       },\n      //       {\n      //         title: \"Polkassembly\",\n      //         link: \"https://robonomics.polkassembly.io/\",\n      //         type: \"external\"\n      //       }\n      //     ]\n      //   },\n      //   {\n      //     title: \"Robonomics Parachain\",\n      //     links: [\n      //       {\n      //         title: \"Polkadot\",\n      //         link: \"/?rpc=wss%3A%2F%2Fpolkadot.rpc.robonomics.network%2F\"\n      //       },\n      //       {\n      //         title: \"Kusama\",\n      //         link: \"/?rpc=wss%3A%2F%2Fkusama.rpc.robonomics.network%2F\"\n      //       }\n      //     ]\n      //   }\n      // ],\n    };\n  },\n  computed: {\n    robonomics: function () {\n      return toRaw(this.RobonomicsProvider.instance.value);\n    }\n  },\n  watch: {\n    \"$store.state.robonomicsUIvue.polkadot.extensionObj\": function (value) {\n      if (\n        value.signer &&\n        value.signer.signRaw &&\n        this.$store.state.robonomicsUIvue.polkadot.address\n      ) {\n        this.handlerAccount(this.$store.state.robonomicsUIvue.polkadot.address);\n      }\n    },\n    \"$store.state.robonomicsUIvue.polkadot.address\": {\n      handler: function (value) {\n        if (\n          value &&\n          this.$store.state.robonomicsUIvue.polkadot.extensionObj.signer &&\n          this.$store.state.robonomicsUIvue.polkadot.extensionObj.signer.signRaw\n        ) {\n          this.handlerAccount(value);\n        }\n      },\n      immediate: true\n    },\n    \"RobonomicsProvider.isReady.value\": {\n      handler: function (newValue, oldValue) {\n        if (newValue && !oldValue) {\n          this.handlerAccount(\n            this.$store.state.robonomicsUIvue.polkadot.address\n          );\n        }\n      },\n      immediate: true\n    },\n    $route: async function () {\n      this.renderComponent = false;\n      await this.$nextTick();\n      this.renderComponent = true;\n    }\n  },\n  methods: {\n    // setCurrentNetwork() {\n    //   let network = \"kusama\";\n    //   const endpoint = localStorage.getItem(\"rpc-parachain\");\n    //   if (endpoint) {\n    //     network = URL.parse(endpoint).host.split(\".\")[0];\n    //   }\n    //   if (network === \"polkadot\") {\n    //     this.navigation[3].links[0] = {\n    //       title: `›Polkadot`\n    //     };\n    //   } else {\n    //     this.navigation[3].links[1] = {\n    //       title: `›Kusama`\n    //     };\n    //   }\n    // },\n    async handlerAccount(address) {\n      try{\n\n        if (!this.RobonomicsProvider.isReady.value) {\n          return;\n        }\n        if (this.unsubscribeBalance) {\n          this.unsubscribeBalance();\n        }\n        // this.setCurrentNetwork();\n        if (!this.$store.state.robonomicsUIvue.polkadot.accounts) {\n          return;\n        }\n        const account = this.$store.state.robonomicsUIvue.polkadot.accounts.find(\n          (item) => item.address === address\n        );\n        if (!account) {\n          return;\n        }\n        if (this.$route.name !== \"telemetry\") {\n          await this.robonomics.accountManager.setSender(address, {\n            type: account.type,\n            extension: this.$store.state.robonomicsUIvue.polkadot.extensionObj\n          });\n        }\n        this.unsubscribeBalance = await this.robonomics.account.getBalance(\n          address,\n          (r) => {\n            const transferable = r.free.sub(r.frozen);\n            this.$store.commit(\n              \"polkadot/setBalanceXRT\",\n              round(\n                fromUnit(\n                  transferable,\n                  this.robonomics.api.registry.chainDecimals[0]\n                ),\n                4\n              )\n            );\n          }\n        );\n      } catch (e) { console.error(e); }\n    }\n  }\n};\n</script>\n\n<style scoped>\n  .nav-devices ul, .nav-rws ul {\n    display: grid;\n    grid-template-columns: repeat(5, 1fr);\n    font-weight: bold;\n    gap: calc(var(--robo-space) * 2);\n    text-align: center;\n  }\n\n  .nav-rws {\n    max-width: 720px;\n  }\n\n  .nav-rws ul {\n    text-align: left;\n    grid-template-columns: repeat(4, 1fr);\n  }\n\n  .nav-devices a {\n    color: var(--robo-color-dark);\n    display: block;\n    height: 100%;\n    padding: .4rem;\n    border-radius: 4px;\n    text-align: center;\n  }\n\n  .nav-devices a:hover {\n    background-color: var(--robo-color-light-90);\n  }\n\n  .nav-devices img {\n    display: block;\n    max-height: 100px;\n    object-fit: contain;\n    width: auto;\n  }\n\n  @media screen and (width < 950px) {\n    .nav-devices ul {\n      grid-template-columns: repeat(3, 1fr);\n    }\n\n    .nav-rws ul {\n      grid-template-columns: repeat(2, 1fr);\n    }\n  }\n\n  @media screen and (width < 560px) {\n\n    .nav-devices ul, .nav-rws ul {\n      grid-template-columns: repeat(1, 1fr);\n    }\n\n    .nav-devices a {\n      text-align: left;\n      display: flex;\n      gap: var(--robo-space);\n    }\n\n    .nav-devices img {\n      max-width: 50px;\n      max-height: auto;\n    }\n  }\n</style>\n","import Decimal from \"decimal.js-light\";\n\nDecimal.set({\n  toExpNeg: -31,\n  toExpPos: 31\n});\n\nexport function toDecimal(v) {\n  return new Decimal(v.toString());\n}\n\nexport function round(v, place) {\n  return toDecimal(v).todp(place);\n}\n\nexport function fromUnit(v, decimals = 0, dp) {\n  return toDecimal(v)\n    .div(new Decimal(10).pow(decimals.toString()))\n    .todp(dp)\n    .toString();\n}\n\nexport function toUnit(v, decimals = 0) {\n  return toDecimal(v).mul(new Decimal(10).pow(decimals.toString())).toString();\n}\n\nexport function showVersion() {\n  console.log(\n    \"Build version:\",\n    process.env.VUE_APP_GIT_BRANCH,\n    process.env.VUE_APP_GIT_TAG,\n    process.env.VUE_APP_GIT_SHA\n  );\n}\n","import { render } from \"./Header.vue?vue&type=template&id=f2bf66de&scoped=true\"\nimport script from \"./Header.vue?vue&type=script&lang=js\"\nexport * from \"./Header.vue?vue&type=script&lang=js\"\n\nimport \"./Header.vue?vue&type=style&index=0&id=f2bf66de&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-f2bf66de\"]])\n\nexport default __exports__","<template>\n    <footer>\n      <nav>\n        <ul v-for=\"item in navigation\" :key=\"item.title\" :data-label=\"item.title\">\n            <li v-for=\"link in item.links\" :key=\"link.title\">\n                <router-link :to=\"link.link\" exact>{{link.title}}</router-link>\n            </li>\n        </ul>\n      </nav>\n    </footer>\n</template>\n\n<script setup>\n\nconst navigation = [\n{\n    title: \"Services\",\n    links: [\n    {\n        title: \"Sensors map\",\n        link: \"https://sensors.robonomics.network\",\n    }\n    ]\n},\n\n{\n    title: \"Tokenomics\",\n    links: [\n    {\n        title: \"About XRT\",\n        link: \"https://robonomics.network/xrt/\",\n    },\n    {\n        title: \"Uniswap\",\n        link: \"https://app.uniswap.org/#/swap?inputCurrency=0x7de91b204c1c737bcee6f000aaa6569cf7061cb7&outputCurrency=0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n    },\n    {\n        title: \"Basilisk\",\n        link: \"https://app.basilisk.cloud/pools-and-farms\",\n    }\n    ]\n},\n\n{\n    title: \"Tools\",\n    links: [\n    {\n        title: \"Substrate Portal\",\n        link: \"https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fkusama.rpc.robonomics.network%2F#/explorer\",\n    },\n    {\n        title: \"Subscan\",\n        link: \"https://robonomics.subscan.io/\",\n    },\n    {\n        title: \"Polkassembly\",\n        link: \"https://robonomics.polkassembly.io/\",\n    }\n    ]\n},\n\n{\n    title: \"Help\",\n    links: [\n    {\n        title: \"Wiki\",\n        link: \"https://wiki.robonomics.network/\",\n    },\n    {\n        title: \"Academy\",\n        link: \"https://robonomics.academy/\",\n    },\n    {\n        title: \"Contacts\",\n        link: \"https://robonomics.network/contact/\",\n    },\n    ]\n}\n];\n</script>\n\n<style scoped>\n    footer {\n        border-top: 1px solid var(--robo-color-text);\n        margin: var(--robo-layout-padding);\n        padding-top: var(--robo-layout-padding);\n    }\n\n    footer nav {\n        display: flex;\n        gap: calc(var(--robo-layout-padding) * 2);\n        justify-content: center;\n    }\n\n    footer nav ul:before {\n        content: attr(data-label);\n        display: block;\n        font-weight: bold;\n        margin-bottom: var(--robo-space);\n    }\n\n    @media screen and (width < 700px) {\n        footer nav {\n            font-size: 90%;\n            gap: var(--robo-layout-padding);\n        }\n    }\n\n    @media screen and (width < 500px) {\n        footer nav {\n            flex-direction: column;\n        }\n    }\n</style>","import script from \"./Footer.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Footer.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Footer.vue?vue&type=style&index=0&id=348a5c2f&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-348a5c2f\"]])\n\nexport default __exports__","export default {\n  default_rpc_endpoint: \"wss://polkadot.rpc.robonomics.network/\",\n  nft_oracle_endpoint: \"https://nft-oracle.robonomics.network/\"\n};\n\n// SEPOLIA\nexport const address = {\n  xrt: \"0x9516AFb2b538CAbDcC04e2289E9d48eEBD8fa6ef\",\n  tokenVesting: \"0xf1ba89053f407DF832b135F19fDB064C7A97E1F3\",\n  nft: \"0x0c0C092f372c3Cb49D116A14fA7dcc40e84275aa\"\n};\n","import { inject } from \"vue\";\n\nexport function useRobonomics() {\n  const provider = inject(\"RobonomicsProvider\");\n  return {\n    accountManager: provider.accountManager,\n    isReady: provider.isReady,\n    robonomics: provider.instance,\n    getInstance: () => provider.instance.value\n  };\n}\n","import configApp from \"@/config\";\nimport { validateAddress } from \"@polkadot/util-crypto\";\nimport { onUnmounted, ref, watch } from \"vue\";\nimport { useRobonomics } from \"./useRobonomics\";\n\nexport const useDevices = (initialOwner = null) => {\n  const { isReady, getInstance } = useRobonomics();\n  const owner = ref(initialOwner);\n  const devices = ref([]);\n\n  const getDevices = async (owner) => {\n    const endpoint =\n      localStorage.getItem(\"rpc-parachain\") || configApp.default_rpc_endpoint;\n    const lsKey = `hadevices:${endpoint}:${owner}`;\n\n    if (!isReady.value) {\n      const data = localStorage.getItem(lsKey);\n      if (data) {\n        try {\n          const parsedData = JSON.parse(data);\n          console.log(\"getDevices cache\");\n          return { data: parsedData.value, cache: true };\n        } catch (error) {\n          console.log(\"hadevices bad\", error);\n        }\n      } else {\n        return { data: [], cache: true };\n      }\n    } else {\n      try {\n        const result = await getInstance().rws.getDevices(owner);\n        const list = result.map((item) => {\n          return item.toHuman();\n        });\n        localStorage.setItem(\n          lsKey,\n          JSON.stringify({ time: Date.now(), value: list })\n        );\n        console.log(\"getDevices chain\");\n        return { data: list, cache: false };\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    return { data: [], cache: false };\n  };\n\n  const loadDevices = async () => {\n    if (owner.value) {\n      try {\n        validateAddress(owner.value);\n        const result = await getDevices(owner.value);\n        devices.value = result.data;\n        if (result.cache) {\n          const stop = watch(\n            isReady,\n            async () => {\n              if (isReady.value) {\n                const result = await getDevices(owner.value);\n                devices.value = result.data;\n                stop();\n              }\n            },\n            { immediate: true }\n          );\n        }\n        return;\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    devices.value = [];\n  };\n\n  watch(\n    owner,\n    async () => {\n      await loadDevices();\n    },\n    {\n      immediate: true\n    }\n  );\n\n  watch(\n    isReady,\n    async (isReady) => {\n      if (isReady) {\n        const unsubscribe = await getInstance().events.on(\n          { section: \"rws\", method: \"NewDevices\" },\n          async (result) => {\n            for (const event of result) {\n              if (event.data[0].toHuman() === owner.value) {\n                await loadDevices();\n              }\n            }\n          }\n        );\n        onUnmounted(unsubscribe);\n      }\n    },\n    { immediate: true }\n  );\n\n  return {\n    owner,\n    devices,\n    loadDevices\n  };\n};\n","import configApp from \"@/config\";\nimport { createType, TypeRegistry } from \"@polkadot/types\";\nimport { validateAddress } from \"@polkadot/util-crypto\";\nimport { computed, ref, shallowRef, watch } from \"vue\";\nimport { useDevices } from \"./useDevices\";\nimport { useRobonomics } from \"./useRobonomics\";\n\nconst getRegistry = () => {\n  const registry = new TypeRegistry();\n  const types = {\n    PalletRobonomicsRwsSubscription: {\n      _enum: {\n        Lifetime: {\n          tps: \"Compact<u32>\"\n        },\n        Daily: {\n          days: \"Compact<u32>\"\n        }\n      }\n    },\n    PalletRobonomicsRwsSubscriptionLedger: {\n      freeWeight: \"Compact<u64>\",\n      issueTime: \"Compact<u64>\",\n      lastUpdate: \"Compact<u64>\",\n      kind: {\n        _enum: {\n          Lifetime: {\n            tps: \"Compact<u32>\"\n          },\n          Daily: {\n            days: \"Compact<u32>\"\n          }\n        }\n      }\n    }\n  };\n  registry.register(types);\n  return registry;\n};\n\nexport const useSubscription = (initialOwner = null) => {\n  const owner = ref(initialOwner);\n  const dataRaw = shallowRef(null);\n\n  const { isReady, getInstance } = useRobonomics();\n  const { devices, loadDevices } = useDevices(owner);\n\n  const getReferenceCallWeight = () => {\n    return getInstance().api.consts.rws.referenceCallWeight;\n  };\n\n  const getLedger = async (owner) => {\n    const endpoint =\n      localStorage.getItem(\"rpc-parachain\") || configApp.default_rpc_endpoint;\n    const lsKey = `hasubscription:${endpoint}:${owner}`;\n\n    if (!isReady.value) {\n      const data = localStorage.getItem(lsKey);\n      if (data) {\n        try {\n          const parsedData = JSON.parse(data);\n          // if (parsedData.time + DAYS_TO_MS > Date.now()) {\n          const res = createType(\n            getRegistry(),\n            \"Option<PalletRobonomicsRwsSubscriptionLedger>\",\n            parsedData.value\n          );\n          console.log(\"getLedger cache\");\n          return { data: res.value, cache: true };\n          // }\n        } catch (error) {\n          console.log(\"hasubscription bad\", error);\n        }\n      } else {\n        return { data: undefined, cache: true };\n      }\n    } else {\n      const res = await getInstance().rws.getLedger(owner);\n      if (!res.isEmpty) {\n        localStorage.setItem(\n          lsKey,\n          JSON.stringify({ time: Date.now(), value: res.value.toJSON() })\n        );\n        console.log(\"getLedger chain\");\n        return { data: res.value, cache: false };\n      }\n    }\n    return { data: undefined, cache: false };\n  };\n\n  const DAYS_TO_MS = 24 * 60 * 60 * 1000;\n\n  const getFreeWeightCalc = async (owner) => {\n    const ledger = (await getLedger(owner)).data;\n    if (!ledger) {\n      return -1;\n    }\n\n    const freeWeight = ledger.freeWeight.toNumber();\n    const lastUpdate = ledger.lastUpdate.toNumber();\n    const issueTime = ledger.issueTime.toNumber();\n\n    const referenceCallWeight = getReferenceCallWeight();\n    const now = Date.now();\n\n    let utps = (() => {\n      let tps;\n      if (ledger.kind.isLifetime) {\n        tps = ledger.kind.value.tps.toNumber();\n      } else {\n        const days = ledger.kind.value.days.toNumber();\n        const duration_ms = days * DAYS_TO_MS;\n        if (now < issueTime + duration_ms) {\n          tps = 10000;\n        } else {\n          tps = 0;\n        }\n      }\n      return tps;\n    })();\n\n    const delta = now - lastUpdate;\n    return Math.floor(\n      freeWeight + (referenceCallWeight * utps * delta) / 1000000000\n    );\n  };\n\n  const validUntil = computed(() => {\n    if (!dataRaw.value) {\n      return null;\n    }\n    if (dataRaw.value.kind.isLifetime) {\n      return null;\n    }\n    const issue_time = dataRaw.value.issueTime.toNumber();\n    let days = 0;\n    if (dataRaw.value.kind.isDaily) {\n      days = dataRaw.value.kind.value.days.toNumber();\n    }\n    return issue_time + days * DAYS_TO_MS;\n  });\n\n  const countMonth = computed(() => {\n    if (!dataRaw.value) {\n      return 0;\n    }\n    let days = 0;\n    if (dataRaw.value.kind.isDaily) {\n      days = dataRaw.value.kind.value.days.toNumber();\n    }\n    return days / 30;\n  });\n\n  const isActive = computed(() => {\n    if (\n      !dataRaw.value ||\n      (validUntil.value !== null && Date.now() > validUntil.value)\n    ) {\n      return false;\n    }\n    return true;\n  });\n\n  const hasSubscription = computed(() => {\n    return dataRaw.value;\n  });\n\n  const loadLedger = async () => {\n    if (owner.value) {\n      try {\n        validateAddress(owner.value);\n        const result = await getLedger(owner.value);\n        dataRaw.value = result.data;\n        if (result.cache) {\n          const stop = watch(\n            isReady,\n            async () => {\n              if (isReady.value) {\n                const result = await getLedger(owner.value);\n                dataRaw.value = result.data;\n                stop();\n              }\n            },\n            { immediate: true }\n          );\n        }\n        return;\n        // eslint-disable-next-line no-empty\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    dataRaw.value = null;\n  };\n\n  watch(\n    owner,\n    async () => {\n      await loadLedger();\n    },\n    {\n      immediate: true\n    }\n  );\n\n  return {\n    owner,\n    dataRaw,\n    hasSubscription,\n    isActive,\n    countMonth,\n    validUntil,\n    loadLedger,\n    devices,\n    loadDevices,\n    getFreeWeightCalc\n  };\n};\n","<template>\n  <robo-layout>\n    <dapp-header :title=\"props.pagetitle\" />\n    <slot />\n    <dapp-footer />\n  </robo-layout>\n</template>\n\n<script setup>\n\nimport DappHeader from '@/components/Header';\nimport DappFooter from '@/components/Footer';\nimport { useSubscription } from \"@/hooks/useSubscription\";\nimport { defineProps, watch } from 'vue';\nimport { useStore } from \"vuex\";\n\nconst props = defineProps({\n  pagetitle: {\n    type: String\n  }\n});\n\nconst store = useStore();\nconst subscription = useSubscription();\n\n watch(\n  () => store.state.robonomicsUIvue.rws.active,\n  (v) => {\n    subscription.owner.value = v;\n  },\n  { immediate: true }\n);\n\nwatch(\n  [subscription.owner, subscription.validUntil],\n  () => {\n    store.commit(\"rws/setExpiredate\", subscription.validUntil);\n  },\n  { immediate: true }\n);\n\nwatch(\n  subscription.devices,\n  (devices) => {\n    store.commit(\"rws/setUsers\", devices);\n  },\n  { immediate: true }\n);\n</script>\n","import script from \"./Main.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Main.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=7d550e06\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","// import { Buffer } from \"buffer\";\nimport axios from \"axios\";\nimport { create } from \"ipfs-http-client\";\nimport { ref } from \"vue\";\n\nclass IpfsApiClient {\n  constructor(endpoint) {\n    this.endpoint = endpoint;\n    this.authHeader = null;\n    this.robonomics = null;\n    this._create();\n  }\n  _create() {\n    this.client = create({\n      ...this._options()\n    });\n  }\n  _options() {\n    return {\n      url: this.endpoint,\n      headers: {\n        authorization: `Basic ${this.authHeader}`,\n        robonomics: this.robonomics\n      }\n    };\n  }\n  isAuth() {\n    return !!this.authHeader && !!this.robonomics;\n  }\n  auth(owner, address, signature) {\n    const authHeaderRaw = `sub-${address}:${signature}`;\n    this.authHeader = Buffer.from(authHeaderRaw).toString(\"base64\");\n    this.robonomics = owner;\n    this._create();\n  }\n  authClear() {\n    this.authHeader = null;\n    this.robonomics = null;\n    this._create();\n  }\n  async ls(cid) {\n    const files = [];\n    for await (const file of this.client.ls(cid)) {\n      if (file.type === \"file\") {\n        files.push(file);\n      }\n    }\n    return files;\n  }\n  async cat(cid) {\n    const cat = async (cid) => {\n      const decoder = new TextDecoder();\n      let content = \"\";\n      for await (const chunk of this.client.cat(cid)) {\n        content += decoder.decode(chunk, {\n          stream: true\n        });\n      }\n      return content;\n    };\n    return await cat(cid);\n  }\n  async add(data) {\n    return await this.client.add(data);\n  }\n  async catViaGateway(gateway, cid, attempts = 5) {\n    for (let index = 1; index <= attempts; index++) {\n      try {\n        return (await axios.get(`${gateway}${cid}`)).data;\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    throw new Error(\"File not available\");\n  }\n  async catViaGatewaysRotation(gateways, cid) {\n    for (const gateway of gateways) {\n      try {\n        return {\n          gateway,\n          result: await this.catViaGateway(gateway, cid)\n        };\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n    throw new Error(\"File not available\");\n  }\n  async catViaGateways(gateways, cid) {\n    const controller = new AbortController();\n    const readFile = async (gateway, cid) => {\n      const response = await axios.get(`${gateway}${cid}`, {\n        signal: controller.signal\n      });\n      controller.abort();\n      return response.data;\n    };\n    const requests = [];\n    for (const gateway of gateways) {\n      requests.push(readFile(gateway, cid));\n    }\n    try {\n      const result = await Promise.any(\n        requests.map((p, i) => p.then((v) => [v, i]))\n      );\n      return {\n        gateway: gateways[result[1]],\n        result: result[0]\n      };\n    } catch (_) {\n      throw new Error(\"File not available\");\n    }\n  }\n}\n\nexport default {\n  install: (app, params) => {\n    const instance = ref();\n    app.provide(\"IpfsProvider\", {\n      instance,\n      gateways: params.gateways || []\n    });\n    instance.value = new IpfsApiClient(params.api.gateway);\n  }\n};\n","import { u8aConcat, u8aToU8a } from \"@polkadot/util\";\nimport {\n  ed25519PairFromSeed,\n  encodeAddress,\n  mnemonicToMiniSecret,\n  randomAsU8a\n} from \"@polkadot/util-crypto\";\nimport ed2curve from \"ed2curve\";\nimport nacl from \"tweetnacl\";\n\nfunction naclOpen(sealed, nonce, senderBoxPublic, receiverBoxSecret) {\n  return (\n    nacl.box.open(sealed, nonce, senderBoxPublic, receiverBoxSecret) || null\n  );\n}\nfunction naclSeal(\n  message,\n  senderBoxSecret,\n  receiverBoxPublic,\n  nonce = randomAsU8a(24)\n) {\n  return {\n    nonce,\n    sealed: nacl.box(message, nonce, receiverBoxPublic, senderBoxSecret)\n  };\n}\nfunction convertSecretKeyToCurve25519(secretKey) {\n  return ed2curve.convertSecretKey(secretKey);\n}\nfunction convertPublicKeyToCurve25519(publicKey) {\n  return ed2curve.convertPublicKey(publicKey);\n}\nexport function decryptMessage(\n  encryptedMessageWithNonce,\n  senderPublicKey,\n  secretKey\n) {\n  const messageU8a = u8aToU8a(encryptedMessageWithNonce);\n  return naclOpen(\n    messageU8a.slice(24, messageU8a.length),\n    messageU8a.slice(0, 24),\n    convertPublicKeyToCurve25519(u8aToU8a(senderPublicKey)),\n    convertSecretKeyToCurve25519(secretKey)\n  );\n}\nexport function encryptMessage(\n  message,\n  recipientPublicKey,\n  secretKey,\n  nonceIn\n) {\n  const { nonce, sealed } = naclSeal(\n    u8aToU8a(message),\n    convertSecretKeyToCurve25519(secretKey),\n    convertPublicKeyToCurve25519(u8aToU8a(recipientPublicKey)),\n    nonceIn\n  );\n  return u8aConcat(nonce, sealed);\n}\nexport function createPair(mnemonic) {\n  const seed = mnemonicToMiniSecret(mnemonic);\n  const pair = ed25519PairFromSeed(seed);\n  return pair;\n}\nexport function encryptor(pair) {\n  return {\n    pair,\n    address: encodeAddress(pair.publicKey, 32),\n    encodeAddress: (ss58Format = 32) => {\n      return encodeAddress(pair.publicKey, ss58Format);\n    },\n    decryptMessage: (encryptedMessageWithNonce, senderPublicKey) => {\n      return decryptMessage(\n        encryptedMessageWithNonce,\n        senderPublicKey,\n        pair.secretKey\n      );\n    },\n    encryptMessage: (message, recipientPublicKey, nonce) => {\n      return encryptMessage(message, recipientPublicKey, pair.secretKey, nonce);\n    }\n  };\n}\n// export function encryptor(mnemonic) {\n//   const pair = createPair(mnemonic);\n//   return {\n//     pair,\n//     address: encodeAddress(pair.publicKey, 32),\n//     encodeAddress: (ss58Format = 32) => {\n//       return encodeAddress(pair.publicKey, ss58Format);\n//     },\n//     decryptMessage: (encryptedMessageWithNonce, senderPublicKey) => {\n//       return decryptMessage(\n//         encryptedMessageWithNonce,\n//         senderPublicKey,\n//         pair.secretKey\n//       );\n//     },\n//     encryptMessage: (message, recipientPublicKey, nonce) => {\n//       return encryptMessage(message, recipientPublicKey, pair.secretKey, nonce);\n//     }\n//   };\n// }\n","import { encryptor } from \"@/utils/encryptor\";\nimport { decodePair } from \"@polkadot/keyring/pair/decode\";\nimport { u8aToHex, u8aWrapBytes } from \"@polkadot/util\";\nimport { base64Decode } from \"@polkadot/util-crypto\";\nimport { AccountManager } from \"robonomics-interface\";\n\nexport default class AccountManagerDapp extends AccountManager {\n  constructor(keyring, config = {}, api = null) {\n    super(keyring, api);\n    this.extension = null;\n    keyring.loadAll(config);\n    this.setReady(true);\n  }\n\n  async beforeSetSender(address, { type, extension }) {\n    // if (this.account && !this.account.meta.isInjected) {\n    //   // this.keyring.forgetAccount(this.account.address);\n    //   this.account.lock();\n    // }\n    this.extension = extension;\n    try {\n      this.keyring.getPair(address);\n      // eslint-disable-next-line no-empty\n    } catch (_) {\n      this.keyring.loadInjected(address, {}, type);\n    }\n  }\n\n  async afterSetSender() {\n    await super.afterSetSender();\n    if (this.account.meta.isInjected && this.extension) {\n      this.api.setSigner(this.extension.signer);\n      this.account.signMsg = async (data) => {\n        return (\n          await this.extension.signer.signRaw({\n            address: this.account.address,\n            data: u8aToHex(u8aWrapBytes(data)),\n            type: \"bytes\"\n          })\n        ).signature;\n      };\n    }\n  }\n\n  async addUri(suri, meta = {}, type = \"ed25519\") {\n    const pair = this.keyring.keyring.addFromUri(suri, meta, type);\n    return await this.setSender(pair.address, {\n      type: type\n    });\n  }\n\n  async addUriPassword(\n    suri,\n    password = undefined,\n    meta = {},\n    type = \"ed25519\"\n  ) {\n    const { pair } = this.keyring.addUri(suri, password, meta, type);\n    return await this.setSender(pair.address, {\n      type: type\n    });\n  }\n\n  async addJsonPassword(json, password) {\n    const pair = this.keyring.createFromJson(json);\n    this.keyring.addPair(pair, password);\n    return await this.setSender(pair.address, {\n      type: pair.type\n    });\n  }\n\n  async addPair(pairKey) {\n    const pair = this.keyring.keyring.addFromPair(pairKey);\n    return await this.setSender(pair.address, {\n      type: pair.type\n    });\n  }\n\n  encryptor(password = null) {\n    if (!this.account.meta.isInjected && this.account.type === \"ed25519\") {\n      const json = this.account.toJson(password);\n      const decoded = decodePair(\n        password,\n        base64Decode(json.encoded),\n        json.encoding.type\n      );\n      return encryptor(decoded);\n    }\n  }\n}\n","import configApp from \"@/config\";\nimport keyring from \"@polkadot/ui-keyring\";\nimport { Robonomics } from \"robonomics-interface\";\nimport { ref, shallowRef } from \"vue\";\nimport AccountManager from \"./robonomicsAccountManager\";\n\nexport default {\n  install: async (app, params = {}) => {\n    const isReady = ref(false);\n    const instance = shallowRef();\n    const accountManager = new AccountManager(keyring);\n    app.provide(\"RobonomicsProvider\", {\n      isReady,\n      instance,\n      accountManager\n    });\n\n    const urlParams = new URLSearchParams(window.location.search);\n    let endpoint = urlParams.get(\"rpc\");\n\n    if (!endpoint) {\n      endpoint =\n        localStorage.getItem(\"rpc-parachain\") || configApp.default_rpc_endpoint;\n    }\n    localStorage.setItem(\"rpc-parachain\", endpoint);\n    const config = {\n      // endpoint: \"ws://127.0.0.1:9944\"\n      // endpoint: \"wss://kusama.rpc.robonomics.network/\"\n      endpoint\n    };\n\n    instance.value = await Robonomics.createInstance({ ...config, ...params });\n    instance.value.setAccountManager(accountManager);\n    isReady.value = true;\n  }\n};\n","import { ethers } from \"ethers\";\nimport { reactive } from \"vue\";\n\nconst CodeError = {\n  PROVIDER: 4,\n  NETWORK: 1,\n  ACCOUNT: 2\n};\n\nclass Web3Error extends Error {\n  constructor(code = null, ...params) {\n    super(...params);\n    this.code = code;\n  }\n}\n\nclass Connector {\n  async activate() {}\n  async getProvider() {}\n  async getAccount() {}\n  async getNetworkId() {}\n}\n\nclass Extension extends Connector {\n  constructor(provider, update) {\n    super();\n    this.provider = provider;\n    this.name = \"extension\";\n    this.account = null;\n    this.networkId = null;\n    this.emit = update;\n  }\n  handleChainChanged(networkId) {\n    this.networkId = Number(networkId);\n    this.emit(\"chainChanged\", { networkId: this.networkId });\n  }\n  async getProvider() {\n    this.provider.on(\"accountsChanged\", (accounts) => {\n      this.handleAccountsChanged(accounts);\n    });\n    this.provider.on(\"chainChanged\", (networkId) => {\n      this.handleChainChanged(networkId);\n    });\n    return this.provider;\n  }\n  async getNetworkId() {\n    this.networkId = Number(\n      await this.provider.request({ method: \"eth_chainId\" })\n    );\n    return this.networkId;\n  }\n  handleAccountsChanged(accounts) {\n    if (accounts.length > 0) {\n      this.account = accounts[0];\n    } else {\n      this.account = null;\n    }\n    this.emit(\"accountsChanged\", { account: this.account });\n  }\n}\n\nclass Provider {\n  constructor({ networks = [] } = {}) {\n    this.provider = null;\n    this.connector = null;\n    this.signer = null;\n    this.networks = networks;\n\n    this.state = reactive({\n      isReady: false,\n      error: null,\n      account: null,\n      networkId: null,\n      block: null\n    });\n  }\n  async setConnector(connector) {\n    if (connector.name === \"extension\") {\n      this.provider = new ethers.BrowserProvider(await connector.getProvider());\n    } else {\n      this.provider = new ethers.WebSocketProvider(\n        await connector.getProvider()\n      );\n    }\n    this.connector = connector;\n    this.setSigner();\n  }\n  async setSigner() {\n    if (this.connector && this.connector.name === \"extension\") {\n      try {\n        this.signer = await this.provider.getSigner();\n        this.state.account = this.signer.address;\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n  on(name, data) {\n    // if (name === \"accountsChanged\") {\n    //   this.state.account = data.account;\n    // }\n    if (name === \"chainChanged\") {\n      this.state.networkId = data.networkId;\n    }\n    if (!this.networks.includes(this.state.networkId)) {\n      this.state.error = new Web3Error(\n        CodeError.NETWORK,\n        `sssPlease, switch to network id ${this.networks}`\n      );\n    } else {\n      this.state.error = null;\n    }\n  }\n  async setProvider(provider) {\n    try {\n      await this.setConnector(\n        new Extension(provider, (name, data) => this.on(name, data))\n      );\n    } catch (error) {\n      console.warn(error.message);\n    }\n    try {\n      if (this.connector) {\n        this.state.networkId = await this.connector.getNetworkId();\n        if (!this.networks.includes(this.state.networkId)) {\n          this.state.error = new Web3Error(\n            CodeError.NETWORK,\n            `Please, switch to network id ${this.networks}`\n          );\n        }\n      }\n    } catch (error) {\n      this.state.error = error;\n    }\n\n    if (this.provider && this.state.error === null) {\n      this.state.isReady = true;\n      this.provider.on(\"block\", async (blockNumber) => {\n        this.state.block = await this.provider.getBlock(blockNumber);\n      });\n      this.state.block = await this.provider.getBlock(\"latest\");\n    }\n  }\n}\n\nexport const $web3 = new Provider({ networks: [11155111] });\n\nexport default {\n  install: async (app) => {\n    app.provide(\"EthereumProvider\", {\n      web3: $web3\n    });\n  }\n};\n","<template>\n  <robo-layout-section width=\"middle-wide\">\n\n    <robo-grid offset=\"x0\" minColumnWidth=\"200px\">\n\n      <robo-section offset=\"x0\">\n        <robo-card>\n          <robo-text title=\"4\" align=\"left\">Season Pass</robo-text>\n\n          <img src=\"images/season-pass-24-25.webp\" />\n\n          <robo-button router=\"/hardware/season-pass\" size=\"small\" block>\n              Activate\n            </robo-button>\n        </robo-card>\n      </robo-section>\n\n      <robo-section offset=\"x0\">\n        <robo-card>\n          <template v-if=\"rwsactive && rwsactive !== ''\">\n            <robo-template-rws-active />\n          </template>\n          <template v-else>\n            <robo-text title=\"4\" align=\"left\">RWS subscription</robo-text>\n            <robo-section offset=\"x1\">\n              <robo-text size=\"small\" weight=\"normal-italic\">\n                <robo-grid offset=\"x0\" gap=\"x05\" columns=\"1\">\n                  <robo-grid-item borderbottom>\n                    Price from: <b>~ {{ price }} XRT </b>\n\n                    <robo-details>\n                      <template #summary>\n                        <robo-icon icon=\"circle-question\" />\n                      </template>\n                      <robo-grid offset=\"x0\" gap=\"x05\">\n                        <robo-text weight=\"bold\">Where to buy XRT</robo-text>\n                        <robo-link href=\"https://app.basilisk.cloud/trade\">\n                          Basilisk\n                        </robo-link>\n                        <robo-link\n                          href=\"https://app.solarbeam.io/exchange/swap\"\n                        >\n                          Solarbeam\n                        </robo-link>\n                        <robo-link\n                          href=\"https://trade.kraken.com/markets/kraken/xrt/usd\"\n                        >\n                          Kraken\n                        </robo-link>\n                      </robo-grid>\n                    </robo-details>\n                  </robo-grid-item>\n\n                  <robo-grid-item borderbottom>\n                    Activation time <b>~ 2 min</b>\n                  </robo-grid-item>\n\n                  <robo-grid-item>\n                    Available subscriptions:\n                    <b>{{ freeAuctions }}</b>\n                  </robo-grid-item>\n                </robo-grid>\n              </robo-text>\n            </robo-section>\n\n            <robo-button :router=\"linkActivate\" size=\"small\" block>\n              <robo-icon icon=\"wallet\" /> Buy a subscription\n            </robo-button>\n          </template>\n        </robo-card>\n      </robo-section>\n\n      <robo-section offset=\"x0\">\n        <robo-text title=\"4\" align=\"left\">Open-source hardware & web3 cloud</robo-text>\n        <robo-text size=\"small\" weight=\"normal-italic\">\n          <robo-grid offset=\"x0\" gap=\"x05\" columns=\"1\">\n            <robo-grid-item borderbottom>\n              <robo-icon icon=\"check\" /> Secured data, only you have an access\n            </robo-grid-item>\n            <robo-grid-item borderbottom>\n              <robo-icon icon=\"check\" /> Remote control without any corporate clouds\n            </robo-grid-item>\n            <robo-grid-item borderbottom>\n              <robo-icon icon=\"check\" /> Brand-independent smart home, combine wanted devices\n            </robo-grid-item>\n            <robo-grid-item>\n              <robo-icon icon=\"check\" /> Update your Robonomics devices as you wish with type-c\n            </robo-grid-item>\n          </robo-grid>\n        </robo-text>\n      </robo-section>\n    </robo-grid>\n\n    <!-- <robo-grid offset=\"x0\" minColumnWidth=\"200px\">\n      <robo-section offset=\"x0\">\n        <robo-card>\n          <template v-if=\"rwsactive && rwsactive !== ''\">\n            <robo-template-rws-active />\n          </template>\n          <template v-else>\n            <robo-text title=\"4\" align=\"left\">RWS subscription</robo-text>\n            <robo-section offset=\"x1\">\n              <robo-text size=\"small\" weight=\"normal-italic\">\n                <robo-grid offset=\"x0\" gap=\"x05\" columns=\"1\">\n                  <robo-grid-item borderbottom>\n                    Price from: <b>~ {{ price }} XRT </b>\n\n                    <robo-details>\n                      <template #summary>\n                        <robo-icon icon=\"circle-question\" />\n                      </template>\n                      <robo-grid offset=\"x0\" gap=\"x05\">\n                        <robo-text weight=\"bold\">Where to buy XRT</robo-text>\n                        <robo-link href=\"https://app.basilisk.cloud/trade\">\n                          Basilisk\n                        </robo-link>\n                        <robo-link\n                          href=\"https://app.solarbeam.io/exchange/swap\"\n                        >\n                          Solarbeam\n                        </robo-link>\n                        <robo-link\n                          href=\"https://trade.kraken.com/markets/kraken/xrt/usd\"\n                        >\n                          Kraken\n                        </robo-link>\n                      </robo-grid>\n                    </robo-details>\n                  </robo-grid-item>\n\n                  <robo-grid-item borderbottom>\n                    Activation time <b>~ 2 min</b>\n                  </robo-grid-item>\n\n                  <robo-grid-item>\n                    Available subscriptions:\n                    <b>{{ freeAuctions }}</b>\n                  </robo-grid-item>\n                </robo-grid>\n              </robo-text>\n            </robo-section>\n\n            <robo-button :router=\"linkActivate\" size=\"small\">\n              <robo-icon icon=\"wallet\" /> Buy a subscription\n            </robo-button>\n          </template>\n        </robo-card>\n      </robo-section>\n\n      <robo-section offset=\"x0\">\n        <robo-text title=\"4\" align=\"left\">What you get with RWS</robo-text>\n        <robo-text size=\"small\" weight=\"normal-italic\">\n          <robo-grid offset=\"x0\" gap=\"x05\" columns=\"1\">\n            <robo-grid-item borderbottom>\n              <robo-icon icon=\"check\" /> Brand-independent smart home\n            </robo-grid-item>\n            <robo-grid-item borderbottom>\n              <robo-icon icon=\"check\" /> Secured data, only you have access\n            </robo-grid-item>\n            <robo-grid-item borderbottom>\n              <robo-icon icon=\"check\" /> Remote control without corporate clouds\n            </robo-grid-item>\n            <robo-grid-item>\n              <robo-icon icon=\"check\" /> Home assistant integration\n            </robo-grid-item>\n          </robo-grid>\n        </robo-text>\n      </robo-section>\n\n      <robo-section offset=\"x0\">\n        <robo-text title=\"4\" align=\"left\">What is RWS</robo-text>\n        <robo-text weight=\"normal-italic\" size=\"small\" offset=\"x1\">\n          Robonomics Web Services (RWS) is a smart home integration that enables\n          secure interaction with smart devices and robots through transactions\n          on the Robonomics parachain, rather than relying on centralized cloud\n          services.\n        </robo-text>\n        <robo-text weight=\"normal-italic\" size=\"small\" offset=\"x1\">\n          An RWS subscription ensures stable transaction processing with every\n          block, making it an ideal choice for those who wish to receive data\n          from devices and remotely manage them.\n        </robo-text>\n        <robo-text weight=\"normal-italic\" size=\"small\" offset=\"x1\">\n          Easy to start for Home Assistant users.\n          <robo-link\n            href=\"https://wiki.robonomics.network/docs/install-smart-home/\"\n          >\n            Guide to start\n          </robo-link>\n        </robo-text>\n      </robo-section>\n    </robo-grid> -->\n  </robo-layout-section>\n</template>\n\n<script>\nimport { useRobonomics } from \"@/hooks/useRobonomics\";\nimport { fromUnit } from \"@/utils/tools\";\nimport { bnToBn } from \"@polkadot/util\";\nimport { computed, onUnmounted, ref, watch } from \"vue\";\nimport { useStore } from \"vuex\";\n\nexport default {\n  setup() {\n    const price = ref(0);\n    const freeAuctions = ref(0);\n    let unsubscribeBlock = null;\n\n    const store = useStore();\n    const rwsactive = computed(() => {\n      return store.state.robonomicsUIvue.rws.active;\n    });\n    const linkActivate = computed(() => {\n      return store.state.robonomicsUIvue.rws.links.activate;\n    });\n\n    const { isReady, getInstance } = useRobonomics();\n\n    watch(\n      isReady,\n      async (isReady) => {\n        if (isReady) {\n          const robonomics = getInstance();\n          freeAuctions.value = (await robonomics.rws.getAuctionQueue()).length;\n          unsubscribeBlock = await robonomics.events.onBlock(async () => {\n            freeAuctions.value = (\n              await robonomics.rws.getAuctionQueue()\n            ).length;\n          });\n          const minimalBid = await robonomics.rws.getMinimalBid();\n          price.value = minimalBid.add(bnToBn(1));\n        }\n      },\n      { immediate: true }\n    );\n\n    onUnmounted(() => {\n      if (unsubscribeBlock) {\n        unsubscribeBlock();\n      }\n    });\n\n    const priceFormat = computed(() => {\n      if (isReady.value) {\n        return fromUnit(\n          price.value,\n          getInstance().api.registry.chainDecimals[0],\n          0\n        );\n      }\n      return 0;\n    });\n\n    return {\n      rwsactive,\n      linkActivate,\n      freeAuctions,\n      price: priceFormat\n    };\n  }\n};\n</script>\n\n<style>\n#home-links .robo-link {\n  position: relative;\n  display: block;\n  background-color: var(--robo-color-blue-80);\n  min-height: 150px;\n  color: var(--robo-color-light);\n  padding: var(--robo-space);\n  font-weight: bold;\n  text-transform: uppercase;\n}\n\n#home-links .robo-link:before {\n  content: \"\";\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  height: 15px;\n  background-color: var(--robo-color-blue);\n  z-index: 1;\n  transition: 0.2s all;\n}\n\n#home-links .robo-link:hover::before {\n  height: 100%;\n}\n\n#home-links .robo-link span {\n  display: block;\n  margin-top: 30px;\n  position: relative;\n  z-index: 2;\n}\n</style>\n","import { render } from \"./Home.vue?vue&type=template&id=6c762c3c\"\nimport script from \"./Home.vue?vue&type=script&lang=js\"\nexport * from \"./Home.vue?vue&type=script&lang=js\"\n\nimport \"./Home.vue?vue&type=style&index=0&id=6c762c3c&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<script>\nexport default {\n  created: function () {\n    window.location.href = `https://v0.dapp.robonomics.network/${this.$route.href}`;\n  }\n};\n</script>\n","import script from \"./PathNotFound.vue?vue&type=script&lang=js\"\nexport * from \"./PathNotFound.vue?vue&type=script&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <robo-layout-section>\n    <robo-template-rws-buy\n      :price=\"price\"\n      activationtime=\"2\"\n      :available=\"freeAuctions\"\n      :chainInfoUploaded=\"chainInfoStatus\"\n      :rwsExpiration=\"expiredate\"\n      @on-activate=\"onActivate\"\n    />\n  </robo-layout-section>\n</template>\n\n<script>\nimport { useAccount } from \"@/hooks/useAccount\";\nimport { useBalance } from \"@/hooks/useBalance\";\nimport { useDevices } from \"@/hooks/useDevices\";\nimport { useRobonomics } from \"@/hooks/useRobonomics\";\nimport { useSend } from \"@/hooks/useSend\";\nimport { useSubscription } from \"@/hooks/useSubscription\";\nimport { fromUnit } from \"@/utils/tools\";\nimport { bnToBn } from \"@polkadot/util\";\nimport { computed, onUnmounted, ref, watch, watchEffect } from \"vue\";\n\nexport default {\n  setup() {\n    const price = ref(0);\n    const freeAuctions = ref(0);\n    const chainInfoStatus = ref(false);\n    let unsubscribeBlock = null;\n\n    const { isReady, getInstance } = useRobonomics();\n    const { account, unsubscribe: unsubscribeAccount } = useAccount();\n    const { balance, unsubscribe: unsubscribeBalance } = useBalance(account);\n    const subscription = useSubscription(account);\n    const devices = useDevices(account);\n\n    watch(\n      isReady,\n      async (isReady) => {\n        if (isReady) {\n          const robonomics = getInstance();\n          freeAuctions.value = (await robonomics.rws.getAuctionQueue()).length;\n          unsubscribeBlock = await robonomics.events.onBlock(async () => {\n            freeAuctions.value = (\n              await robonomics.rws.getAuctionQueue()\n            ).length;\n          });\n\n          const minimalBid = await robonomics.rws.getMinimalBid();\n          price.value = minimalBid.add(bnToBn(1));\n          chainInfoStatus.value = true;\n        }\n      },\n      { immediate: true }\n    );\n\n    onUnmounted(() => {\n      if (unsubscribeBlock) {\n        unsubscribeBlock();\n      }\n      if (unsubscribeBalance) {\n        unsubscribeBalance();\n      }\n      unsubscribeAccount();\n    });\n\n    const transaction = useSend();\n    const onActivate = async (setStatus) => {\n      if (!isReady.value) {\n        setStatus(\"error\", \"Parachain is not ready.\");\n        return;\n      }\n      if (\n        !balance.value ||\n        bnToBn(balance.value).lt(price.value.add(bnToBn(10000000)))\n      ) {\n        setStatus(\n          \"error\",\n          \"Subscription can not be activated due to unsuffcicient XRT balance\"\n        );\n        return;\n      }\n      if (freeAuctions.value <= 0) {\n        setStatus(\"error\", \"There are no available subscriptions\");\n        return;\n      }\n      if (subscription.hasSubscription.value && subscription.isActive.value) {\n        setStatus(\"error\", \"You have an active subscription\");\n        return;\n      }\n\n      const robonomics = getInstance();\n      let call = robonomics.rws.bid(\n        Number(await robonomics.rws.getFirtsFreeAuction()),\n        price.value\n      );\n      if (!devices.devices.value.includes(account.value)) {\n        call = robonomics.api.tx.utility.batch([\n          call,\n          robonomics.rws.setDevices([...devices.devices.value, account.value])\n        ]);\n      }\n      const tx = transaction.createTx();\n      await transaction.send(tx, call);\n      if (tx.error.value) {\n        if (tx.error.value !== \"Cancelled\") {\n          setStatus(\"error\", tx.error.value);\n        } else {\n          setStatus(\"cancel\");\n        }\n        return;\n      }\n\n      const unsubscribeBlock = await robonomics.events.onBlock(() => {\n        subscription.loadLedger();\n      });\n      const stopWatchEffect = watchEffect(() => {\n        if (subscription.hasSubscription.value && subscription.isActive.value) {\n          stopWatchEffect();\n          unsubscribeBlock();\n          setStatus(\"ok\");\n        }\n      });\n    };\n\n    const priceFormat = computed(() => {\n      if (isReady.value) {\n        return fromUnit(\n          price.value,\n          getInstance().api.registry.chainDecimals[0],\n          0\n        );\n      }\n      return 0;\n    });\n\n    return {\n      freeAuctions,\n      price: priceFormat,\n      expiredate: subscription.validUntil,\n      chainInfoStatus,\n      onActivate\n    };\n  }\n};\n</script>\n","import { ref } from \"vue\";\nimport { useRobonomics } from \"./useRobonomics\";\n\nexport const useAccount = () => {\n  const account = ref(null);\n  const { accountManager } = useRobonomics();\n  if (accountManager.account) {\n    account.value = accountManager.account.address;\n  }\n  const unsubscribe = accountManager.onChange((res) => {\n    account.value = res.address;\n  });\n  return { account, unsubscribe };\n};\n","import { ref, watch } from \"vue\";\nimport { useRobonomics } from \"./useRobonomics\";\n\nexport const useBalance = (account) => {\n  const balance = ref(null);\n  const { isReady, getInstance } = useRobonomics();\n  let unsubscribe;\n  watch(\n    [account, isReady],\n    async () => {\n      if (unsubscribe) {\n        unsubscribe();\n      }\n      if (!isReady.value || !account.value) {\n        return;\n      }\n      const robonomics = getInstance();\n      unsubscribe = await robonomics.account.getBalance(account.value, (r) => {\n        balance.value = r.free.sub(r.frozen).toNumber();\n      });\n    },\n    { immediate: true }\n  );\n  return { balance, unsubscribe };\n};\n","import { ref } from \"vue\";\nimport { useRobonomics } from \"./useRobonomics\";\nimport { useSubscription } from \"./useSubscription\";\n\nexport const useSend = () => {\n  const { isReady, getInstance, accountManager } = useRobonomics();\n  const { getFreeWeightCalc } = useSubscription();\n\n  const getCallWeight = async (tx, signer) => {\n    if (!signer) {\n      if (accountManager.account) {\n        signer = accountManager.account.address;\n      } else {\n        throw new Error(\"Signer required\");\n      }\n    }\n    if (tx.hasPaymentInfo) {\n      return (await tx.paymentInfo(signer)).weight.toNumber();\n    }\n    return 0;\n  };\n\n  const checkWeight = async (tx, owner) => {\n    const freeWeightCalc = await getFreeWeightCalc(owner);\n    if (freeWeightCalc < 0) {\n      throw new Error(`Not found ledger ${owner}`);\n    }\n    const callWeight = await getCallWeight(tx);\n    if (callWeight > freeWeightCalc) {\n      throw new Error(\n        `The origin account have no enough free weight to process these call. Call weight ${callWeight}, Free weight ${freeWeightCalc}`\n      );\n    }\n  };\n\n  const createTx = () => {\n    const result = ref(null);\n    const error = ref(null);\n    const process = ref(false);\n    return { error, process, result };\n  };\n\n  const send = async (tx, call, subscription = false) => {\n    tx.result.value = null;\n    tx.error.value = null;\n    tx.process.value = true;\n    if (!isReady.value) {\n      tx.error.value = \"Robonomics is not ready\";\n      tx.process.value = false;\n      return;\n    }\n    const robonomics = getInstance();\n    try {\n      if (subscription) {\n        await checkWeight(call, subscription);\n        robonomics.accountManager.useSubscription(subscription);\n      }\n      const nonce = await robonomics.api.rpc.system.accountNextIndex(\n        robonomics.accountManager.account.address\n      );\n      tx.result.value = await robonomics.accountManager.signAndSend(call, {\n        nonce\n      });\n      console.log(\"tx\", tx.result.value.block, tx.result.value.tx);\n    } catch (e) {\n      console.log(e);\n      tx.error.value = e.message;\n    }\n    tx.process.value = false;\n    if (subscription) {\n      robonomics.accountManager.useSubscription(false);\n    }\n    return tx.result;\n  };\n\n  return { createTx, send };\n};\n","import { render } from \"./RwsActivate.vue?vue&type=template&id=51eac7f6\"\nimport script from \"./RwsActivate.vue?vue&type=script&lang=js\"\nexport * from \"./RwsActivate.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <robo-layout-section>\n    <robo-template-rws-setup\n      :onRwsUpdate=\"rwsUpdateActions\"\n      :onUserDelete=\"removeUser\"\n      :onUserAdd=\"addUser\"\n      :onSaveHapass=\"saveHapass\"\n    />\n  </robo-layout-section>\n</template>\n\n<script>\nimport { useAccount } from \"@/hooks/useAccount\";\nimport { useDevices } from \"@/hooks/useDevices\";\nimport { useRobonomics } from \"@/hooks/useRobonomics\";\nimport { useSend } from \"@/hooks/useSend\";\nimport { u8aToHex } from \"@polkadot/util\";\nimport { decodeAddress, encodeAddress } from \"@polkadot/util-crypto\";\nimport { computed } from \"vue\";\nimport { useStore } from \"vuex\";\n\nexport default {\n  setup() {\n    const store = useStore();\n\n    const setupOwner = computed(() => {\n      return store.state.robonomicsUIvue.rws.active;\n    });\n\n    const { isReady, getInstance } = useRobonomics();\n    const transaction = useSend();\n    const devices = useDevices(setupOwner);\n    const { account } = useAccount();\n\n    const rwsUpdateActions = (rws, setStatus) => {\n      if (!rws.owner || !rws.name || !rws.controller) {\n        setStatus(\"error\", \"All fields are required\");\n        return;\n      }\n\n      try {\n        encodeAddress(rws.owner);\n      } catch (error) {\n        setStatus(\"error\", `Owner: ${error.message}`);\n        return;\n      }\n      try {\n        encodeAddress(rws.controller);\n      } catch (error) {\n        setStatus(\"error\", `Controller: ${error.message}`);\n        return;\n      }\n\n      setStatus(\"ok\");\n    };\n\n    const addUser = async (user, setStatus) => {\n      if (!isReady.value) {\n        setStatus(\"error\", \"Parachain is not ready.\");\n        return;\n      }\n      if (setupOwner.value && setupOwner.value !== account.value) {\n        setStatus(\"error\", \"You do not have access to this action.\");\n        return;\n      }\n      if (devices.devices.value.includes(user)) {\n        setStatus(\"error\", \"The address is already in the subscription.\");\n        return;\n      }\n\n      const call = await getInstance().rws.setDevices([\n        ...devices.devices.value,\n        user\n      ]);\n      const tx = transaction.createTx();\n      if (devices.devices.value.includes(account.value)) {\n        await transaction.send(tx, call, setupOwner.value);\n      } else {\n        await transaction.send(tx, call);\n      }\n      if (tx.error.value) {\n        if (tx.error.value !== \"Cancelled\") {\n          setStatus(\"error\", tx.error.value);\n        } else {\n          setStatus(\"cancel\");\n        }\n        return;\n      } else {\n        await devices.loadDevices();\n      }\n      store.commit(\"rws/setUsers\", devices.devices);\n      setStatus(\"ok\");\n    };\n\n    const removeUser = async (user, setStatus) => {\n      if (!isReady.value) {\n        setStatus(\"error\", \"Parachain is not ready.\");\n        return;\n      }\n      if (setupOwner.value && setupOwner.value !== account.value) {\n        setStatus(\"error\", \"You do not have access to this action.\");\n        return;\n      }\n      if (devices.devices.value.includes(user)) {\n        const call = await getInstance().rws.setDevices(\n          devices.devices.value.filter((item) => item !== user)\n        );\n        const tx = transaction.createTx();\n        if (devices.devices.value.includes(account.value)) {\n          await transaction.send(tx, call, setupOwner.value);\n        } else {\n          await transaction.send(tx, call);\n        }\n        if (tx.error.value) {\n          if (tx.error.value !== \"Cancelled\") {\n            setStatus(\"error\", tx.error.value);\n          } else {\n            setStatus(\"cancel\");\n          }\n          return;\n        } else {\n          await devices.loadDevices();\n        }\n      }\n      store.commit(\"rws/setUsers\", devices.devices);\n      setStatus(\"ok\");\n    };\n\n    const saveHapass = async (passToSave, setStatus) => {\n      if (!isReady.value) {\n        setStatus(\"error\", \"Parachain is not ready.\");\n        return;\n      }\n      const userAddress = store.state.robonomicsUIvue.rws.user.account;\n\n      const robonomics = getInstance();\n\n      await robonomics.accountManager.addPair(\n        store.state.robonomicsUIvue.rws.user.key\n      );\n      const user = robonomics.accountManager.encryptor();\n\n      try {\n        encodeAddress(userAddress);\n      } catch (error) {\n        setStatus(\"error\", error.message);\n        return;\n      }\n\n      const encodedDevices = devices.devices.value.map((item) =>\n        encodeAddress(item)\n      );\n      if (!encodedDevices.includes(encodeAddress(userAddress))) {\n        setStatus(\"error\", \"User not found in subscription\");\n        return;\n      }\n\n      const setup = store.state.robonomicsUIvue.rws.list.find(\n        (item) => item.owner === setupOwner.value\n      );\n\n      const passwordForAdmin = user.encryptMessage(\n        passToSave,\n        decodeAddress(setup.controller)\n      );\n\n      const passwordForRecovery = user.encryptMessage(\n        passToSave,\n        decodeAddress(userAddress)\n      );\n\n      const call = await robonomics.datalog.write(\n        JSON.stringify({\n          subscription: setup.owner,\n          ha: setup.controller,\n          admin: u8aToHex(passwordForAdmin),\n          user: u8aToHex(passwordForRecovery)\n        })\n      );\n      const tx = transaction.createTx();\n      await transaction.send(tx, call, setup.owner);\n\n      try {\n        const accountOld = store.state.robonomicsUIvue.polkadot.accounts.find(\n          (item) => item.address === store.state.robonomicsUIvue.polkadot.address\n        );\n      \n      if (accountOld) {\n        await robonomics.accountManager.setSender(accountOld.address, {\n          type: accountOld.type,\n          extension: store.state.robonomicsUIvue.polkadot.extensionObj\n        });\n      }\n      } catch (e) { console.error(e); }\n\n      if (tx.error.value) {\n        if (tx.error.value !== \"Cancelled\") {\n          setStatus(\"error\", tx.error.value);\n        } else {\n          setStatus(\"cancel\");\n        }\n        return;\n      }\n\n      setStatus(\"ok\");\n    };\n\n    return {\n      saveHapass,\n      rwsUpdateActions,\n      addUser,\n      removeUser\n    };\n  }\n};\n</script>\n","import { render } from \"./RwsSetup.vue?vue&type=template&id=4ab71964\"\nimport script from \"./RwsSetup.vue?vue&type=script&lang=js\"\nexport * from \"./RwsSetup.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <robo-layout-section>\n    <robo-template-rws-setup create :onRwsUpdate=\"onSave\" />\n  </robo-layout-section>\n</template>\n\n<script>\nimport { encodeAddress } from \"@polkadot/util-crypto\";\n\nexport default {\n  setup() {\n    let onSave = (rws, setStatus) => {\n      if (!rws.owner || !rws.name || !rws.controller) {\n        setStatus(\"error\", \"All fields are required\");\n        return;\n      }\n\n      try {\n        encodeAddress(rws.owner);\n      } catch (error) {\n        setStatus(\"error\", `Owner: ${error.message}`);\n        return;\n      }\n      try {\n        encodeAddress(rws.controller);\n      } catch (error) {\n        setStatus(\"error\", `Controller: ${error.message}`);\n        return;\n      }\n\n      setStatus(\"ok\");\n    };\n    return {\n      onSave\n    };\n  }\n};\n</script>\n","import { render } from \"./RwsSetupNew.vue?vue&type=template&id=ef2bf080\"\nimport script from \"./RwsSetupNew.vue?vue&type=script&lang=js\"\nexport * from \"./RwsSetupNew.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <robo-layout-section>\n    <robo-grid offset=\"x0\" gap=\"x1\" galign=\"start\" minColumnWidth=\"450px\">\n      <robo-card>\n        <robo-link router=\"/telemetry\">\n          <robo-image src=\"images/services-ha.jpg\" />\n        </robo-link>\n        <robo-text title=\"3\">\n          <robo-link router=\"/telemetry\">Home assistant</robo-link>\n        </robo-text>\n        <robo-text size=\"small\">\n          Integrate Robonomics into your Home assistant dashboard and get\n          Parachain decentralized cloud service all over the word. Manipulate\n          your smart devices bypassing corporate clouds, manage user access\n          wherever you are. Backup your smart home data in blockchain.\n        </robo-text>\n      </robo-card>\n\n      <robo-card>\n        <robo-link href=\"https://sensors.robonomics.network/#/\">\n          <robo-image src=\"images/services-sensors.jpg\" />\n        </robo-link>\n        <robo-text title=\"3\">\n          <robo-link href=\"https://sensors.robonomics.network/#/\">\n            Sensors Map\n          </robo-link>\n        </robo-text>\n        <robo-text size=\"small\">\n          The decentralized opensource sensors map offers two distinct layers of\n          decentralization at your choise: peer-to-peer connectivity for direct\n          access to sensor data, and the federative concept for accumulating\n          sensor data and displaying measurement history. Anyone can assemble\n          your own sensor using components available on the free market.\n        </robo-text>\n      </robo-card>\n\n      <robo-card>\n        <robo-link href=\"https://dapp.spot-sdk.education\">\n          <robo-image src=\"images/services-spot.jpg\" />\n        </robo-link>\n        <robo-text title=\"3\">\n          <robo-link href=\"https://dapp.spot-sdk.education\">\n            Boston Dynamics Spot SDK lessons\n          </robo-link>\n        </robo-text>\n        <robo-text size=\"small\">\n          Learn and practice with the Boston Dynamics Spot robot wherever you\n          are. After each lesson you will receive a captured video of the robot\n          movements and a printable PDF certificate.\n        </robo-text>\n      </robo-card>\n\n      <robo-card>\n        <robo-link href=\"https://telescope.merklebot.com/#/\">\n          <robo-image src=\"images/services-telescope.jpg\" />\n        </robo-link>\n        <robo-text title=\"3\">\n          <robo-link href=\"https://telescope.merklebot.com/#/\">\n            An Autonomous Telescope Minting RMRK NFT's\n          </robo-link>\n        </robo-text>\n        <robo-text size=\"small\">\n          Connect to an autonomous telescope in the dark night of the Atacama\n          desert in Chile to capture an astronomical object and mint unique NFTs\n          in a few clicks.\n        </robo-text>\n      </robo-card>\n\n      <robo-card>\n        <robo-link href=\"https://dapp.ipci.io/#/offsetting\">\n          <robo-image src=\"images/services-offsetting.jpg\" />\n        </robo-link>\n        <robo-text title=\"3\">\n          <robo-link href=\"https://dapp.ipci.io/#/offsetting\">\n            Smart Building Offsetting\n          </robo-link>\n        </robo-text>\n        <robo-text size=\"small\">\n          Carbon footprint clearance for smart buildings based on geolocation\n          and energy consumption information.\n        </robo-text>\n      </robo-card>\n    </robo-grid>\n  </robo-layout-section>\n</template>","import { render } from \"./Services.vue?vue&type=template&id=7791f1fc\"\nconst script = {}\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <Libp2p\n    v-if=\"type === 'libp2p'\"\n    :config=\"config\"\n    :isKey\n    @connected=\"handlerConnected\"\n    @error=\"handlerError\"\n  />\n  <Launch v-else :config=\"config\" :isKey />\n</template>\n\n<script>\nimport { useRobonomics } from \"@/hooks/useRobonomics\";\nimport { onUnmounted, ref, watch } from \"vue\";\nimport { useStore } from \"vuex\";\nimport Launch from \"./Launch.vue\";\nimport Libp2p from \"./Libp2p.vue\";\nimport { useConfig } from \"./common\";\n\nexport default {\n  components: { Libp2p, Launch },\n  setup() {\n    const store = useStore();\n    const { isReady, accountManager } = useRobonomics();\n    const { config, load } = useConfig();\n    const isKey = ref(false);\n    const type = ref(\"libp2p\");\n\n    onUnmounted(async () => {\n      if (\n        isReady.value &&\n        isKey.value &&\n        store.state.robonomicsUIvue.polkadot.address !==\n          accountManager.account.address\n      ) {\n        try {\n          const accountOld = store.state.robonomicsUIvue.polkadot.accounts.find(\n          (item) =>\n              item.address === store.state.robonomicsUIvue.polkadot.address\n          );\n          if (accountOld) {\n            await accountManager.setSender(accountOld.address, {\n              type: accountOld.type,\n              extension: store.state.robonomicsUIvue.polkadot.extensionObj\n            });\n          }\n        } catch (e) { console.error(e); }\n      }\n    });\n\n    watch(\n      () => store.state.robonomicsUIvue.rws.user.key,\n      async (key) => {\n        if (key) {\n          await accountManager.addPair(key);\n          isKey.value = true;\n          load();\n        } else {\n          console.log(\"NOT KEY\");\n        }\n      },\n      { immediate: true }\n    );\n\n    return {\n      type,\n      isKey,\n      config,\n      handlerConnected: (result) => {\n        store.dispatch(\"app/setlibp2p\", {\n          connected: true\n        });\n        let relay = false;\n        if (result.protoNames().includes(\"p2p-circuit\")) {\n          relay = true;\n        }\n        store.dispatch(\"app/setrelay\", {\n          connected: relay\n        });\n      },\n      handlerError: (e) => {\n        console.log(e.message);\n        console.log(\"switch to parachain\");\n        type.value = \"parachain\";\n        store.dispatch(\"app/setlibp2p\", {\n          connected: false\n        });\n        store.dispatch(\"app/setrelay\", {\n          connected: false\n        });\n      }\n    };\n  }\n};\n</script>\n","<template>\n  <robo-template-devices-layout\n    :config=\"config\"\n    :datalog=\"data\"\n    :updateTime=\"updateTime\"\n  />\n</template>\n\n<script>\nimport { watch } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { useData } from \"./launch\";\n\nexport default {\n  props: {\n    isKey: {\n      default: false,\n      type: Boolean\n    },\n    config: {\n      default: null,\n      type: Object\n    }\n  },\n  setup(props) {\n    const { data, updateTime, run, launch } = useData();\n    const store = useStore();\n\n    watch(\n      () => props.isKey,\n      (value) => {\n        if (value) {\n          run();\n        }\n      },\n      { immediate: true }\n    );\n\n    watch(\n      () => store.state.robonomicsUIvue.rws.launch,\n      (value) => {\n        try {\n          launch(JSON.parse(value));\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    );\n\n    return { data, updateTime };\n  }\n};\n</script>\n","import { useAccount } from \"@/hooks/useAccount\";\nimport { inject, watch } from \"vue\";\n\nexport function useIpfs() {\n  const { account } = useAccount();\n  const { instance } = inject(\"IpfsProvider\");\n\n  watch(account, async () => {\n    if (instance.value) {\n      instance.value.authClear();\n    }\n  });\n\n  return instance.value;\n}\n","import { u8aToString } from \"@polkadot/util\";\nimport { utils } from \"robonomics-interface\";\n\nconst clearJson = (string) => {\n  return string\n    .replaceAll(\"'\", '\"')\n    .replaceAll(\"\\\\\", \"\")\n    .replaceAll('\"\"', '\"')\n    .replaceAll(\"True\", \"true\")\n    .replaceAll(\"False\", \"false\")\n    .replaceAll(\"None\", '\"None\"');\n};\n\nexport const parseJson = (string) => {\n  try {\n    return JSON.parse(string);\n  } catch (error) {\n    console.log(\"error parse 1\");\n  }\n  try {\n    return JSON.parse(clearJson(string));\n  } catch (error) {\n    console.log(\"error parse 2\");\n    console.log(string);\n  }\n  return false;\n};\n\nconst getLastIndex = async (robonomics, address) => {\n  const id = await robonomics.datalog.getLastId(address);\n  return id.id;\n};\nexport const getLastDatalog = async (robonomics, controller) => {\n  console.log(\"getLastDatalog\");\n  if (!controller) {\n    return false;\n  }\n  const lastIndex = await getLastIndex(robonomics, controller);\n  if (lastIndex !== null && lastIndex >= 0) {\n    const last = await robonomics.datalog.readByIndex(controller, lastIndex);\n    return { timestamp: last[0].toNumber(), cid: u8aToString(last[1]) };\n  }\n  return false;\n};\n\n// export const getLastDatalog = async (robonomics, controller) => {\n//   console.log(\"getLastDatalog\");\n//   if (!controller) {\n//     return false;\n//   }\n//   const result = await robonomics.datalog.read(controller);\n//   if (!result.length) {\n//     return false;\n//   }\n//   const last = result[result.length - 1];\n//   return { timestamp: last[0].toNumber(), cid: u8aToString(last[1]) };\n// };\n\nexport const getConfigCid = async (robonomics, controller, twin_id) => {\n  console.log(\"getConfigCid\");\n  if (!controller || (!twin_id && twin_id !== 0)) {\n    return false;\n  }\n  const twin = await robonomics.twin.getTwin(twin_id);\n  if (!twin) {\n    return false;\n  }\n  const configHex = Object.keys(twin).find((key) => twin[key] === controller);\n  if (!configHex) {\n    return false;\n  }\n  return utils.hexToCid(configHex);\n};\n","import configApp from \"@/config\";\nimport { useIpfs } from \"@/hooks/useIpfs\";\nimport { useRobonomics } from \"@/hooks/useRobonomics\";\nimport { createPair, encryptor } from \"@/utils/encryptor\";\nimport { getConfigCid, getLastDatalog, parseJson } from \"@/utils/telemetry\";\nimport { hexToU8a, u8aToString } from \"@polkadot/util\";\nimport { decodeAddress } from \"@polkadot/util-crypto\";\nimport { ref, watch } from \"vue\";\nimport { useStore } from \"vuex\";\n\nexport const chainSS58 = 32;\n\nconst catFile = async (store, ipfs, cid) => {\n  if (!cid) {\n    return false;\n  }\n  const res = await ipfs.catViaGateways(\n    store.state.robonomicsUIvue.ipfs.gateways,\n    cid\n  );\n  store.commit(\"ipfs/setActiveGateway\", res.gateway);\n  return res.result;\n};\n\nexport const decryptData = async (encryptedMsg, controller, account) => {\n  if (encryptedMsg) {\n    try {\n      const controllerPublicKey = decodeAddress(controller);\n      const seed = account.decryptMessage(\n        hexToU8a(encryptedMsg[account.address]),\n        controllerPublicKey\n      );\n      const admin = encryptor(createPair(u8aToString(seed)));\n      const data = admin.decryptMessage(\n        hexToU8a(encryptedMsg.data),\n        controllerPublicKey\n      );\n      return parseJson(u8aToString(data));\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n  return false;\n};\n\nexport const readFileDecrypt = async (\n  cid,\n  controller,\n  account,\n  store,\n  ipfs\n) => {\n  if (cid) {\n    const data = await catFile(store, ipfs, cid);\n    if (!data) {\n      console.log(`Error: ${cid} not found in ipfs`);\n      throw new Error(`${cid} not found in ipfs`);\n    }\n    const result = await decryptData(data, controller, account);\n    if (result) {\n      return result;\n    } else {\n      console.log(`Error: decryptMsg`);\n      throw new Error(`decryptMsg`);\n    }\n  }\n  return null;\n};\n\nconst loadSetup = (store) => {\n  if (store.state.robonomicsUIvue.rws.active) {\n    const setupRaw = store.state.robonomicsUIvue.rws.list.find(\n      (item) => item.owner === store.state.robonomicsUIvue.rws.active\n    );\n    if (setupRaw) {\n      try {\n        return {\n          controller: setupRaw.controller,\n          owner: setupRaw.owner\n        };\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n  return false;\n};\n\nexport const useSetup = () => {\n  const controller = ref(null);\n  const owner = ref(null);\n\n  const store = useStore();\n\n  watch(\n    () => store.state.robonomicsUIvue.rws.active,\n    () => {\n      const setup = loadSetup(store);\n      if (setup) {\n        controller.value = setup.controller;\n        owner.value = setup.owner;\n      }\n    },\n    { immediate: true }\n  );\n\n  return { controller, owner };\n};\n\nexport const notify = (store, text, timeout = 3000) => {\n  store.dispatch(\"app/setStatus\", {\n    value: text,\n    timeout\n  });\n  console.log(text);\n};\n\nexport const setStatusLaunch = (store, command, status) => {\n  store.commit(\n    \"rws/setLaunch\",\n    JSON.stringify({ ...command, tx: { tx_status: status } })\n  );\n};\n\nexport const useLastDatalog = () => {\n  const cid = ref(null);\n  const updateTime = ref(null);\n  const data = ref(null);\n\n  const store = useStore();\n  const ipfs = useIpfs();\n  const { isReady, getInstance } = useRobonomics();\n  const { controller } = useSetup();\n\n  (async () => {\n    if (isReady.value && controller.value) {\n      const robonomics = getInstance();\n      const datalog = await getLastDatalog(robonomics, controller.value);\n      cid.value = datalog.cid;\n      updateTime.value = datalog.timestamp;\n      try {\n        data.value = await readFileDecrypt(\n          cid.value,\n          controller.value,\n          robonomics.accountManager.encryptor(),\n          store,\n          ipfs\n        );\n      } catch (error) {\n        console.log(error);\n        notify(store, error.message);\n      }\n    }\n  })();\n\n  return { cid, updateTime, data };\n};\n\nexport const useConfig = () => {\n  const config = ref(null);\n\n  const store = useStore();\n  const ipfs = useIpfs();\n  const { isReady, getInstance, accountManager } = useRobonomics();\n  const { controller } = useSetup();\n\n  const getConfig = async (controller) => {\n    const endpoint =\n      localStorage.getItem(\"rpc-parachain\") || configApp.default_rpc_endpoint;\n    const lsKey = `haconfig:${endpoint}:${controller}`;\n\n    if (!isReady.value) {\n      const data = localStorage.getItem(lsKey);\n      if (data) {\n        try {\n          const parsedData = JSON.parse(data);\n          console.log(\"getConfig cache\");\n          return { data: parsedData.value, cache: true };\n        } catch (error) {\n          console.log(\"haconfig bad\", error);\n        }\n      } else {\n        return { data: null, cache: true };\n      }\n    } else {\n      const robonomics = getInstance();\n\n      const datalog = await getLastDatalog(robonomics, controller);\n      const result = await readFileDecrypt(\n        datalog.cid,\n        controller,\n        accountManager.encryptor(),\n        store,\n        ipfs\n      );\n\n      if (result) {\n        const twin_id = result.twin_id;\n        notify(store, `Twin id #${twin_id}`);\n\n        notify(store, `Start load config`);\n        const cid = await getConfigCid(robonomics, controller, twin_id);\n        if (!cid) {\n          console.log(\"Config not found\");\n          console.log(\"controller\", controller);\n          console.log(\"twin_id\", twin_id);\n        }\n\n        const config = await readFileDecrypt(\n          cid,\n          controller,\n          accountManager.encryptor(),\n          store,\n          ipfs\n        );\n\n        localStorage.setItem(\n          lsKey,\n          JSON.stringify({ time: Date.now(), value: config })\n        );\n        console.log(\"getConfig chain\");\n\n        return { data: config, cache: false };\n      }\n    }\n    return { data: null, cache: false };\n  };\n\n  const load = async () => {\n    notify(store, \"Find twin id\");\n\n    if (\n      !controller.value ||\n      !accountManager.account ||\n      accountManager.account.type !== \"ed25519\"\n    ) {\n      notify(store, \"Error\");\n      return;\n    }\n\n    let result;\n    try {\n      result = await getConfig(controller.value);\n    } catch (error) {\n      console.log(error);\n      notify(store, \"Error: \" + error.message);\n      return;\n    }\n\n    config.value = result.data;\n    if (result.cache) {\n      const stop = watch(\n        isReady,\n        async () => {\n          if (isReady.value) {\n            try {\n              const result = await getConfig(controller.value);\n              config.value = result.data;\n              stop();\n            } catch (error) {\n              console.log(error);\n              notify(store, \"Error: \" + error.message);\n            }\n          }\n        },\n        { immediate: true }\n      );\n    }\n\n    if (config.value !== null) {\n      notify(store, `Config loaded`);\n    }\n  };\n\n  return { config, load };\n};\n","import { useDevices } from \"@/hooks/useDevices\";\nimport { useIpfs } from \"@/hooks/useIpfs\";\nimport { useRobonomics } from \"@/hooks/useRobonomics\";\nimport { useSend } from \"@/hooks/useSend\";\nimport { getLastDatalog } from \"@/utils/telemetry\";\nimport { stringToU8a, u8aToHex } from \"@polkadot/util\";\nimport { decodeAddress } from \"@polkadot/util-crypto\";\nimport { onUnmounted, ref, watch } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { notify, readFileDecrypt, setStatusLaunch, useSetup } from \"./common\";\n\nexport const useData = () => {\n  const cid = ref(null);\n  const updateTime = ref(null);\n  const data = ref(null);\n\n  const store = useStore();\n  const ipfs = useIpfs();\n  const { isReady, getInstance, accountManager } = useRobonomics();\n  const transaction = useSend();\n  const devices = useDevices();\n  const { controller, owner } = useSetup();\n\n  watch(\n    () => store.state.robonomicsUIvue.rws.active,\n    () => {\n      devices.owner.value = store.state.robonomicsUIvue.rws.active;\n    },\n    { immediate: true }\n  );\n\n  let unsubscribeDatalog;\n  const watchDatalog = async () => {\n    if (!isReady.value) {\n      return;\n    }\n    unsubscribeDatalog = await getInstance().datalog.on(\n      { method: \"NewRecord\" },\n      (results) => {\n        const r = results.filter((item) => {\n          return (\n            item.success &&\n            controller.value &&\n            item.data[0].toHuman() === controller.value\n          );\n        });\n        for (const item of r) {\n          updateTime.value = item.data[1].toNumber();\n          cid.value = item.data[2].toHuman();\n        }\n      }\n    );\n  };\n\n  watch(cid, async () => {\n    try {\n      data.value = await readFileDecrypt(\n        cid.value,\n        controller.value,\n        accountManager.encryptor(),\n        store,\n        ipfs\n      );\n    } catch (error) {\n      console.log(error);\n      notify(store, error.message);\n    }\n  });\n\n  const run = async () => {\n    if (controller.value) {\n      if (isReady.value) {\n        const datalog = await getLastDatalog(getInstance(), controller.value);\n        cid.value = datalog.cid;\n        updateTime.value = datalog.timestamp;\n        watchDatalog();\n      } else {\n        const stop = watch(isReady, (isReady) => {\n          if (isReady) {\n            run();\n            stop();\n          }\n        });\n      }\n    }\n  };\n\n  const stop = () => {\n    if (unsubscribeDatalog) {\n      unsubscribeDatalog();\n    }\n  };\n\n  onUnmounted(() => {\n    console.log(\"unmount launch\");\n    stop();\n  });\n\n  const launch = async (command) => {\n    console.log(command.launch.params.entity_id, command.tx.tx_status);\n    if (command.tx.tx_status !== \"pending\") {\n      return;\n    }\n\n    notify(store, `Launch command`);\n    console.log(`command ${JSON.stringify(command)}`);\n\n    if (!devices.devices.value.includes(accountManager.account.address)) {\n      notify(store, `Error: You do not have access to device management.`);\n      setStatusLaunch(store, command, \"error\");\n      return;\n    }\n\n    if (!ipfs.isAuth()) {\n      notify(store, `Authorization on ipfs node`);\n      try {\n        const signature = (\n          await accountManager.account.signMsg(\n            stringToU8a(accountManager.account.address)\n          )\n        ).toString();\n        ipfs.auth(owner.value, accountManager.account.address, signature);\n      } catch (error) {\n        if (error.message === \"Cancelled\") {\n          setStatusLaunch(store, command, \"declined\");\n        } else {\n          console.log(error);\n          setStatusLaunch(store, command, \"error\");\n        }\n        return;\n      }\n      setStatusLaunch(store, command, \"approved\");\n    }\n\n    const encryptor = accountManager.encryptor();\n    const controllerPublicKey = decodeAddress(controller.value);\n\n    let commandCid;\n    try {\n      const cmdString = JSON.stringify(command.launch);\n      const cmdCrypto = encryptor.encryptMessage(\n        cmdString,\n        controllerPublicKey\n      );\n      commandCid = await ipfs.add(u8aToHex(cmdCrypto));\n    } catch (error) {\n      setStatusLaunch(store, command, \"error\");\n      notify(store, `Error: ${error.message}`);\n      return;\n    }\n    console.log(`launch ipfs file ${commandCid.path}`);\n\n    if (!isReady.value) {\n      notify(store, `Error: Robonomics is not ready.`);\n      setStatusLaunch(store, command, \"error\");\n      return;\n    }\n\n    notify(store, `Send launch`);\n    const call = getInstance().launch.send(controller.value, commandCid.path);\n    const tx = transaction.createTx();\n    await transaction.send(tx, call, owner.value);\n    if (tx.error.value) {\n      if (tx.error.value !== \"Cancelled\") {\n        setStatusLaunch(store, command, \"error\");\n        notify(store, `Error: ${tx.error.value}`);\n      } else {\n        setStatusLaunch(store, command, \"declined\");\n        notify(store, \"Calcel\");\n      }\n    } else {\n      console.log(command);\n      setStatusLaunch(store, command, \"success\");\n      notify(store, \"Launch sended\");\n    }\n  };\n\n  return { cid, updateTime, data, run, stop, launch };\n};\n","import { render } from \"./Launch.vue?vue&type=template&id=497be6f4\"\nimport script from \"./Launch.vue?vue&type=script&lang=js\"\nexport * from \"./Launch.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <robo-template-devices-layout\n    :config=\"config\"\n    :datalog=\"data\"\n    :updateTime=\"updateTime\"\n  />\n</template>\n\n<script>\nimport { watch } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { useData } from \"./libp2p\";\n\nexport default {\n  props: {\n    isKey: {\n      default: false,\n      type: Boolean\n    },\n    config: {\n      default: null,\n      type: Object\n    }\n  },\n  emits: [\"connected\", \"error\"],\n  setup(props, { emit }) {\n    const { data, updateTime, run, launch } = useData();\n    const store = useStore();\n\n    const isOnce = props.isKey && props.config !== null;\n    const stop = watch(\n      () => [props.isKey, props.config],\n      ([isKey, config]) => {\n        if (isKey && config !== null) {\n          if (!isOnce && typeof stop === \"function\") {\n            stop();\n          }\n          if (config.peer_id) {\n            (async () => {\n              const result = await run(\n                config.peer_id,\n                config.libp2p_multiaddress\n              );\n              if (result) {\n                emit(\"connected\", result);\n                if (!result.protoNames().includes(\"p2p-circuit\")) {\n                  const gateway = `http://${\n                    result.nodeAddress().address\n                  }:8080/ipfs/`;\n                  if (\n                    store.state.robonomicsUIvue.ipfs.activegateway !== gateway\n                  ) {\n                    console.log(\"set local gateway\", gateway);\n                    store.commit(\"ipfs/setActiveGateway\", gateway);\n                  }\n                } else {\n                  console.log(\"relay\");\n                }\n              } else {\n                emit(\"error\", new Error(\"connect\"));\n              }\n            })();\n          } else {\n            emit(\"error\", new Error(\"not found peer_id\"));\n          }\n        }\n      },\n      { immediate: true, once: isOnce }\n    );\n\n    watch(\n      () => store.state.robonomicsUIvue.rws.launch,\n      (value) => {\n        try {\n          launch(JSON.parse(value));\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    );\n\n    return { data, updateTime };\n  }\n};\n</script>\n","import { pipe } from \"it-pipe\";\nimport { fromString as uint8ArrayFromString } from \"uint8arrays/from-string\";\nimport { toString as uint8ArrayToString } from \"uint8arrays/to-string\";\n\nexport function createHa() {\n  return (components) => {\n    async function getRequest(stream) {\n      return pipe(stream, async function (source) {\n        let result = \"\";\n        for await (const data of source) {\n          result += uint8ArrayToString(data.subarray());\n        }\n        return JSON.parse(result);\n      });\n    }\n\n    async function sendResponse(stream, msg) {\n      return pipe(\n        [uint8ArrayFromString(JSON.stringify(msg))],\n        stream.sink\n      ).finally(() => {\n        stream.close();\n      });\n    }\n\n    return {\n      async handle(\n        protocol,\n        handler,\n        options = {\n          runOnTransientConnection: true\n        }\n      ) {\n        await components.registrar.handle(\n          protocol,\n          async ({ stream }) => {\n            handler(await getRequest(stream), stream);\n          },\n          options\n        );\n      },\n      async request(\n        connection,\n        protocol,\n        data,\n        options = {\n          runOnTransientConnection: true\n        }\n      ) {\n        if (connection.status !== \"open\") {\n          return;\n        }\n        const stream = await connection.newStream([protocol], options);\n        return pipe(\n          [uint8ArrayFromString(JSON.stringify(data))],\n          stream,\n          async function (source) {\n            let result = \"\";\n            for await (const data of source) {\n              result += uint8ArrayToString(data.subarray());\n            }\n            try {\n              // stream.close();\n              return JSON.parse(result);\n            } catch (error) {\n              return result;\n            }\n          }\n        );\n      },\n      utils: {\n        getRequest,\n        sendResponse\n      }\n    };\n  };\n}\n","import { noise } from \"@chainsafe/libp2p-noise\";\nimport { circuitRelayTransport } from \"@libp2p/circuit-relay-v2\";\nimport { identify } from \"@libp2p/identify\";\n// import { keychain } from \"@libp2p/keychain\";\n// import { defaultLogger } from \"@libp2p/logger\";\nimport { mplex } from \"@libp2p/mplex\";\nimport { webRTC } from \"@libp2p/webrtc\";\nimport { webSockets } from \"@libp2p/websockets\";\nimport * as filters from \"@libp2p/websockets/filters\";\nimport { multiaddr } from \"@multiformats/multiaddr\";\n// import { LevelDatastore } from \"datastore-level\";\n// import { Key } from \"interface-datastore\";\nimport { createLibp2p } from \"libp2p\";\nimport { createHa } from \"./ha\";\n\nexport async function createNode() {\n  // const selfKey = new Key(\"/pkcs8/self\");\n  // const datastore = new LevelDatastore(`libp2p/data`);\n  // const chain = keychain()({\n  //   datastore: datastore,\n  //   logger: defaultLogger()\n  // });\n  // let peerId;\n  // if (await datastore.has(selfKey)) {\n  //   peerId = await chain.exportPeerId(\"self\");\n  // }\n  const node = await createLibp2p({\n    // peerId: peerId,\n    addresses: {\n      listen: [\"/webrtc\"]\n    },\n    transports: [\n      webSockets({\n        filter: filters.all\n      }),\n      webRTC(),\n      circuitRelayTransport()\n    ],\n    streamMuxers: [mplex()],\n    connectionEncryption: [noise()],\n    services: {\n      identify: identify(),\n      ha: createHa()\n    },\n    connectionGater: {\n      denyDialMultiaddr: () => {\n        return false;\n      }\n    },\n    connectionManager: {\n      minConnections: 0\n    }\n  });\n  // if (chain != null && !(await datastore.has(selfKey))) {\n  //   await chain.importPeer(\"self\", node.peerId);\n  // }\n  return node;\n}\nexport function defaultRelay(peer_id) {\n  return multiaddr(\n    `/dns4/libp2p-relay-1.robonomics.network/tcp/443/wss/p2p/12D3KooWEMFXXvpZUjAuj1eKR11HuzZTCQ5HmYG9MNPtsnqPSERD/p2p-circuit/p2p/${peer_id}`\n  );\n}\nexport async function connectMultiaddress(peer_id, peer_multiaddress) {\n  if (peer_multiaddress.length > 0) {\n    const localMultiaddrs = [];\n    const circuit = [];\n    for (const peer_multiaddr of peer_multiaddress) {\n      const localMultiaddr = multiaddr(peer_multiaddr);\n      const protos = localMultiaddr.protoNames();\n      if (protos.includes(\"ws\") || protos.includes(\"wss\")) {\n        if (protos.includes(\"p2p-circuit\")) {\n          circuit.push(localMultiaddr);\n        } else if (\n          window.location.protocol !== \"https:\" ||\n          protos.includes(\"wss\")\n        ) {\n          localMultiaddrs.push(localMultiaddr);\n        }\n      }\n    }\n\n    if (localMultiaddrs.length > 0) {\n      for (const addr of localMultiaddrs) {\n        try {\n          await connect(addr);\n          return addr;\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    }\n\n    if (circuit.length > 0) {\n      for (const addr of circuit) {\n        try {\n          await connect(addr);\n          return addr;\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    }\n  }\n  try {\n    const addr = defaultRelay(peer_id);\n    await connect(addr);\n    return addr;\n  } catch (error) {\n    console.log(error);\n  }\n  return false;\n}\n\nlet node = null;\nlet connections = [];\nlet connection = null;\n\nexport async function start() {\n  if (node) {\n    return node;\n  }\n  node = await createNode();\n  await node.start();\n  console.log(`Node started with id ${node.peerId.toString()}`);\n\n  function updateConnectionsList() {\n    connections = node.getConnections().map((item) => {\n      return item.remoteAddr.toString();\n    });\n    console.log(\"Update Connections List\", connections);\n  }\n\n  node.addEventListener(\"connection:open\", (event) => {\n    console.log(\"connected\", event.detail.remoteAddr.toString());\n    updateConnectionsList();\n  });\n\n  node.addEventListener(\"connection:close\", (event) => {\n    console.log(\"disconected\", event.detail.remoteAddr.toString());\n    updateConnectionsList();\n    setTimeout(() => {\n      if (\n        connection &&\n        event.detail.remoteAddr.toString() === connection.remoteAddr.toString()\n      ) {\n        console.log(\"reconnect\");\n        reconnect(connection.remoteAddr.toString());\n      }\n    }, 10000);\n  });\n\n  return node;\n}\n\nexport async function reconnect(addr) {\n  try {\n    await connect(addr);\n  } catch (error) {\n    console.log(error);\n    // setTimeout(async () => {\n    //   if (addr && !connections.includes(addr)) {\n    //     await reconnect(addr);\n    //   }\n    // }, 3000);\n  }\n}\nexport async function connect(addr) {\n  console.log(\"connect to\", addr.toString());\n  if (!connections.includes(addr)) {\n    const listenerMultiaddr = multiaddr(addr);\n    connection = await node.dial(listenerMultiaddr);\n  }\n  return addr;\n}\n\nexport async function disconnect() {\n  if (connection) {\n    await connection.close();\n  }\n  connection = null;\n}\n\nexport function request(data, protocol = \"/call\") {\n  if (node && connection) {\n    return node.services.ha.request(connection, protocol, data);\n  }\n  throw new Error(\"error\");\n}\n","import { useDevices } from \"@/hooks/useDevices\";\nimport { useRobonomics } from \"@/hooks/useRobonomics\";\nimport {\n  connectMultiaddress,\n  disconnect,\n  request,\n  start\n} from \"@/utils/libp2p/libp2p\";\nimport { u8aToHex } from \"@polkadot/util\";\nimport { decodeAddress } from \"@polkadot/util-crypto\";\nimport { onUnmounted, ref, watch } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { decryptData, notify, setStatusLaunch, useSetup } from \"./common\";\n\nexport const useData = () => {\n  const data = ref(null);\n  const updateTime = ref(null);\n\n  const store = useStore();\n  const { accountManager } = useRobonomics();\n  const devices = useDevices();\n  const { controller } = useSetup();\n\n  watch(\n    () => store.state.robonomicsUIvue.rws.active,\n    () => {\n      devices.owner.value = store.state.robonomicsUIvue.rws.active;\n    },\n    { immediate: true }\n  );\n\n  onUnmounted(() => {\n    disconnect();\n  });\n\n  const run = async (peer_id, peer_multiaddress) => {\n    const node = await start();\n    try {\n      notify(store, `Connect to peer id ${peer_id}`);\n      const connected = await connectMultiaddress(peer_id, peer_multiaddress);\n      if (connected) {\n        notify(store, `Connected`);\n        const protocols = node.getProtocols();\n        if (protocols.includes(\"/update\")) {\n          await node.unhandle(\"/update\");\n        }\n        node.services.ha.handle(\"/update\", async (dataRaw, stream) => {\n          const result = await decryptData(\n            dataRaw.data,\n            controller.value,\n            accountManager.encryptor()\n          );\n          if (result) {\n            data.value = result;\n            updateTime.value = Date.now();\n            await node.services.ha.utils.sendResponse(stream, {\n              result: true\n            });\n          } else {\n            notify(store, `Error: decryptMsg`);\n          }\n        });\n        return connected;\n      }\n    } catch (error) {\n      notify(store, `Error: ${error.message}`);\n      console.log(error);\n    }\n    return false;\n  };\n\n  const launch = async (command) => {\n    console.log(command.launch.params.entity_id, command.tx.tx_status);\n    if (command.tx.tx_status !== \"pending\") {\n      return;\n    }\n\n    notify(store, `Launch command`);\n\n    if (!devices.devices.value.includes(accountManager.account.address)) {\n      notify(store, `Error: You do not have access to device management.`);\n      setStatusLaunch(store, command, \"error\");\n      return;\n    }\n\n    try {\n      const encryptor = accountManager.encryptor();\n      const controllerPublicKey = decodeAddress(controller.value);\n      const cmdString = JSON.stringify(command.launch);\n      const cmdCrypto = encryptor.encryptMessage(\n        cmdString,\n        controllerPublicKey\n      );\n      const response = await request({\n        data: {\n          sender: accountManager.account.address,\n          data: u8aToHex(cmdCrypto)\n        }\n      });\n      console.log(`response:`, response);\n\n      setStatusLaunch(store, command, \"success\");\n    } catch (error) {\n      console.log(error);\n      notify(store, `Error: Check status of the HomeAssistant.`);\n      setStatusLaunch(store, command, \"error\");\n    }\n  };\n\n  return { data, updateTime, run, launch };\n};\n","import { render } from \"./Libp2p.vue?vue&type=template&id=a62a6dd6\"\nimport script from \"./Libp2p.vue?vue&type=script&lang=js\"\nexport * from \"./Libp2p.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./Telemetry.vue?vue&type=template&id=119ddef2\"\nimport script from \"./Telemetry.vue?vue&type=script&lang=js\"\nexport * from \"./Telemetry.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import script from \"./Altruist.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Altruist.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./Riscv.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Riscv.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./Hikikomori.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Hikikomori.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./Smart-safe.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Smart-safe.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","const chains =\n    {\n       1: {\n        name: 'Ethereum Mainnet'\n       },\n       2: {\n        name: 'Expanse Network'\n       },\n       11155111: {\n        name: 'Sepolia'\n       }\n    }\n\nexport default chains","<template>\n  <robo-layout-section>\n\n    <robo-card allowExpand class=\"seasonpass\">\n        <robo-text title=\"3\" offset=\"x0\">Your season pass 2024-2025</robo-text>\n        <div class=\"seasonpass-content\">\n            <div class=\"seasonpass-content-inside\">\n                <div class=\"seasonpass-msg\" v-if=\"status !== 'START'\">\n                    <template v-if=\"status === 'NO_ETH_EXTENSION'\">Connect or install Ethereum extension in your browser</template>\n                    <template v-if=\"status === 'WRONG_ETH_NETWORK'\">Please, switch to {{chains[workingchain].name}}</template>\n                    <template v-if=\"status === 'NO_WALLET_PERMISSION'\">Please, check permissions in the connected extension</template>\n                    <template v-if=\"status === 'NO_ETH_ACCOUNT'\">No Ethereum account found: check your extension</template>\n                    <template v-if=\"status === 'NFT_NOT_FOUND' || status === 'TOKENS_NOT_FOUND'\">No Season Pass NFT accosiated with this account</template>\n                </div>\n                <robo-loader v-if=\"status === 'NFT_STARTED_GETTING'\" size=\"3\" />\n\n                <div class=\"tokens\" :class=\"'tokens-show-' + curentslide\" v-if=\"status === 'TOKENS_FOUND' && tokens\">\n                    <div class=\"token\" v-for=\"token in tokens\" :key=\"token.tokenId\">\n                        <img :src=\"`https://ipfs.io/ipfs/${token?.image}`\" />\n                        <robo-text lines=\"dotted\" size=\"small\">\n                            <robo-grid type=\"flex\" offset=\"x0\" gap=\"x025\" galign=\"start\" valign=\"center\">\n                                {{token?.name}}\n                            </robo-grid>\n                            <robo-grid type=\"flex\" offset=\"x0\" gap=\"x025\" galign=\"start\" valign=\"center\">\n                                {{token?.tokenId}}\n                            </robo-grid>\n                            <robo-grid type=\"flex\" offset=\"x0\" gap=\"x025\" galign=\"start\" valign=\"center\">\n                                {{token?.status}}\n                            </robo-grid>\n                            <robo-grid type=\"flex\" offset=\"x0\" gap=\"x025\" galign=\"start\" valign=\"center\">\n                                <template v-if=\"token.activated\">Activated</template>\n                                <template v-else>Not activated</template>\n                            </robo-grid>\n                        </robo-text>\n                        <robo-section offset=\"x1\">\n                            <robo-button v-if=\"token.tokenId && !token.activated\" @click.prevent=\"activateToken(token.tokenId)\" size=\"small\">Activate</robo-button>\n                        </robo-section>\n                    </div>\n                </div>\n                <div class=\"tokens-switch\" :class=\"'tokens-switch-showed-' + curentslide\" v-if=\"status === 'TOKENS_FOUND'\">\n                    <robo-button v-for=\"(token, i) in tokens\" :key=\"token.tokenId\" clean @click.prevent=\"setslide(i + 1)\">{{i + 1}}</robo-button>\n                </div>\n            </div>\n            <div class=\"seasonpass-monkey\" aria-hidden=\"true\" v-if=\"status !== 'TOKENS_FOUND'\">\n                <img src=\"images/season-pass-24-25-monkey.webp\" aria-hidden=\"true\"/>\n            </div>\n        </div>\n    </robo-card>\n\n    <!-- <details>\n        <summary>tech</summary>\n        <div v-for=\"token in tokens\" :key=\"token.tokenId\">\n            <img :src=\"`https://ipfs.io/ipfs/${token.image}`\" style=\"width: 200px\" />\n            <p>{{token.name}}</p>\n            <p>activated: {{token.activated}}, {{token.tokenId}}</p>\n            <p>status: {{token?.status}}</p>\n            <robo-button v-if=\"token.tokenId && !token.activated\" @click.prevent=\"activateToken(token.tokenId)\">Activate</robo-button>\n        </div>\n\n        {{account}}\n        <hr/>\n        {{provider?.info?.name}}\n        <hr/>\n        {{balance}}\n        <hr/>\n        {{status}}\n    </details> -->\n\n  </robo-layout-section>\n</template>\n\n<script setup>\nimport { reactive, computed, onMounted, ref, watch } from \"vue\";\nimport { useStore } from \"vuex\";\nconst store = useStore();\n\nimport nft_abi from \"../../components/web3/abi/NFT.json\";\nimport { ethers } from \"ethers\";\nimport { address } from \"@/config\";\n\nimport chains from \"../../eth_chains\";\n\n/* + get providers */\nimport { createStore } from 'mipd';\nconst mipdstore = createStore();\n\nconst state = reactive({ \n    providers: mipdstore.getProviders()\n});\n\nmipdstore.subscribe(providers => {\n    console.log('Providers updated:', providers);\n    state.providers = providers;\n});\n/* - get providers */\n\nconst account = computed(() =>{\n    return store.state.robonomicsUIvue.ethereum.activeAccount;\n});\n\nconst provider = computed(() =>{\n    return state.providers.find(i => i.info.rdns === store.state.robonomicsUIvue.ethereum.activeProviderRdns)\n});\n\nconst isConnected = () => {\n    if(provider?.value) {\n        return provider.value?.provider?._state?.isConnected || provider.value?.provider?.isConnected\n    } else {\n        return false;\n    }\n}\n\nconst workingchain = 11155111;\nconst balance = ref(null);\nconst tokens = ref([]);\nlet signer;\nlet contract;\nlet providerethers = null;\nconst status = ref('START');\nconst curentslide = ref(1);\n\nconst setslide = (s) => {\n    curentslide.value = s\n}\n\nconst getEthersProviderObj = () => {\n    try {\n        providerethers = new ethers.BrowserProvider(provider.value.provider);\n    } catch (error) { console.log(error); }\n}\n\nconst getNFT = async (blockupdate = false) => {\n\n    if(!blockupdate) {\n        status.value = '';\n        tokens.value = [];\n\n        if(!provider.value || !isConnected()) {\n            status.value = 'NO_ETH_EXTENSION';\n            return;\n        }\n    }\n\n    try {\n\n        if(!blockupdate) {\n            const perms = await provider.value.provider.request({method: 'wallet_getPermissions', params: [{ eth_accounts: {} }]});\n            if(!perms || !perms.some(i => i.parentCapability === 'eth_accounts')) {\n                status.value = 'NO_WALLET_PERMISSION';\n                return;\n            }\n\n            const accounts = await provider.value.provider.request({method: 'eth_requestAccounts', params: [{ eth_accounts: {} }]});\n            if(!accounts || accounts?.length < 1) {\n                status.value = 'NO_ETH_ACCOUNT';\n                return;\n            }\n            \n            const chain = await provider.value.provider.request({method: 'eth_chainId', params: [{ eth_accounts: {} }]});\n            if(parseInt(chain) !== workingchain) {\n                status.value = 'WRONG_ETH_NETWORK';\n                return;\n            }\n\n            status.value = 'NFT_STARTED_GETTING';\n\n            getEthersProviderObj();\n            signer = await providerethers.getSigner();\n            contract = new ethers.Contract(address.nft, nft_abi, signer);\n        }\n\n        contract.balanceOf(signer.address)\n            .then(async (r) => {\n                if(blockupdate) {\n                    if(balance.value === parseFloat(r)){\n                        return;\n                    }\n                }\n                balance.value = parseFloat(r);\n\n                if(!balance.value || balance.value < 1) {\n                    status.value = 'NFT_NOT_FOUND';\n                } else {\n                    await loadTokens();\n                }\n\n            })\n            .catch((e) => {\n                console.log(e);\n            });\n    } catch (error) {\n        status.value = 'NFT_NOT_FOUND';\n        console.log(error);\n    }\n}\n\nconst loadTokens = async () => {\n\n    const ids = [];\n    for (let index = 0; index < balance.value; index++) {\n        try {\n            const tokenId = await contract.tokenOfOwnerByIndex(\n                signer.address,\n                index\n            );\n\n            const uri = await contract.tokenURI(tokenId);\n            const ipfsHash = uri.split(\"ipfs://\").pop();\n            const data = await fetch(`https://ipfs.io/ipfs/${ipfsHash}`);\n            const res = await data.json();\n\n            ids.push({\n                activated: await contract.activatedOf(tokenId),\n                tokenId: tokenId.toString(),\n                name: `${res.name} #${tokenId.toString()}`,\n                image: res.image.split(\"ipfs://\").pop(),\n                status: 'INIT'\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    tokens.value = ids;\n\n    if(tokens.value?.length > 0) {\n        status.value = 'TOKENS_FOUND';\n    } else {\n        status.value = 'TOKENS_NOT_FOUND';\n    }\n}\n\nconst activateToken = async (tokenId) => {\n    let current = 0;\n\n    if(tokens.value) {\n        current = tokens.value.findIndex(i => i.tokenId === tokenId);\n    }\n\n    try {\n        tokens.value[current].status = 'ACTIVATION_STARTED';\n\n        const tx = await contract.connect(signer).activate(tokenId);\n        console.log('tx', tx);\n        await loadTokens(); // for updating status\n        tokens.value[current].status = 'ACTIVATION_ENDED';\n    } catch (error) {\n        console.error(error);\n\n        if(error.code === \"ACTION_REJECTED\") {\n            tokens.value[current].status = 'ACTIVATION_REJECTED';\n        } else {\n            tokens.value[current].status = 'ACTIVATION_NOT_SUCCESSFULL';\n        }\n    }\n}\n\n\nwatch([provider, account], async() => {\n    balance.value = null;\n    await getNFT();\n});\n\nonMounted( async () => {\n\n    // const b = await providerethers.getBalance(account.value)\n    // console.log('getBalance', ethers.formatEther(b))\n    await getNFT();\n\n    if(providerethers) {\n        providerethers.on('block', async () => {\n            await getNFT(true);\n        });\n    }\n})\n\n</script>\n\n<style>\n    .seasonpass .robo-card-content {\n        display: grid;\n        grid-template-rows: calc(var(--robo-space) * 4) auto;\n        gap: calc(var(--robo-space) * 2);\n        align-items: stretch;\n    }\n</style>\n\n<style scoped>\n    .seasonpass {\n        position: relative;\n        min-height: 600px;\n    }\n\n    .seasonpass:not(.expand) {\n        max-width: 700px;\n        margin: 0 auto;\n    }\n\n    .seasonpass-monkey {\n        position: absolute;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        text-align: center;\n        opacity: 0;\n        visibility: hidden;\n        animation: flick 2s linear 0.3s forwards;\n        z-index: 0;\n    }\n\n    @keyframes flick {\n        10% {\n            opacity: 0;\n            visibility: hidden;\n        }\n        20% {\n            opacity: 1;\n            visibility: visible;\n        }\n        30% {\n            opacity: 0;\n            visibility: hidden;\n        }\n        40% {\n            opacity: 1;\n            visibility: visible;\n        }\n        50% {\n            opacity: 0;\n            visibility: hidden;\n        }\n        60% {\n            opacity: 1;\n            visibility: visible;\n        }\n        100% {\n            opacity: 1;\n            visibility: visible;\n        }\n    }\n\n    .seasonpass-monkey img {\n        display: inline-block;\n        max-height: 600px;\n        opacity: 0.5;\n    }\n\n    @media (prefers-color-scheme: dark){\n        .seasonpass-monkey img {\n            opacity: 0.2;\n        }\n    }\n\n    .seasonpass-msg {\n        font-weight: bold;\n        text-align: center;\n        max-width: 500px;\n    }\n\n    .seasonpass-content {\n        justify-self: center;\n        align-content: center;\n        min-height: calc(600px - calc(var(--robo-space) * 4));\n    }\n\n    .seasonpass-content-inside {\n        position: relative;\n        z-index: 1;\n    }\n\n    .tokens .token {\n        display: none;\n    }\n\n    .tokens-show-1 .token:nth-child(1),\n    .tokens-show-2 .token:nth-child(2),\n    .tokens-show-3 .token:nth-child(3),\n    .tokens-show-4 .token:nth-child(4),\n    .tokens-show-5 .token:nth-child(5),\n    .tokens-show-6 .token:nth-child(6) {\n        display: block;\n    }\n\n    .tokens-switch-showed-1 .robo-button:nth-child(1),\n    .tokens-switch-showed-2 .robo-button:nth-child(2),\n    .tokens-switch-showed-3 .robo-button:nth-child(3),\n    .tokens-switch-showed-4 .robo-button:nth-child(4),\n    .tokens-switch-showed-5 .robo-button:nth-child(5),\n    .tokens-switch-showed-6 .robo-button:nth-child(6) {\n        opacity: 0.5;\n    }\n\n    .token img {\n        display: block;\n        max-width: 80%;\n        margin: var(--robo-space) auto;\n    }\n\n    .tokens-switch {\n        margin-top: calc(var(--robo-space) * 2);\n    }\n</style>\n","import script from \"./Season-pass.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Season-pass.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Season-pass.vue?vue&type=style&index=0&id=d54f8394&lang=css\"\nimport \"./Season-pass.vue?vue&type=style&index=1&id=d54f8394&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-d54f8394\"]])\n\nexport default __exports__","<template>\n  <div>\n    <div>balance: {{ balance }} NFT</div>\n    <nft-token\n      v-for=\"token in tokens\"\n      :key=\"token.tokenId\"\n      :token=\"token\"\n      @activate=\"loadTokens\"\n      class=\"card\"\n    />\n  </div>\n</template>\n\n<script>\nimport { address } from \"@/config\";\nimport { $web3 } from \"@/plugins/web3\";\nimport axios from \"axios\";\nimport { ethers } from \"ethers\";\nimport { ref, watch } from \"vue\";\nimport nft_abi from \"./abi/NFT.json\";\nimport NftToken from \"./NftToken.vue\";\n\nexport default {\n  components: { NftToken },\n  setup() {\n    const balance = ref(null);\n    const tokens = ref([]);\n\n    // NFT\n    const nftContract = new ethers.Contract(\n      address.nft,\n      nft_abi,\n      $web3.provider\n    );\n\n    (async () => {\n      try {\n        console.log('$web3.state.account', $web3.state.account)\n        balance.value = await nftContract.balanceOf($web3.state.account);\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n\n    watch(\n      () => $web3.state.block,\n      async () => {\n        try {\n          console.log('$web3.state.account', $web3.state.account)\n          balance.value = await nftContract.balanceOf($web3.state.account);\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    );\n\n    const loadTokens = async () => {\n      if (!balance.value) {\n        return;\n      }\n      const ids = [];\n      for (let index = 0; index < balance.value; index++) {\n        try {\n          const tokenId = await nftContract.tokenOfOwnerByIndex(\n            $web3.state.account,\n            index\n          );\n          const uri = await nftContract.tokenURI(tokenId);\n          const ipfsHash = uri.split(\"ipfs://\").pop();\n\n          const res = await axios.get(`https://ipfs.io/ipfs/${ipfsHash}`);\n\n          ids.push({\n            activated: await nftContract.activatedOf(tokenId),\n            tokenId: tokenId.toString(),\n            name: `${res.data.name} #${tokenId.toString()}`,\n            image: res.data.image.split(\"ipfs://\").pop()\n          });\n        } catch (error) {\n          console.log(error);\n        }\n        ``;\n      }\n      tokens.value = ids;\n    };\n\n    watch(balance, loadTokens);\n\n    return {\n      balance,\n      tokens,\n      loadTokens\n    };\n  }\n};\n</script>\n","<template>\n  <div>\n    {{ token.name }}<br />\n    <img :src=\"`https://ipfs.io/ipfs/${token.image}`\" style=\"width: 200px\" />\n    <br />\n    <btn-send\n      v-if=\"!token.activated\"\n      @click=\"(wait) => activate(wait, token.tokenId)\"\n    >\n      Activate\n    </btn-send>\n    <span v-else>activated</span>\n\n    <free-minimum :token=\"token.tokenId\" />\n  </div>\n</template>\n\n<script>\nimport { address } from \"@/config\";\nimport { $web3 } from \"@/plugins/web3\";\nimport { ethers } from \"ethers\";\nimport nft_abi from \"./abi/NFT.json\";\nimport BtnSend from \"./BtnSend.vue\";\nimport FreeMinimum from \"./FreeMinimum.vue\";\n\nexport default {\n  props: [\"token\"],\n  emits: [\"activate\"],\n  components: { BtnSend, FreeMinimum },\n  setup(_, { emit }) {\n    const activate = async (wait, tokenId) => {\n      const nftContract = new ethers.Contract(\n        address.nft,\n        nft_abi,\n        $web3.provider\n      );\n\n      try {\n        const tx = await nftContract.connect($web3.signer).activate(tokenId);\n        await wait(tx);\n        emit(\"activate\", tokenId);\n      } catch (error) {\n        if (error.code === \"CALL_EXCEPTION\" && error.data) {\n          await wait(null, nftContract.interface.parseError(error.data).name);\n        } else {\n          await wait(null, error);\n        }\n      }\n    };\n\n    return {\n      activate\n    };\n  }\n};\n</script>\n","<template>\n  <button\n    @click=\"send\"\n    :disabled=\"status === STATUS.PRE_PROCESS || status === STATUS.WAIT_TX\"\n  >\n    <slot />\n  </button>\n  <div v-if=\"status === STATUS.ERROR\" class=\"error\">{{ error }}</div>\n  <div v-if=\"status === STATUS.READY\" class=\"success\">✓</div>\n</template>\n\n<script>\nimport { ref } from \"vue\";\n\nconst STATUS = {\n  NEW: 1,\n  PRE_PROCESS: 2,\n  WAIT_TX: 3,\n  READY: 4,\n  ERROR: 5\n};\n\nexport default {\n  emits: [\"click\"],\n  setup(_, { emit }) {\n    const status = ref(STATUS.NEW);\n    const error = ref(null);\n\n    const send = async () => {\n      status.value = STATUS.PRE_PROCESS;\n      error.value = null;\n      emit(\"click\", async (tx, e, last = true) => {\n        status.value = STATUS.WAIT_TX;\n        try {\n          if (tx) {\n            const receipt = await tx.wait();\n            console.log(receipt.hash);\n            if (last) {\n              status.value = STATUS.READY;\n            }\n          } else if (e) {\n            if (e.code !== \"ACTION_REJECTED\") {\n              status.value = STATUS.ERROR;\n              error.value = e.code || e;\n            } else {\n              status.value = STATUS.NEW;\n            }\n          }\n        } catch (errorCatch) {\n          status.value = STATUS.ERROR;\n          error.value = errorCatch.message;\n        }\n      });\n    };\n\n    return {\n      STATUS,\n      status,\n      error,\n      send\n    };\n  }\n};\n</script>\n","import { render } from \"./BtnSend.vue?vue&type=template&id=5d3bb413\"\nimport script from \"./BtnSend.vue?vue&type=script&lang=js\"\nexport * from \"./BtnSend.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div>\n    <div v-if=\"received\">free minimum received</div>\n    <div v-else>\n      <div v-if=\"address\">\n        {{ address }}\n        <button\n          @click=\"requestFreeMinimum\"\n          :disabled=\"!avaible || (status !== 1 && status !== 4)\"\n        >\n          Get free minimum\n        </button>\n        <div v-if=\"status === 3\">request sent</div>\n        {{ error }}\n      </div>\n      <div v-else>Not found parachain account</div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { $web3 } from \"@/plugins/web3\";\nimport { computed, ref, watch } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { checkAvailible, getFreeMinimum } from \"./apiNftOracle\";\n\nexport default {\n  props: [\"token\"],\n  setup(props) {\n    const account = ref();\n\n    const store = useStore();\n\n    watch(\n      () => store.state.robonomicsUIvue.polkadot.address,\n      (address) => {\n        try {\n          account.value = store.state.robonomicsUIvue.polkadot.accounts.find(\n            (item) => item.address === address\n          );\n        } catch (e) { console.error(e); }\n      },\n      { immediate: true }\n    );\n\n    const address = computed(() => account.value?.address);\n\n    const error = ref();\n\n    const avaible = ref(false);\n    const check = async () => {\n      const r = await checkAvailible(props.token, $web3.state.account);\n      avaible.value = r[0];\n      error.value = r[1];\n    };\n    check();\n    const timerId = setInterval(check, 10000);\n\n    const received = computed(() => {\n      if (\n        !avaible.value &&\n        error.value === \"Free minimum for this token has already been received\"\n      ) {\n        return true;\n      }\n      return false;\n    });\n    watch(\n      received,\n      (received) => {\n        if (received) {\n          status.value = 1;\n          clearInterval(timerId);\n        }\n      },\n      { immediate: true }\n    );\n\n    const status = ref(1);\n    const requestFreeMinimum = async () => {\n      status.value = 2;\n      const r = await getFreeMinimum(\n        props.token,\n        $web3.state.account,\n        address.value\n      );\n      if (r[0]) {\n        status.value = 3;\n      } else {\n        status.value = 4;\n      }\n      error.value = r[1];\n    };\n\n    return {\n      address,\n      received,\n      avaible,\n      error,\n      status,\n      requestFreeMinimum\n    };\n  }\n};\n</script>\n","import configApp from \"@/config\";\nimport { $web3 } from \"@/plugins/web3\";\nimport axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: `${configApp.nft_oracle_endpoint}api`\n});\n\nexport const checkAvailible = async (token, accountEthereum) => {\n  try {\n    const result = await api.post(\"/check\", {\n      nft: token,\n      address: accountEthereum\n    });\n    if (result.data.result) {\n      return [result.data.result, result.data.error];\n    } else {\n      return [false, result.data.error];\n    }\n  } catch (error) {\n    return [false, error.message];\n  }\n};\n\nexport const getFreeMinimum = async (\n  token,\n  accountEthereum,\n  accauntParachain\n) => {\n  try {\n    const msg = JSON.stringify({\n      nft: token,\n      address: accountEthereum,\n      for: accauntParachain\n    });\n    const signature = await $web3.signer.signMessage(msg);\n\n    const result = await api.post(\"/verify\", {\n      signature,\n      nft: token,\n      address: accountEthereum,\n      for: accauntParachain\n    });\n    if (result.data.result) {\n      return [result.data.result, result.data.error];\n    } else {\n      return [false, result.data.error];\n    }\n  } catch (error) {\n    return [false, error.message];\n  }\n};\n","import { render } from \"./FreeMinimum.vue?vue&type=template&id=329595d0\"\nimport script from \"./FreeMinimum.vue?vue&type=script&lang=js\"\nexport * from \"./FreeMinimum.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./NftToken.vue?vue&type=template&id=48229e54\"\nimport script from \"./NftToken.vue?vue&type=script&lang=js\"\nexport * from \"./NftToken.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./NftInfo.vue?vue&type=template&id=4b2d5a1a\"\nimport script from \"./NftInfo.vue?vue&type=script&lang=js\"\nexport * from \"./NftInfo.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <robo-layout-section>\n    <robo-text title=\"1\">Season pass</robo-text>\n    \n    <hr />\n    {{ store.state.robonomicsUIvue.ethereum.activeAccount }}\n    <hr/>\n    {{store.state.robonomicsUIvue.ethereum.activeProviderRdns}}\n    <div>\n      <div v-if=\"$web3.state.isReady\">\n        <nft-info v-if=\"$web3.state.account\" />\n        <div v-else>Not found account</div>\n      </div>\n      <div v-else>...</div>\n      <div v-if=\"$web3.state.error\">\n        {{ $web3.state.error }}\n      </div>\n    </div>\n  </robo-layout-section>\n</template>\n\n<script setup>\nimport NftInfo from \"@/components/web3/NftInfo.vue\";\nimport { $web3 } from \"@/plugins/web3\";\nimport { watch, onMounted } from \"vue\";\nimport { useStore } from \"vuex\";\n\nconst store = useStore();\n\nconst providers = [];\nconst handler = (event) => providers.push(event.detail);\n\nwatch(\n  () => store.state.robonomicsUIvue.ethereum.activeProviderRdns,\n  async (value) => {\n    const index = providers.findIndex((item) => {\n      if (item.info.rdns === value) {\n        return true;\n      }\n      return false;\n    });\n    if (index >= 0) {\n      try {\n        await $web3.setProvider(providers[index].provider);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n);\n\nwatch(\n  () => store.state.robonomicsUIvue.ethereum.activeAccount,\n  async () => {\n    await $web3.setSigner();\n  }\n);\n\nwindow.addEventListener(\"eip6963:announceProvider\", handler);\nwindow.dispatchEvent(new CustomEvent(\"eip6963:requestProvider\"));\n\nonMounted(async () => {\n  const index = providers.findIndex((item) => {\n      if (item.info.rdns === store.state.robonomicsUIvue.ethereum.activeProviderRdns) {\n        return true;\n      }\n      return false;\n    });\n    if (index >= 0) {\n      try {\n        await $web3.setProvider(providers[index].provider);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    await $web3.setSigner();\n})\n</script>\n","import script from \"./Season-pass-2.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Season-pass-2.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { createRouter, createWebHashHistory } from \"vue-router\";\nimport Home from \"./views/Home.vue\";\nimport PathNotFound from \"./views/PathNotFound.vue\";\nimport RwsActivate from \"./views/RwsActivate.vue\";\nimport RwsSetup from \"./views/RwsSetup.vue\";\nimport RwsSetupNew from \"./views/RwsSetupNew.vue\";\nimport Services from \"./views/Services.vue\";\nimport Telemetry from \"./views/telemetry/Telemetry.vue\";\nimport Altruist from \"./views/hardware/Altruist.vue\";\nimport Riscv from \"./views/hardware/Riscv.vue\";\nimport Hikikomori from \"./views/hardware/Hikikomori.vue\";\nimport Smartsafe from \"./views/hardware/Smart-safe.vue\";\nimport SeasonPass from \"./views/hardware/Season-pass.vue\";\nimport SeasonPass2 from \"./views/hardware/Season-pass-2.vue\";\n\nconst routes = [\n  {\n    path: \"/\",\n    name: \"Home\",\n    component: Home,\n    meta: {\n      title: \"Dashboard\"\n    }\n  },\n  {\n    path: \"/rws-buy\",\n    name: \"rwsActivate\",\n    component: RwsActivate,\n    meta: {\n      title: \"Buy a Subscription\"\n    }\n  },\n  {\n    path: \"/rws-setup\",\n    name: \"rwsSetup\",\n    component: RwsSetup,\n    meta: {\n      title: \"Setup a Subscription\"\n    }\n  },\n  {\n    path: \"/rws-setup-new\",\n    name: \"rwsSetupNew\",\n    component: RwsSetupNew,\n    meta: {\n      title: \"New Subscription setup\"\n    }\n  },\n  {\n    path: \"/telemetry\",\n    name: \"telemetry\",\n    component: Telemetry,\n    meta: {\n      title: \"Devices control panel\"\n    }\n  },\n  {\n    path: \"/services\",\n    name: \"services\",\n    component: Services,\n    meta: {\n      title: \"Services\"\n    }\n  },\n  {\n    path: \"/hardware/altruist\",\n    name: \"Altruist\",\n    component: Altruist,\n    meta: {\n      title: \"Altruist\"\n    }\n  },\n  {\n    path: \"/hardware/riscv\",\n    name: \"Riscv\",\n    component: Riscv,\n    meta: {\n      title: \"Riscv\"\n    }\n  },\n  {\n    path: \"/hardware/hikikomori\",\n    name: \"Hikikomori\",\n    component: Hikikomori,\n    meta: {\n      title: \"Hikikomori\"\n    }\n  },\n  {\n    path: \"/hardware/smart-safe\",\n    name: \"Smartsafe\",\n    component: Smartsafe,\n    meta: {\n      title: \"Smart Safe\"\n    }\n  },\n  {\n    path: \"/hardware/season-pass\",\n    name: \"SeasonPass\",\n    component: SeasonPass,\n    meta: {\n      title: \"Season Pass\"\n    }\n  },\n  {\n    path: \"/hardware/season-pass-2\",\n    name: \"SeasonPass2\",\n    component: SeasonPass2,\n    meta: {\n      title: \"Season Pass 2\"\n    }\n  },\n  { path: \"/:pathMatch(.*)*\", component: PathNotFound }\n];\n\nconst router = createRouter({\n  history: createWebHashHistory(),\n  routes\n});\n\nexport default router;\n","import { createStore } from \"vuex\";\n\nconst store = createStore({\n  state: {\n    name: \"Vue\"\n  }\n});\n\nexport default store;\n","import { fromUnit } from \"./tools\";\nexport default {\n  install: (app) => {\n    app.config.globalProperties.$filters = {\n      balance(value, decimals, symbol) {\n        if (\n          typeof value === \"string\" ||\n          typeof value === \"number\" ||\n          typeof value === \"bigint\"\n        ) {\n          return `${fromUnit(value, decimals, 4)} ${symbol}`;\n        }\n        return \"\";\n      }\n    };\n  }\n};\n","import { Buffer } from \"buffer\";\nimport { robonomicsUI } from \"robonomics-ui-vue\";\nimport { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport ipfs from \"./plugins/ipfs\";\nimport robonomics from \"./plugins/robonomics\";\nimport web3 from \"./plugins/web3\";\nimport router from \"./router\";\nimport store from \"./store\";\nimport filters from \"./utils/filters\";\nimport { showVersion } from \"./utils/tools\";\n\nimport \"robonomics-ui-vue/style.css\";\n\nwindow.Buffer = Buffer;\n\nshowVersion();\n\nconst app = createApp(App);\n\napp\n  .use(router)\n  .use(store)\n  .use(filters)\n  .use(robonomics)\n  .use(web3)\n  .use(ipfs, {\n    api: { gateway: \"https://ipfs.url.today\" },\n    gateways: [\n      \"https://ipfs.url.today/ipfs/\",\n      \"https://ipfs.io/ipfs/\",\n      \"https://gateway.pinata.cloud/ipfs/\",\n      \"https://aira.mypinata.cloud/ipfs/\"\n    ]\n  })\n  .use(robonomicsUI, { store })\n  .mount(\"#app\");\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkdapp_robonomics_network\"] = self[\"webpackChunkdapp_robonomics_network\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(93340); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createBlock","_component_main_layout","pagetitle","$setup","title","_createVNode","_component_router_view","_createElementVNode","class","src","$data","renderComponent","_component_robo_layout_header","logoIcon","$props","nav","_withCtx","_component_robo_section","_component_robo_text","linemiddle","offset","_hoisted_1","_hoisted_2","_component_router_link","to","exact","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_ctx","$store","state","robonomicsUIvue","rws","links","activate","setupnew","setup","list","length","_createElementBlock","_Fragment","key","devices","toDecimal","v","Decimal","toString","round","place","todp","fromUnit","decimals","dp","div","pow","showVersion","console","log","process","toExpNeg","toExpPos","props","type","String","default","inject","data","computed","robonomics","toRaw","this","RobonomicsProvider","instance","value","watch","signer","signRaw","polkadot","address","handlerAccount","handler","extensionObj","immediate","newValue","oldValue","$route","async","$nextTick","methods","isReady","unsubscribeBalance","accounts","account","find","item","name","accountManager","setSender","extension","getBalance","r","transferable","free","sub","frozen","commit","api","registry","chainDecimals","e","error","__exports__","navigation","link","default_rpc_endpoint","nft_oracle_endpoint","xrt","tokenVesting","nft","useRobonomics","provider","getInstance","useDevices","initialOwner","owner","ref","getDevices","endpoint","localStorage","getItem","configApp","lsKey","result","map","toHuman","setItem","JSON","stringify","time","Date","now","cache","parsedData","parse","loadDevices","validateAddress","stop","unsubscribe","events","on","section","method","event","onUnmounted","getRegistry","TypeRegistry","types","PalletRobonomicsRwsSubscription","_enum","Lifetime","tps","Daily","days","PalletRobonomicsRwsSubscriptionLedger","freeWeight","issueTime","lastUpdate","kind","register","useSubscription","dataRaw","shallowRef","getReferenceCallWeight","consts","referenceCallWeight","getLedger","res","isEmpty","toJSON","undefined","createType","DAYS_TO_MS","getFreeWeightCalc","ledger","toNumber","utps","isLifetime","duration_ms","delta","Math","floor","validUntil","issue_time","isDaily","countMonth","isActive","hasSubscription","loadLedger","__props","store","useStore","subscription","active","components","MainLayout","IpfsProvider","router","useRouter","route","useRoute","dispatch","resolve","path","gateways","meta","resulttitle","document","querySelector","setAttribute","connected","render","IpfsApiClient","constructor","authHeader","_create","client","create","_options","url","headers","authorization","isAuth","auth","signature","authHeaderRaw","Buffer","from","authClear","ls","cid","files","file","push","cat","decoder","TextDecoder","content","chunk","decode","stream","add","catViaGateway","gateway","attempts","index","axios","get","Error","catViaGatewaysRotation","message","catViaGateways","controller","AbortController","readFile","response","signal","abort","requests","Promise","any","p","i","then","_","install","app","params","provide","naclOpen","sealed","nonce","senderBoxPublic","receiverBoxSecret","nacl","open","naclSeal","senderBoxSecret","receiverBoxPublic","randomAsU8a","convertSecretKeyToCurve25519","secretKey","ed2curve","convertPublicKeyToCurve25519","publicKey","decryptMessage","encryptedMessageWithNonce","senderPublicKey","messageU8a","u8aToU8a","slice","encryptMessage","recipientPublicKey","nonceIn","u8aConcat","createPair","mnemonic","seed","mnemonicToMiniSecret","pair","ed25519PairFromSeed","encryptor","encodeAddress","ss58Format","AccountManagerDapp","AccountManager","keyring","config","super","loadAll","setReady","beforeSetSender","getPair","loadInjected","afterSetSender","isInjected","setSigner","signMsg","u8aToHex","u8aWrapBytes","addUri","suri","addFromUri","addUriPassword","password","addJsonPassword","json","createFromJson","addPair","pairKey","addFromPair","toJson","decoded","decodePair","base64Decode","encoded","encoding","urlParams","URLSearchParams","window","location","search","Robonomics","createInstance","setAccountManager","CodeError","PROVIDER","NETWORK","ACCOUNT","Web3Error","code","Connector","getProvider","getAccount","getNetworkId","Extension","update","networkId","emit","handleChainChanged","Number","handleAccountsChanged","request","Provider","networks","connector","reactive","block","setConnector","ethers","getSigner","includes","setProvider","warn","getBlock","blockNumber","$web3","web3","_component_robo_layout_section","width","_component_robo_grid","minColumnWidth","_component_robo_card","align","_component_robo_button","size","rwsactive","_component_robo_template_rws_active","weight","gap","columns","_component_robo_grid_item","borderbottom","_toDisplayString","price","_component_robo_details","summary","_component_robo_icon","icon","_component_robo_link","href","freeAuctions","linkActivate","unsubscribeBlock","getAuctionQueue","onBlock","minimalBid","getMinimalBid","bnToBn","priceFormat","created","_component_robo_template_rws_buy","activationtime","available","chainInfoUploaded","chainInfoStatus","rwsExpiration","expiredate","onOnActivate","onActivate","useAccount","onChange","useBalance","balance","useSend","getCallWeight","tx","hasPaymentInfo","paymentInfo","checkWeight","freeWeightCalc","callWeight","createTx","send","call","rpc","system","accountNextIndex","signAndSend","unsubscribeAccount","transaction","setStatus","lt","bid","getFirtsFreeAuction","utility","batch","setDevices","stopWatchEffect","watchEffect","_component_robo_template_rws_setup","onRwsUpdate","rwsUpdateActions","onUserDelete","removeUser","onUserAdd","addUser","onSaveHapass","saveHapass","setupOwner","user","filter","passToSave","userAddress","encodedDevices","passwordForAdmin","decodeAddress","passwordForRecovery","datalog","write","ha","admin","accountOld","onSave","galign","_component_robo_image","script","_component_Libp2p","isKey","onConnected","handlerConnected","onError","handlerError","_component_Launch","_component_robo_template_devices_layout","updateTime","useIpfs","clearJson","string","replaceAll","parseJson","getLastIndex","id","getLastId","getLastDatalog","lastIndex","last","readByIndex","timestamp","u8aToString","getConfigCid","twin_id","twin","getTwin","configHex","Object","keys","utils","catFile","ipfs","decryptData","encryptedMsg","controllerPublicKey","hexToU8a","readFileDecrypt","loadSetup","setupRaw","useSetup","notify","text","timeout","setStatusLaunch","command","status","tx_status","useConfig","getConfig","load","useData","unsubscribeDatalog","watchDatalog","results","success","run","launch","entity_id","stringToU8a","commandCid","cmdString","cmdCrypto","Boolean","createHa","getRequest","pipe","source","uint8ArrayToString","subarray","sendResponse","msg","uint8ArrayFromString","sink","finally","close","handle","protocol","options","runOnTransientConnection","registrar","connection","newStream","createNode","node","createLibp2p","addresses","listen","transports","webSockets","filters","webRTC","circuitRelayTransport","streamMuxers","mplex","connectionEncryption","noise","services","identify","connectionGater","denyDialMultiaddr","connectionManager","minConnections","defaultRelay","peer_id","multiaddr","connectMultiaddress","peer_multiaddress","localMultiaddrs","circuit","peer_multiaddr","localMultiaddr","protos","protoNames","addr","connect","connections","start","updateConnectionsList","getConnections","remoteAddr","peerId","addEventListener","detail","setTimeout","reconnect","listenerMultiaddr","dial","disconnect","protocols","getProtocols","unhandle","sender","emits","isOnce","libp2p_multiaddress","nodeAddress","activegateway","once","Libp2p","Launch","relay","chains","workingchain","mipdstore","createStore","providers","getProviders","subscribe","ethereum","activeAccount","info","rdns","activeProviderRdns","isConnected","_state","tokens","contract","providerethers","curentslide","setslide","s","getEthersProviderObj","getNFT","blockupdate","perms","eth_accounts","some","parentCapability","chain","parseInt","nft_abi","balanceOf","parseFloat","loadTokens","catch","ids","tokenId","tokenOfOwnerByIndex","uri","tokenURI","ipfsHash","split","pop","fetch","activated","activatedOf","image","activateToken","current","findIndex","onMounted","_renderList","token","_component_nft_token","style","_component_btn_send","onClick","_cache","wait","_component_free_minimum","args","disabled","STATUS","PRE_PROCESS","WAIT_TX","_renderSlot","$slots","ERROR","READY","NEW","receipt","hash","errorCatch","received","requestFreeMinimum","avaible","baseURL","checkAvailible","accountEthereum","post","getFreeMinimum","accauntParachain","for","signMessage","check","timerId","setInterval","clearInterval","BtnSend","FreeMinimum","nftContract","interface","parseError","NftToken","dispatchEvent","CustomEvent","routes","component","Home","RwsActivate","RwsSetup","RwsSetupNew","Telemetry","Services","Altruist","Riscv","Hikikomori","Smartsafe","SeasonPass","SeasonPass2","PathNotFound","createRouter","history","createWebHashHistory","globalProperties","$filters","symbol","createApp","App","use","robonomicsUI","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","m","amdO","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","n","getter","__esModule","d","a","leafPrototypes","getProto","getPrototypeOf","obj","__proto__","t","mode","ns","def","indexOf","getOwnPropertyNames","forEach","definition","o","defineProperty","enumerable","g","globalThis","Function","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}